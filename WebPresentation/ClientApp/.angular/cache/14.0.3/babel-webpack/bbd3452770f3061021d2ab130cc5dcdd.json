{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport e from \"../../../core/Error.js\";\nimport { unwrap as r, isNone as s, isSome as o } from \"../../../core/maybe.js\";\nimport { property as i } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as a } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport n from \"../PixelBlock.js\";\nimport l from \"../RasterInfo.js\";\nimport f from \"../RasterStorageInfo.js\";\nimport c from \"./BaseRaster.js\";\nimport { parseSpatialReference as m, parsePAMInfo as p } from \"./pamParser.js\";\nimport { getElement as h, getElementValue as u } from \"./xmlUtilities.js\";\nimport { isPlatformLittleEndian as g } from \"../rasterFormats/utils.js\";\nimport { estimateStatisticsFromHistograms as d } from \"../rasterFunctions/stretchUtils.js\";\nimport y from \"../../../geometry/SpatialReference.js\";\nimport x from \"../../../geometry/Extent.js\";\nimport w from \"../../../geometry/Point.js\";\nconst I = new Map();\nI.set(\"Int8\", \"s8\"), I.set(\"UInt8\", \"u8\"), I.set(\"Int16\", \"s16\"), I.set(\"UInt16\", \"u16\"), I.set(\"Int32\", \"s32\"), I.set(\"UInt32\", \"u32\"), I.set(\"Float32\", \"f32\"), I.set(\"Float64\", \"f32\"), I.set(\"Double64\", \"f32\");\nconst b = new Map();\nb.set(\"none\", {\n  blobExtension: \".til\",\n  isOneSegment: !0,\n  decoderFormat: \"bip\"\n}), b.set(\"lerc\", {\n  blobExtension: \".lrc\",\n  isOneSegment: !1,\n  decoderFormat: \"lerc\"\n}), b.set(\"deflate\", {\n  blobExtension: \".pzp\",\n  isOneSegment: !0,\n  decoderFormat: \"deflate\"\n}), b.set(\"jpeg\", {\n  blobExtension: \".pjg\",\n  isOneSegment: !0,\n  decoderFormat: \"jpg\"\n});\nlet A = class extends c {\n  constructor() {\n    super(...arguments), this._files = null, this._storageIndex = null, this.datasetFormat = \"MRF\";\n  }\n\n  open(t) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.init(), _this.datasetName = _this.url.slice(_this.url.lastIndexOf(\"/\") + 1);\n\n      const e = t ? r(t.signal) : null,\n            o = yield _this.request(_this.url, {\n        responseType: \"xml\",\n        signal: e\n      }),\n            {\n        rasterInfo: i,\n        files: a\n      } = _this._parseHeader(o.data);\n\n      if (-1 === _this.ioConfig.skipExtensions?.indexOf(\"aux.xml\")) {\n        const e = yield _this._fetchAuxiliaryData(t);\n        null != e && (i.statistics = e.statistics ?? i.statistics, i.histograms = e.histograms, e.histograms && s(i.statistics) && (i.statistics = d(e.histograms)));\n      }\n\n      _this._set(\"rasterInfo\", i), _this._files = a;\n      const n = yield _this.request(a.index, {\n        responseType: \"array-buffer\",\n        signal: e\n      });\n      _this._storageIndex = _this._parseIndex(n.data);\n\n      const {\n        blockWidth: l,\n        blockHeight: f\n      } = _this.rasterInfo.storageInfo,\n            c = _this.rasterInfo.storageInfo.pyramidScalingFactor,\n            {\n        width: m,\n        height: p\n      } = _this.rasterInfo,\n            h = [],\n            u = _this._getBandSegmentCount();\n\n      let g = 0,\n          y = -1;\n\n      for (; g < _this._storageIndex.length;) {\n        y++;\n        const t = Math.ceil(m / l / c ** y) - 1,\n              e = Math.ceil(p / f / c ** y) - 1;\n        g += (t + 1) * (e + 1) * u * 4, h.push({\n          maxRow: e,\n          maxCol: t,\n          minCol: 0,\n          minRow: 0\n        });\n      }\n\n      _this.rasterInfo.storageInfo.blockBoundary = h, y > 0 && (_this.rasterInfo.storageInfo.firstPyramidLevel = 1, _this.rasterInfo.storageInfo.maximumPyramidLevel = y), _this.updateTileInfo();\n    })();\n  }\n\n  fetchRawTile(t, e, r, s = {}) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        blockWidth: i,\n        blockHeight: a,\n        blockBoundary: l\n      } = _this2.rasterInfo.storageInfo,\n            f = l[t];\n      if (!f || f.maxRow < e || f.maxCol < r || f.minRow > e || f.minCol > r) return null;\n\n      const {\n        bandCount: c,\n        pixelType: m\n      } = _this2.rasterInfo,\n            {\n        ranges: p,\n        actualTileWidth: h,\n        actualTileHeight: u\n      } = _this2._getTileLocation(t, e, r);\n\n      if (!p || 0 === p.length) return null;\n\n      if (0 === p[0].from && 0 === p[0].to) {\n        const t = new Uint8Array(i * a);\n        return new n({\n          width: i,\n          height: a,\n          pixels: null,\n          mask: t,\n          validPixelCount: 0\n        });\n      }\n\n      const {\n        bandIds: g\n      } = _this2.ioConfig,\n            d = _this2._getBandSegmentCount(),\n            y = [];\n\n      let x = 0;\n\n      for (x = 0; x < d; x++) (!g || g.indexOf[x] > -1) && y.push(_this2.request(_this2._files.data, {\n        range: {\n          from: p[x].from,\n          to: p[x].to\n        },\n        responseType: \"array-buffer\",\n        signal: s.signal\n      }));\n\n      const w = yield Promise.all(y),\n            I = w.map(t => t.data.byteLength).reduce((t, e) => t + e),\n            A = new Uint8Array(I);\n      let F = 0;\n\n      for (x = 0; x < d; x++) A.set(new Uint8Array(w[x].data), F), F += w[x].data.byteLength;\n\n      const _ = b.get(_this2.rasterInfo.storageInfo.compression).decoderFormat,\n            R = yield _this2.decodePixelBlock(A.buffer, {\n        width: i,\n        height: a,\n        format: _,\n        planes: g?.length || c,\n        pixelType: m\n      });\n      if (null == R) return null;\n\n      if (o(_this2.rasterInfo.noDataValue) && \"lerc\" !== _ && !R.mask) {\n        const t = _this2.rasterInfo.noDataValue[0];\n\n        if (null != t) {\n          const e = R.width * R.height,\n                r = new Uint8Array(e);\n          if (Math.abs(t) > 1e24) for (x = 0; x < e; x++) Math.abs((R.pixels[0][x] - t) / t) > 1e-6 && (r[x] = 1);else for (x = 0; x < e; x++) R.pixels[0][x] !== t && (r[x] = 1);\n          R.mask = r;\n        }\n      }\n\n      let S = 0,\n          j = 0;\n\n      if (h !== i || u !== a) {\n        let t = R.mask;\n        if (t) {\n          for (x = 0; x < a; x++) if (j = x * i, x < u) for (S = h; S < i; S++) t[j + S] = 0;else for (S = 0; S < i; S++) t[j + S] = 0;\n        } else for (t = new Uint8Array(i * a), R.mask = t, x = 0; x < u; x++) for (j = x * i, S = 0; S < h; S++) t[j + S] = 1;\n      }\n\n      return R;\n    })();\n  }\n\n  _parseIndex(t) {\n    if (t.byteLength % 16 > 0) throw new Error(\"invalid array buffer must be multiples of 16\");\n    let e, r, s, o, i, a;\n\n    if (g) {\n      for (r = new Uint8Array(t), o = new ArrayBuffer(t.byteLength), s = new Uint8Array(o), i = 0; i < t.byteLength / 4; i++) for (a = 0; a < 4; a++) s[4 * i + a] = r[4 * i + 3 - a];\n\n      e = new Uint32Array(o);\n    } else e = new Uint32Array(t);\n\n    return e;\n  }\n\n  _getBandSegmentCount() {\n    return b.get(this.rasterInfo.storageInfo.compression).isOneSegment ? 1 : this.rasterInfo.bandCount;\n  }\n\n  _getTileLocation(t, e, r) {\n    const {\n      blockWidth: s,\n      blockHeight: o,\n      pyramidScalingFactor: i\n    } = this.rasterInfo.storageInfo,\n          {\n      width: a,\n      height: n\n    } = this.rasterInfo,\n          l = this._getBandSegmentCount();\n\n    let f,\n        c,\n        m,\n        p = 0,\n        h = 0;\n\n    for (m = 0; m < t; m++) h = i ** m, f = Math.ceil(a / s / h), c = Math.ceil(n / o / h), p += f * c;\n\n    h = i ** t, f = Math.ceil(a / s / h), c = Math.ceil(n / o / h), p += e * f + r, p *= 4 * l;\n\n    const u = this._storageIndex.subarray(p, p + 4 * l);\n\n    let g = 0,\n        d = 0;\n    const y = [];\n\n    for (let x = 0; x < l; x++) g = u[4 * x + 0] * 2 ** 32 + u[4 * x + 1], d = g + u[4 * x + 2] * 2 ** 32 + u[4 * x + 3], y.push({\n      from: g,\n      to: d\n    });\n\n    return {\n      ranges: y,\n      actualTileWidth: r < f - 1 ? s : Math.ceil(a / h) - s * (f - 1),\n      actualTileHeight: e < c - 1 ? o : Math.ceil(n / h) - o * (c - 1)\n    };\n  }\n\n  _parseHeader(t) {\n    const r = h(t, \"MRF_META/Raster\");\n    if (!r) throw new e(\"mrf:open\", \"not a valid MRF format\");\n    const s = h(r, \"Size\"),\n          o = parseInt(s.getAttribute(\"x\"), 10),\n          i = parseInt(s.getAttribute(\"y\"), 10),\n          a = parseInt(s.getAttribute(\"c\"), 10),\n          n = (u(r, \"Compression\") || \"none\").toLowerCase();\n    if (!b.has(n)) throw new e(\"mrf:open\", \"currently does not support compression \" + n);\n    const c = u(r, \"DataType\") || \"UInt8\",\n          p = I.get(c);\n    if (null == p) throw new e(\"mrf:open\", \"currently does not support pixel type \" + c);\n    const g = h(r, \"PageSize\"),\n          d = parseInt(g.getAttribute(\"x\"), 10),\n          A = parseInt(g.getAttribute(\"y\"), 10),\n          F = h(r, \"DataValues\");\n\n    let _, R;\n\n    F && (R = F.getAttribute(\"NoData\"), null != R && (_ = R.trim().split(\" \").map(t => parseFloat(t))));\n    if (h(t, \"MRF_META/CachedSource\")) throw new e(\"mrf:open\", \"currently does not support MRF referencing other data files\");\n    const S = h(t, \"MRF_META/GeoTags\"),\n          j = h(S, \"BoundingBox\");\n    let k,\n        M = !1;\n\n    if (null != j) {\n      const t = parseFloat(j.getAttribute(\"minx\")),\n            e = parseFloat(j.getAttribute(\"miny\")),\n            r = parseFloat(j.getAttribute(\"maxx\")),\n            s = parseFloat(j.getAttribute(\"maxy\")),\n            o = u(S, \"Projection\") || \"\";\n      let i = y.WGS84;\n      if (\"LOCAL_CS[]\" !== o) {\n        if (o.toLowerCase().startsWith(\"epsg:\")) {\n          const t = Number(o.slice(5));\n          isNaN(t) || 0 === t || (i = new y({\n            wkid: t\n          }));\n        } else i = m(o) ?? y.WGS84;\n      } else M = !0, i = new y({\n        wkid: 3857\n      });\n      k = new x(t, e, r, s), k.spatialReference = i;\n    } else M = !0, k = new x({\n      xmin: -.5,\n      ymin: .5 - i,\n      xmax: o - .5,\n      ymax: .5,\n      spatialReference: new y({\n        wkid: 3857\n      })\n    });\n\n    const T = h(t, \"MRF_META/Rsets\"),\n          C = parseInt(T && T.getAttribute(\"scale\") || \"2\", 10),\n          U = k.spatialReference,\n          B = new f({\n      origin: new w({\n        x: k.xmin,\n        y: k.ymax,\n        spatialReference: U\n      }),\n      blockWidth: d,\n      blockHeight: A,\n      pyramidBlockWidth: d,\n      pyramidBlockHeight: A,\n      compression: n,\n      pyramidScalingFactor: C\n    }),\n          E = new w({\n      x: k.width / o,\n      y: k.height / i,\n      spatialReference: U\n    }),\n          L = new l({\n      width: o,\n      height: i,\n      extent: k,\n      isPseudoSpatialReference: M,\n      spatialReference: U,\n      bandCount: a,\n      pixelType: p,\n      pixelSize: E,\n      noDataValue: _,\n      storageInfo: B\n    }),\n          P = u(t, \"datafile\"),\n          O = u(t, \"IndexFile\");\n    return {\n      rasterInfo: L,\n      files: {\n        mrf: this.url,\n        index: O || this.url.replace(\".mrf\", \".idx\"),\n        data: P || this.url.replace(\".mrf\", b.get(n).blobExtension)\n      }\n    };\n  }\n\n  _fetchAuxiliaryData(t) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          data: e\n        } = yield _this3.request(_this3.url + \".aux.xml\", {\n          responseType: \"xml\",\n          signal: t?.signal\n        });\n        return p(e);\n      } catch {\n        return null;\n      }\n    })();\n  }\n\n};\nt([i()], A.prototype, \"_files\", void 0), t([i()], A.prototype, \"_storageIndex\", void 0), t([i({\n  type: String,\n  json: {\n    write: !0\n  }\n})], A.prototype, \"datasetFormat\", void 0), A = t([a(\"esri.layers.support.rasterIO.MRFRaster\")], A);\nconst F = A;\nexport { F as default };","map":{"version":3,"names":["_","t","e","unwrap","r","isNone","s","isSome","o","property","i","subclass","a","n","l","f","c","parseSpatialReference","m","parsePAMInfo","p","getElement","h","getElementValue","u","isPlatformLittleEndian","g","estimateStatisticsFromHistograms","d","y","x","w","I","Map","set","b","blobExtension","isOneSegment","decoderFormat","A","constructor","arguments","_files","_storageIndex","datasetFormat","open","init","datasetName","url","slice","lastIndexOf","signal","request","responseType","rasterInfo","files","_parseHeader","data","ioConfig","skipExtensions","indexOf","_fetchAuxiliaryData","statistics","histograms","_set","index","_parseIndex","blockWidth","blockHeight","storageInfo","pyramidScalingFactor","width","height","_getBandSegmentCount","length","Math","ceil","push","maxRow","maxCol","minCol","minRow","blockBoundary","firstPyramidLevel","maximumPyramidLevel","updateTileInfo","fetchRawTile","bandCount","pixelType","ranges","actualTileWidth","actualTileHeight","_getTileLocation","from","to","Uint8Array","pixels","mask","validPixelCount","bandIds","range","Promise","all","map","byteLength","reduce","F","get","compression","R","decodePixelBlock","buffer","format","planes","noDataValue","abs","S","j","Error","ArrayBuffer","Uint32Array","subarray","parseInt","getAttribute","toLowerCase","has","trim","split","parseFloat","k","M","WGS84","startsWith","Number","isNaN","wkid","spatialReference","xmin","ymin","xmax","ymax","T","C","U","B","origin","pyramidBlockWidth","pyramidBlockHeight","E","L","extent","isPseudoSpatialReference","pixelSize","P","O","mrf","replace","prototype","type","String","json","write","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/layers/support/rasterDatasets/MRFRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import e from\"../../../core/Error.js\";import{unwrap as r,isNone as s,isSome as o}from\"../../../core/maybe.js\";import{property as i}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as a}from\"../../../core/accessorSupport/decorators/subclass.js\";import n from\"../PixelBlock.js\";import l from\"../RasterInfo.js\";import f from\"../RasterStorageInfo.js\";import c from\"./BaseRaster.js\";import{parseSpatialReference as m,parsePAMInfo as p}from\"./pamParser.js\";import{getElement as h,getElementValue as u}from\"./xmlUtilities.js\";import{isPlatformLittleEndian as g}from\"../rasterFormats/utils.js\";import{estimateStatisticsFromHistograms as d}from\"../rasterFunctions/stretchUtils.js\";import y from\"../../../geometry/SpatialReference.js\";import x from\"../../../geometry/Extent.js\";import w from\"../../../geometry/Point.js\";const I=new Map;I.set(\"Int8\",\"s8\"),I.set(\"UInt8\",\"u8\"),I.set(\"Int16\",\"s16\"),I.set(\"UInt16\",\"u16\"),I.set(\"Int32\",\"s32\"),I.set(\"UInt32\",\"u32\"),I.set(\"Float32\",\"f32\"),I.set(\"Float64\",\"f32\"),I.set(\"Double64\",\"f32\");const b=new Map;b.set(\"none\",{blobExtension:\".til\",isOneSegment:!0,decoderFormat:\"bip\"}),b.set(\"lerc\",{blobExtension:\".lrc\",isOneSegment:!1,decoderFormat:\"lerc\"}),b.set(\"deflate\",{blobExtension:\".pzp\",isOneSegment:!0,decoderFormat:\"deflate\"}),b.set(\"jpeg\",{blobExtension:\".pjg\",isOneSegment:!0,decoderFormat:\"jpg\"});let A=class extends c{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat=\"MRF\"}async open(t){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const e=t?r(t.signal):null,o=await this.request(this.url,{responseType:\"xml\",signal:e}),{rasterInfo:i,files:a}=this._parseHeader(o.data);if(-1===this.ioConfig.skipExtensions?.indexOf(\"aux.xml\")){const e=await this._fetchAuxiliaryData(t);null!=e&&(i.statistics=e.statistics??i.statistics,i.histograms=e.histograms,e.histograms&&s(i.statistics)&&(i.statistics=d(e.histograms)))}this._set(\"rasterInfo\",i),this._files=a;const n=await this.request(a.index,{responseType:\"array-buffer\",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:l,blockHeight:f}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:m,height:p}=this.rasterInfo,h=[],u=this._getBandSegmentCount();let g=0,y=-1;for(;g<this._storageIndex.length;){y++;const t=Math.ceil(m/l/c**y)-1,e=Math.ceil(p/f/c**y)-1;g+=(t+1)*(e+1)*u*4,h.push({maxRow:e,maxCol:t,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}async fetchRawTile(t,e,r,s={}){const{blockWidth:i,blockHeight:a,blockBoundary:l}=this.rasterInfo.storageInfo,f=l[t];if(!f||f.maxRow<e||f.maxCol<r||f.minRow>e||f.minCol>r)return null;const{bandCount:c,pixelType:m}=this.rasterInfo,{ranges:p,actualTileWidth:h,actualTileHeight:u}=this._getTileLocation(t,e,r);if(!p||0===p.length)return null;if(0===p[0].from&&0===p[0].to){const t=new Uint8Array(i*a);return new n({width:i,height:a,pixels:null,mask:t,validPixelCount:0})}const{bandIds:g}=this.ioConfig,d=this._getBandSegmentCount(),y=[];let x=0;for(x=0;x<d;x++)(!g||g.indexOf[x]>-1)&&y.push(this.request(this._files.data,{range:{from:p[x].from,to:p[x].to},responseType:\"array-buffer\",signal:s.signal}));const w=await Promise.all(y),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),A=new Uint8Array(I);let F=0;for(x=0;x<d;x++)A.set(new Uint8Array(w[x].data),F),F+=w[x].data.byteLength;const _=b.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(A.buffer,{width:i,height:a,format:_,planes:g?.length||c,pixelType:m});if(null==R)return null;if(o(this.rasterInfo.noDataValue)&&\"lerc\"!==_&&!R.mask){const t=this.rasterInfo.noDataValue[0];if(null!=t){const e=R.width*R.height,r=new Uint8Array(e);if(Math.abs(t)>1e24)for(x=0;x<e;x++)Math.abs((R.pixels[0][x]-t)/t)>1e-6&&(r[x]=1);else for(x=0;x<e;x++)R.pixels[0][x]!==t&&(r[x]=1);R.mask=r}}let S=0,j=0;if(h!==i||u!==a){let t=R.mask;if(t)for(x=0;x<a;x++)if(j=x*i,x<u)for(S=h;S<i;S++)t[j+S]=0;else for(S=0;S<i;S++)t[j+S]=0;else for(t=new Uint8Array(i*a),R.mask=t,x=0;x<u;x++)for(j=x*i,S=0;S<h;S++)t[j+S]=1}return R}_parseIndex(t){if(t.byteLength%16>0)throw new Error(\"invalid array buffer must be multiples of 16\");let e,r,s,o,i,a;if(g){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return b.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i}=this.rasterInfo.storageInfo,{width:a,height:n}=this.rasterInfo,l=this._getBandSegmentCount();let f,c,m,p=0,h=0;for(m=0;m<t;m++)h=i**m,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),p+=f*c;h=i**t,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),p+=e*f+r,p*=4*l;const u=this._storageIndex.subarray(p,p+4*l);let g=0,d=0;const y=[];for(let x=0;x<l;x++)g=u[4*x+0]*2**32+u[4*x+1],d=g+u[4*x+2]*2**32+u[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:r<f-1?s:Math.ceil(a/h)-s*(f-1),actualTileHeight:e<c-1?o:Math.ceil(n/h)-o*(c-1)}}_parseHeader(t){const r=h(t,\"MRF_META/Raster\");if(!r)throw new e(\"mrf:open\",\"not a valid MRF format\");const s=h(r,\"Size\"),o=parseInt(s.getAttribute(\"x\"),10),i=parseInt(s.getAttribute(\"y\"),10),a=parseInt(s.getAttribute(\"c\"),10),n=(u(r,\"Compression\")||\"none\").toLowerCase();if(!b.has(n))throw new e(\"mrf:open\",\"currently does not support compression \"+n);const c=u(r,\"DataType\")||\"UInt8\",p=I.get(c);if(null==p)throw new e(\"mrf:open\",\"currently does not support pixel type \"+c);const g=h(r,\"PageSize\"),d=parseInt(g.getAttribute(\"x\"),10),A=parseInt(g.getAttribute(\"y\"),10),F=h(r,\"DataValues\");let _,R;F&&(R=F.getAttribute(\"NoData\"),null!=R&&(_=R.trim().split(\" \").map((t=>parseFloat(t)))));if(h(t,\"MRF_META/CachedSource\"))throw new e(\"mrf:open\",\"currently does not support MRF referencing other data files\");const S=h(t,\"MRF_META/GeoTags\"),j=h(S,\"BoundingBox\");let k,M=!1;if(null!=j){const t=parseFloat(j.getAttribute(\"minx\")),e=parseFloat(j.getAttribute(\"miny\")),r=parseFloat(j.getAttribute(\"maxx\")),s=parseFloat(j.getAttribute(\"maxy\")),o=u(S,\"Projection\")||\"\";let i=y.WGS84;if(\"LOCAL_CS[]\"!==o)if(o.toLowerCase().startsWith(\"epsg:\")){const t=Number(o.slice(5));isNaN(t)||0===t||(i=new y({wkid:t}))}else i=m(o)??y.WGS84;else M=!0,i=new y({wkid:3857});k=new x(t,e,r,s),k.spatialReference=i}else M=!0,k=new x({xmin:-.5,ymin:.5-i,xmax:o-.5,ymax:.5,spatialReference:new y({wkid:3857})});const T=h(t,\"MRF_META/Rsets\"),C=parseInt(T&&T.getAttribute(\"scale\")||\"2\",10),U=k.spatialReference,B=new f({origin:new w({x:k.xmin,y:k.ymax,spatialReference:U}),blockWidth:d,blockHeight:A,pyramidBlockWidth:d,pyramidBlockHeight:A,compression:n,pyramidScalingFactor:C}),E=new w({x:k.width/o,y:k.height/i,spatialReference:U}),L=new l({width:o,height:i,extent:k,isPseudoSpatialReference:M,spatialReference:U,bandCount:a,pixelType:p,pixelSize:E,noDataValue:_,storageInfo:B}),P=u(t,\"datafile\"),O=u(t,\"IndexFile\");return{rasterInfo:L,files:{mrf:this.url,index:O||this.url.replace(\".mrf\",\".idx\"),data:P||this.url.replace(\".mrf\",b.get(n).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+\".aux.xml\",{responseType:\"xml\",signal:t?.signal});return p(e)}catch{return null}}};t([i()],A.prototype,\"_files\",void 0),t([i()],A.prototype,\"_storageIndex\",void 0),t([i({type:String,json:{write:!0}})],A.prototype,\"datasetFormat\",void 0),A=t([a(\"esri.layers.support.rasterIO.MRFRaster\")],A);const F=A;export{F as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}