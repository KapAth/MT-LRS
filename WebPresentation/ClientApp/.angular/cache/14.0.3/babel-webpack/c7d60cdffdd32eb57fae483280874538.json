{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { isNone as i, assertIsSome as s, isSome as r, unwrap as a } from \"../../../core/maybe.js\";\nimport { urlToObject as l } from \"../../../core/urlUtils.js\";\nimport { property as o } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as n } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport c from \"../RasterInfo.js\";\nimport m from \"../RasterStorageInfo.js\";\nimport { readServiceTileInfo as h } from \"../serviceTileInfoProperty.js\";\nimport u from \"../TileInfo.js\";\nimport { TilemapCache as f } from \"../TilemapCache.js\";\nimport p from \"./BaseRaster.js\";\nimport { setValidBoundary as y } from \"../rasterFunctions/pixelUtils.js\";\nimport d from \"../rasterTransforms/GCSShiftTransform.js\";\nimport { fetchServiceRasterInfo as x } from \"../../../rest/imageService/fetchRasterInfo.js\";\nimport g from \"../../../geometry/SpatialReference.js\";\nimport v from \"../../../geometry/Point.js\";\nimport S from \"../../../geometry/Extent.js\";\nlet I = class extends p {\n  constructor() {\n    super(...arguments), this._levelOffset = 0, this._tilemapCache = null, this._slices = null, this.datasetFormat = \"RasterTileServer\", this.tileType = null;\n  }\n\n  open(e) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.init();\n      const r = e && e.signal,\n            a = _this.sourceJSON ? {\n        data: _this.sourceJSON\n      } : yield _this.request(_this.url, {\n        query: {\n          f: \"json\"\n        },\n        signal: r\n      });\n      a.ssl && (_this.url = _this.url.replace(/^http:/i, \"https:\"));\n      const o = a.data;\n      if (_this.sourceJSON = o, !o) throw new t(\"imageserverraster:open\", \"cannot initialize tiled image service, missing service info\");\n      if (!o.tileInfo) throw new t(\"imageserverraster:open\", \"use ImageryLayer to open non-tiled image services\");\n\n      _this._fixScaleInServiceInfo();\n\n      const n = [\"jpg\", \"jpeg\", \"png\", \"png8\", \"png24\", \"png32\", \"mixed\"];\n      _this.tileType = o.cacheType, null == _this.tileType && (n.includes(o.tileInfo.format.toLowerCase()) ? _this.tileType = \"Map\" : \"lerc\" === o.tileInfo.format.toLowerCase() ? _this.tileType = \"Elevation\" : _this.tileType = \"Raster\"), _this.datasetName = o.name?.slice(o.name.indexOf(\"/\") + 1) ?? \"\";\n      const c = yield _this._fetchRasterInfo({\n        signal: r\n      });\n      if (i(c)) throw new t(\"image-server-raster:open\", \"cannot initialize image service\");\n      const p = \"Map\" === _this.tileType ? h(o.tileInfo, o) : u.fromJSON(o.tileInfo);\n      s(p);\n\n      const [y, d] = _this._computeMinMaxLOD(c, p),\n            {\n        extent: x,\n        pixelSize: g\n      } = c,\n            v = .5 / c.width * g.x,\n            S = Math.max(g.x, g.y),\n            {\n        lods: I\n      } = p;\n\n      (\"Map\" !== _this.tileType && 0 !== o.maxScale || Math.abs(g.x - g.y) > v || !I.some(e => Math.abs(e.resolution - S) < v)) && (g.x = g.y = y.resolution, c.width = Math.ceil((x.xmax - x.xmin) / g.x - .1), c.height = Math.ceil((x.ymax - x.ymin) / g.y - .1));\n      const w = y.level - d.level,\n            [j, T] = p.size,\n            b = [],\n            M = [];\n      I.forEach((e, t) => {\n        e.level >= d.level && e.level <= y.level && b.push({\n          x: e.resolution,\n          y: e.resolution\n        }), t < I.length - 1 && M.push(Math.round(10 * e.resolution / I[t + 1].resolution) / 10);\n      }), b.sort((e, t) => e.x - t.x);\n\n      const _ = _this.computeBlockBoundary(x, j, T, p.origin, b, w),\n            R = b.length > 1 ? b.slice(1) : null;\n\n      let z;\n      o.transposeInfo && (z = {\n        tileSize: [o.transposeInfo.rows, o.transposeInfo.cols],\n        packetSize: c.keyProperties?._yxs.PacketSize ?? 0\n      });\n      const P = M.length <= 1 || M.length >= 3 && M.slice(0, M.length - 1).every(e => e === M[0]) ? M[0] ?? 2 : Math.round(10 / (d.resolution / y.resolution) ** (-1 / w)) / 10;\n\n      if (c.storageInfo = new m({\n        blockWidth: p.size[0],\n        blockHeight: p.size[1],\n        pyramidBlockWidth: p.size[0],\n        pyramidBlockHeight: p.size[1],\n        pyramidResolutions: R,\n        pyramidScalingFactor: P,\n        compression: p.format,\n        origin: p.origin,\n        firstPyramidLevel: 1,\n        maximumPyramidLevel: w,\n        tileInfo: p,\n        transposeInfo: z,\n        blockBoundary: _\n      }), _this._fixGCSShift(c), _this._set(\"rasterInfo\", c), o.capabilities.toLowerCase().includes(\"tilemap\")) {\n        const e = {\n          tileInfo: c.storageInfo.tileInfo,\n          parsedUrl: l(_this.url),\n          url: _this.url,\n          tileServers: [],\n          type: \"tile\"\n        };\n        _this._tilemapCache = new f({\n          layer: e\n        });\n      }\n    })();\n  }\n\n  fetchRawTile(e, t, i, s = {}) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        storageInfo: l,\n        extent: o\n      } = _this2.rasterInfo,\n            {\n        transposeInfo: n\n      } = l,\n            c = r(n) && !!s.transposedVariableName;\n      if (_this2._slices && !c && null == s.sliceId) return null;\n      const m = c ? 0 : l.maximumPyramidLevel - e + _this2._levelOffset,\n            h = `${_this2.url}/tile/${m}/${t}/${i}`,\n            u = _this2._slices ? c ? {\n        variable: s.transposedVariableName\n      } : {\n        sliceId: s.sliceId || 0\n      } : null,\n            {\n        data: f\n      } = yield _this2.request(h, {\n        query: u,\n        responseType: \"array-buffer\",\n        signal: s.signal\n      });\n      if (!f) return null;\n      const p = c ? n.tileSize : l.tileInfo.size,\n            d = yield _this2.decodePixelBlock(f, {\n        width: p[0],\n        height: p[1],\n        planes: null,\n        pixelType: null,\n        isPoint: \"Elevation\" === _this2.tileType,\n        returnInterleaved: c,\n        noDataValue: a(_this2.rasterInfo.noDataValue)\n      });\n      if (null == d) return null;\n      const x = l.blockBoundary[e];\n      if (\"jpg\" !== l.compression || i > x.minCol && i < x.maxCol && t > x.minRow && t < x.maxRow) return d;\n\n      const {\n        origin: g,\n        blockWidth: v,\n        blockHeight: S\n      } = l,\n            {\n        x: I,\n        y: w\n      } = _this2.getPyramidPixelSize(e),\n            j = Math.round((o.xmin - g.x) / I) % v,\n            T = Math.round((o.xmax - g.x) / I) % v || v,\n            b = Math.round((g.y - o.ymax) / w) % S,\n            M = Math.round((g.y - o.ymin) / w) % S || S,\n            _ = i === x.minCol ? j : 0,\n            R = t === x.minRow ? b : 0,\n            z = i === x.maxCol ? T : v,\n            P = t === x.maxRow ? M : S;\n\n      return y(d, {\n        x: _,\n        y: R\n      }, {\n        width: z - _,\n        height: P - R\n      }), d;\n    })();\n  }\n\n  getSliceIndex(e) {\n    if (!this._slices || i(e) || 0 === e.length) return null;\n    const t = e;\n\n    for (let i = 0; i < this._slices.length; i++) {\n      const e = this._slices[i].multidimensionalDefinition;\n      if (e.length === t.length && !e.some(e => {\n        const i = t.find(t => e.variableName === t.variableName && t.dimensionName === e.dimensionName);\n        if (!i) return !0;\n        return (Array.isArray(e.values[0]) ? `${e.values[0][0]}-${e.values[0][1]}` : e.values[0]) !== (Array.isArray(i.values[0]) ? `${i.values[0][0]}-${i.values[0][1]}` : i.values[0]);\n      })) return i;\n    }\n\n    return null;\n  }\n\n  fetchVariableStatisticsHistograms(e, t) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const i = _this3.request(_this3.url + \"/statistics\", {\n        query: {\n          variable: e,\n          f: \"json\"\n        },\n        signal: t\n      }).then(e => e.data?.statistics),\n            s = _this3.request(_this3.url + \"/histograms\", {\n        query: {\n          variable: e,\n          f: \"json\"\n        },\n        signal: t\n      }).then(e => e.data?.histograms),\n            r = yield Promise.all([i, s]);\n\n      return r[0] && r[0].forEach(e => {\n        e.avg = e.mean, e.stddev = e.standardDeviation;\n      }), {\n        statistics: r[0] || null,\n        histograms: r[1] || null\n      };\n    })();\n  }\n\n  computeBestPyramidLevelForLocation(e, t = {}) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this4._tilemapCache) return 0;\n\n      let i = _this4.identifyPixelLocation(e, 0, a(t.datumTransformation));\n\n      if (null === i) return null;\n      let s = 0;\n      const {\n        maximumPyramidLevel: r\n      } = _this4.rasterInfo.storageInfo;\n      let l = r - s + _this4._levelOffset;\n      const o = i.srcLocation;\n\n      for (; l >= 0;) {\n        try {\n          if (\"available\" === (yield _this4._tilemapCache.fetchAvailability(l, i.row, i.col, t))) break;\n        } catch {}\n\n        if (l--, s++, i = _this4.identifyPixelLocation(o, s, a(t.datumTransformation)), null === i) return null;\n      }\n\n      return -1 === l || null == i ? null : s;\n    })();\n  }\n\n  _fetchRasterInfo(e) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const t = _this5.sourceJSON;\n\n      if (\"Map\" === _this5.tileType) {\n        const e = t.fullExtent || t.extent,\n              i = Math.ceil((e.xmax - e.xmin) / t.pixelSizeX - .1),\n              s = Math.ceil((e.ymax - e.ymin) / t.pixelSizeY - .1),\n              r = g.fromJSON(t.spatialReference || e.spatialReference),\n              a = new v({\n          x: t.pixelSizeX,\n          y: t.pixelSizeY,\n          spatialReference: r\n        });\n        return new c({\n          width: i,\n          height: s,\n          bandCount: 3,\n          extent: S.fromJSON(e),\n          spatialReference: r,\n          pixelSize: a,\n          pixelType: \"u8\",\n          statistics: null,\n          keyProperties: {\n            DataType: \"processed\"\n          }\n        });\n      }\n\n      const {\n        signal: i\n      } = e,\n            s = x(_this5.url, _this5.sourceJSON, {\n        signal: i,\n        query: _this5.ioConfig.customFetchParameters\n      }),\n            r = t.hasMultidimensions ? _this5.request(`${_this5.url}/slices`, {\n        query: {\n          f: \"json\"\n        },\n        signal: i\n      }).then(e => e.data && e.data.slices).catch(() => null) : null,\n            a = yield Promise.all([s, r]);\n      return _this5._slices = a[1], a[0];\n    })();\n  }\n\n  _fixScaleInServiceInfo() {\n    const {\n      sourceJSON: e\n    } = this;\n    e.minScale && e.minScale < 0 && (e.minScale = 0), e.maxScale && e.maxScale < 0 && (e.maxScale = 0);\n  }\n\n  _fixGCSShift(e) {\n    const {\n      extent: t,\n      spatialReference: i\n    } = e;\n    t.xmin > -1 && t.xmax > 181 && i?.wkid && i.isGeographic && (e.nativeExtent = e.extent, e.transform = new d(), e.extent = e.transform.forwardTransform(t));\n  }\n\n  _computeMinMaxLOD(e, t) {\n    const {\n      pixelSize: i\n    } = e,\n          s = .5 / e.width * i.x,\n          {\n      lods: r\n    } = t,\n          a = t.lodAt(Math.max.apply(null, r.map(e => e.level))),\n          l = t.lodAt(Math.min.apply(null, r.map(e => e.level))),\n          {\n      tileType: o\n    } = this;\n    if (\"Map\" === o) return this._levelOffset = r[0].level, [a, l];\n\n    if (\"Raster\" === o) {\n      return [r.find(e => e.resolution === i.x) ?? a, l];\n    }\n\n    const {\n      minScale: n,\n      maxScale: c\n    } = this.sourceJSON;\n    let m = a;\n    c > 0 && (m = r.find(e => Math.abs(e.scale - c) < s), m || (m = r.filter(e => e.scale > c).sort((e, t) => e.scale > t.scale ? 1 : -1)[0] ?? a));\n    let h = l;\n    return n > 0 && (h = r.find(e => Math.abs(e.scale - n) < s) ?? l, this._levelOffset = h.level - l.level), [m, h];\n  }\n\n};\ne([o({\n  type: String,\n  json: {\n    write: !0\n  }\n})], I.prototype, \"datasetFormat\", void 0), e([o()], I.prototype, \"tileType\", void 0), I = e([n(\"esri.layers.support.rasterDatasets.ImageServerRaster\")], I);\nconst w = I;\nexport { w as default };","map":{"version":3,"names":["_","e","t","isNone","i","assertIsSome","s","isSome","r","unwrap","a","urlToObject","l","property","o","subclass","n","c","m","readServiceTileInfo","h","u","TilemapCache","f","p","setValidBoundary","y","d","fetchServiceRasterInfo","x","g","v","S","I","constructor","arguments","_levelOffset","_tilemapCache","_slices","datasetFormat","tileType","open","init","signal","sourceJSON","data","request","url","query","ssl","replace","tileInfo","_fixScaleInServiceInfo","cacheType","includes","format","toLowerCase","datasetName","name","slice","indexOf","_fetchRasterInfo","fromJSON","_computeMinMaxLOD","extent","pixelSize","width","Math","max","lods","maxScale","abs","some","resolution","ceil","xmax","xmin","height","ymax","ymin","w","level","j","T","size","b","M","forEach","push","length","round","sort","computeBlockBoundary","origin","R","z","transposeInfo","tileSize","rows","cols","packetSize","keyProperties","_yxs","PacketSize","P","every","storageInfo","blockWidth","blockHeight","pyramidBlockWidth","pyramidBlockHeight","pyramidResolutions","pyramidScalingFactor","compression","firstPyramidLevel","maximumPyramidLevel","blockBoundary","_fixGCSShift","_set","capabilities","parsedUrl","tileServers","type","layer","fetchRawTile","rasterInfo","transposedVariableName","sliceId","variable","responseType","decodePixelBlock","planes","pixelType","isPoint","returnInterleaved","noDataValue","minCol","maxCol","minRow","maxRow","getPyramidPixelSize","getSliceIndex","multidimensionalDefinition","find","variableName","dimensionName","Array","isArray","values","fetchVariableStatisticsHistograms","then","statistics","histograms","Promise","all","avg","mean","stddev","standardDeviation","computeBestPyramidLevelForLocation","identifyPixelLocation","datumTransformation","srcLocation","fetchAvailability","row","col","fullExtent","pixelSizeX","pixelSizeY","spatialReference","bandCount","DataType","ioConfig","customFetchParameters","hasMultidimensions","slices","catch","minScale","wkid","isGeographic","nativeExtent","transform","forwardTransform","lodAt","apply","map","min","scale","filter","String","json","write","prototype","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/layers/support/rasterDatasets/ImageServerRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{isNone as i,assertIsSome as s,isSome as r,unwrap as a}from\"../../../core/maybe.js\";import{urlToObject as l}from\"../../../core/urlUtils.js\";import{property as o}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as n}from\"../../../core/accessorSupport/decorators/subclass.js\";import c from\"../RasterInfo.js\";import m from\"../RasterStorageInfo.js\";import{readServiceTileInfo as h}from\"../serviceTileInfoProperty.js\";import u from\"../TileInfo.js\";import{TilemapCache as f}from\"../TilemapCache.js\";import p from\"./BaseRaster.js\";import{setValidBoundary as y}from\"../rasterFunctions/pixelUtils.js\";import d from\"../rasterTransforms/GCSShiftTransform.js\";import{fetchServiceRasterInfo as x}from\"../../../rest/imageService/fetchRasterInfo.js\";import g from\"../../../geometry/SpatialReference.js\";import v from\"../../../geometry/Point.js\";import S from\"../../../geometry/Extent.js\";let I=class extends p{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat=\"RasterTileServer\",this.tileType=null}async open(e){await this.init();const r=e&&e.signal,a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:\"json\"},signal:r});a.ssl&&(this.url=this.url.replace(/^http:/i,\"https:\"));const o=a.data;if(this.sourceJSON=o,!o)throw new t(\"imageserverraster:open\",\"cannot initialize tiled image service, missing service info\");if(!o.tileInfo)throw new t(\"imageserverraster:open\",\"use ImageryLayer to open non-tiled image services\");this._fixScaleInServiceInfo();const n=[\"jpg\",\"jpeg\",\"png\",\"png8\",\"png24\",\"png32\",\"mixed\"];this.tileType=o.cacheType,null==this.tileType&&(n.includes(o.tileInfo.format.toLowerCase())?this.tileType=\"Map\":\"lerc\"===o.tileInfo.format.toLowerCase()?this.tileType=\"Elevation\":this.tileType=\"Raster\"),this.datasetName=o.name?.slice(o.name.indexOf(\"/\")+1)??\"\";const c=await this._fetchRasterInfo({signal:r});if(i(c))throw new t(\"image-server-raster:open\",\"cannot initialize image service\");const p=\"Map\"===this.tileType?h(o.tileInfo,o):u.fromJSON(o.tileInfo);s(p);const[y,d]=this._computeMinMaxLOD(c,p),{extent:x,pixelSize:g}=c,v=.5/c.width*g.x,S=Math.max(g.x,g.y),{lods:I}=p;(\"Map\"!==this.tileType&&0!==o.maxScale||Math.abs(g.x-g.y)>v||!I.some((e=>Math.abs(e.resolution-S)<v)))&&(g.x=g.y=y.resolution,c.width=Math.ceil((x.xmax-x.xmin)/g.x-.1),c.height=Math.ceil((x.ymax-x.ymin)/g.y-.1));const w=y.level-d.level,[j,T]=p.size,b=[],M=[];I.forEach(((e,t)=>{e.level>=d.level&&e.level<=y.level&&b.push({x:e.resolution,y:e.resolution}),t<I.length-1&&M.push(Math.round(10*e.resolution/I[t+1].resolution)/10)})),b.sort(((e,t)=>e.x-t.x));const _=this.computeBlockBoundary(x,j,T,p.origin,b,w),R=b.length>1?b.slice(1):null;let z;o.transposeInfo&&(z={tileSize:[o.transposeInfo.rows,o.transposeInfo.cols],packetSize:c.keyProperties?._yxs.PacketSize??0});const P=M.length<=1||M.length>=3&&M.slice(0,M.length-1).every((e=>e===M[0]))?M[0]??2:Math.round(10/(d.resolution/y.resolution)**(-1/w))/10;if(c.storageInfo=new m({blockWidth:p.size[0],blockHeight:p.size[1],pyramidBlockWidth:p.size[0],pyramidBlockHeight:p.size[1],pyramidResolutions:R,pyramidScalingFactor:P,compression:p.format,origin:p.origin,firstPyramidLevel:1,maximumPyramidLevel:w,tileInfo:p,transposeInfo:z,blockBoundary:_}),this._fixGCSShift(c),this._set(\"rasterInfo\",c),o.capabilities.toLowerCase().includes(\"tilemap\")){const e={tileInfo:c.storageInfo.tileInfo,parsedUrl:l(this.url),url:this.url,tileServers:[],type:\"tile\"};this._tilemapCache=new f({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:l,extent:o}=this.rasterInfo,{transposeInfo:n}=l,c=r(n)&&!!s.transposedVariableName;if(this._slices&&!c&&null==s.sliceId)return null;const m=c?0:l.maximumPyramidLevel-e+this._levelOffset,h=`${this.url}/tile/${m}/${t}/${i}`,u=this._slices?c?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:f}=await this.request(h,{query:u,responseType:\"array-buffer\",signal:s.signal});if(!f)return null;const p=c?n.tileSize:l.tileInfo.size,d=await this.decodePixelBlock(f,{width:p[0],height:p[1],planes:null,pixelType:null,isPoint:\"Elevation\"===this.tileType,returnInterleaved:c,noDataValue:a(this.rasterInfo.noDataValue)});if(null==d)return null;const x=l.blockBoundary[e];if(\"jpg\"!==l.compression||i>x.minCol&&i<x.maxCol&&t>x.minRow&&t<x.maxRow)return d;const{origin:g,blockWidth:v,blockHeight:S}=l,{x:I,y:w}=this.getPyramidPixelSize(e),j=Math.round((o.xmin-g.x)/I)%v,T=Math.round((o.xmax-g.x)/I)%v||v,b=Math.round((g.y-o.ymax)/w)%S,M=Math.round((g.y-o.ymin)/w)%S||S,_=i===x.minCol?j:0,R=t===x.minRow?b:0,z=i===x.maxCol?T:v,P=t===x.maxRow?M:S;return y(d,{x:_,y:R},{width:z-_,height:P-R}),d}getSliceIndex(e){if(!this._slices||i(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));if(!i)return!0;return(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+\"/statistics\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+\"/histograms\",{query:{variable:e,f:\"json\"},signal:t}).then((e=>e.data?.histograms)),r=await Promise.all([i,s]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,a(t.datumTransformation));if(null===i)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let l=r-s+this._levelOffset;const o=i.srcLocation;for(;l>=0;){try{if(\"available\"===await this._tilemapCache.fetchAvailability(l,i.row,i.col,t))break}catch{}if(l--,s++,i=this.identifyPixelLocation(o,s,a(t.datumTransformation)),null===i)return null}return-1===l||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON;if(\"Map\"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=g.fromJSON(t.spatialReference||e.spatialReference),a=new v({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new c({width:i,height:s,bandCount:3,extent:S.fromJSON(e),spatialReference:r,pixelSize:a,pixelType:\"u8\",statistics:null,keyProperties:{DataType:\"processed\"}})}const{signal:i}=e,s=x(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:\"json\"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,a=await Promise.all([s,r]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new d,e.extent=e.transform.forwardTransform(t))}_computeMinMaxLOD(e,t){const{pixelSize:i}=e,s=.5/e.width*i.x,{lods:r}=t,a=t.lodAt(Math.max.apply(null,r.map((e=>e.level)))),l=t.lodAt(Math.min.apply(null,r.map((e=>e.level)))),{tileType:o}=this;if(\"Map\"===o)return this._levelOffset=r[0].level,[a,l];if(\"Raster\"===o){return[r.find((e=>e.resolution===i.x))??a,l]}const{minScale:n,maxScale:c}=this.sourceJSON;let m=a;c>0&&(m=r.find((e=>Math.abs(e.scale-c)<s)),m||(m=r.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??a));let h=l;return n>0&&(h=r.find((e=>Math.abs(e.scale-n)<s))??l,this._levelOffset=h.level-l.level),[m,h]}};e([o({type:String,json:{write:!0}})],I.prototype,\"datasetFormat\",void 0),e([o()],I.prototype,\"tileType\",void 0),I=e([n(\"esri.layers.support.rasterDatasets.ImageServerRaster\")],I);const w=I;export{w as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}