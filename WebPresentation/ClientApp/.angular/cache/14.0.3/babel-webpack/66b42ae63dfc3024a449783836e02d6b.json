{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport \"../../../../core/has.js\";\nimport { FreeList as e } from \"./FreeList.js\";\nimport { allocateTypedArrayBuffer as t, strideToPackingFactor as r, copyMeshData as i } from \"./Utils.js\";\nconst s = [\"FILL\", \"LINE\", \"MARKER\", \"TEXT\", \"LABEL\"];\n\nfunction o(e) {\n  const t = e.getStrides(),\n        r = {};\n\n  for (let i = 0; i < t.length; i++) r[s[i]] = t[i];\n\n  return r;\n}\n\nconst n = .5;\n\nclass d {\n  constructor(r, i, s, o) {\n    this._strides = r, this._displayList = i, this._freeListsAndStorage = {}, this._dirtyMap = null, this._dirtyMap = s;\n\n    for (const n in r) {\n      this._freeListsAndStorage[n] = {\n        vtxFreeList: o ? new e(o) : null,\n        idxFreeList: o ? new e(o) : null,\n        vertexBuffers: {},\n        indexBuffer: o ? new Uint32Array(o) : null\n      };\n\n      for (const e in r[n]) this._freeListsAndStorage[n].vertexBuffers[e] = {\n        data: o ? t(o, r[n][e]) : null,\n        stride: r[n][e]\n      };\n    }\n  }\n\n  static fromTileData(t, i) {\n    const n = o(t),\n          a = [0, 0, 0, 0, 0],\n          x = [0, 0, 0, 0, 0];\n\n    for (const e of t.tileDisplayData.displayObjects) for (const t of e.displayRecords) a[t.geometryType] = Math.max(a[t.geometryType], t.vertexFrom + t.vertexCount), x[t.geometryType] = Math.max(x[t.geometryType], t.indexFrom + t.indexCount);\n\n    const u = new d(n, t.tileDisplayData.displayList, i, void 0),\n          f = t.tileBufferData?.geometries ?? [];\n\n    for (let o = 0; o < f.length; ++o) {\n      const t = a[o],\n            i = x[o],\n            n = f[o],\n            d = s[o],\n            l = u._storageFor(d),\n            c = f[o].indexBuffer;\n\n      l.indexBuffer = c, l.idxFreeList = new e(c.length), l.idxFreeList.allocate(i);\n      let m = 0;\n\n      for (const e in n.vertexBuffer) {\n        const t = f[o].vertexBuffer[e];\n        l.vertexBuffers[e].data = t.data, l.vertexBuffers[e].stride = t.stride;\n        const i = r(t.stride),\n              s = t.data.length * i / t.stride;\n        m || (m = s);\n      }\n\n      l.vtxFreeList = new e(m), l.vtxFreeList.allocate(t);\n    }\n\n    return u;\n  }\n\n  delete(e) {\n    const t = s[e.geometryType];\n    this._freeVertices(t, e.vertexFrom, e.vertexCount), this._freeIndices(t, e.indexFrom, e.indexCount), this._displayList.removeFromList(e), e.vertexFrom = void 0, e.indexFrom = void 0;\n  }\n\n  setMeshData(e, t, r, o, n) {\n    const d = s[e.geometryType];\n    let a, x;\n    e.meshData = null, void 0 === e.vertexFrom ? (x = t.vertexCount, a = this._allocateVertices(d, x)) : t.vertexCount > e.vertexCount ? (this._freeVertices(d, e.vertexFrom, e.vertexCount), x = t.vertexCount, a = this._allocateVertices(d, x)) : t.vertexCount === e.vertexCount ? (a = e.vertexFrom, x = e.vertexCount) : (this._freeVertices(d, e.vertexFrom + t.vertexCount, e.vertexCount - t.vertexCount), a = e.vertexFrom, x = t.vertexCount);\n    let u,\n        f,\n        l,\n        c = !0;\n\n    if (void 0 === e.indexFrom ? (u = n, l = t.indexCount, f = this._allocateIndices(d, l)) : t.indexCount > e.indexCount ? (u = this._displayList.removeFromList(e), this._freeIndices(d, e.indexFrom, e.indexCount), l = t.indexCount, f = this._allocateIndices(d, l)) : t.indexCount === e.indexCount ? (c = !1, f = e.indexFrom, l = e.indexCount) : (u = this._displayList.removeFromList(e), this._freeIndices(d, e.indexFrom + t.indexCount, e.indexCount - t.indexCount), f = e.indexFrom, l = t.indexCount), -1 !== a && -1 !== f) {\n      const s = this._storageFor(d);\n\n      if (i(a, f, s.vertexBuffers, s.indexBuffer, t, r, o), e.vertexFrom = a, e.indexFrom = f, e.vertexCount = t.vertexCount, e.indexCount = t.indexCount, this._dirtyMap) {\n        this._dirtyMap.markDirtyIndices(e.geometryType, e.indexFrom, e.indexCount);\n\n        for (const t in r) this._dirtyMap.markDirtyVertices(e.geometryType, t, e.vertexFrom, e.vertexCount);\n      }\n\n      return c && this._displayList.addToList(e, u), !0;\n    }\n\n    return -1 !== a && this._freeVertices(d, a, x), -1 !== f && this._freeIndices(d, f, l), e.setMeshDataFromBuffers(t, r, o), e.vertexFrom = void 0, e.vertexCount = 0, e.indexFrom = void 0, e.indexCount = 0, !1;\n  }\n\n  tryAddMeshData(e, t) {\n    const r = t.vertexBuffer,\n          o = t.indexBuffer,\n          n = s[e.geometryType],\n          d = this._allocateVertices(n, e.vertexCount);\n\n    if (-1 === d) return this._freeVertices(n, d, e.vertexCount), !1;\n\n    const a = this._allocateIndices(n, e.indexCount);\n\n    if (-1 === a) return this._freeVertices(n, d, e.vertexCount), this._freeIndices(n, a, e.indexCount), !1;\n\n    const x = this._storageFor(n);\n\n    if (i(d, a, x.vertexBuffers, x.indexBuffer, e, r, o), e.vertexFrom = d, e.indexFrom = a, this._dirtyMap) {\n      this._dirtyMap.markDirtyIndices(e.geometryType, e.indexFrom, e.indexCount);\n\n      for (const t in r) this._dirtyMap.markDirtyVertices(e.geometryType, t, d, e.vertexCount);\n    }\n\n    return this._displayList.addToList(e), !0;\n  }\n\n  _allocateVertices(e, t) {\n    const r = this._storageFor(e),\n          i = r.vtxFreeList?.allocate(t);\n\n    if (null == i || -1 === i) return -1;\n    const s = r.vtxFreeList?.fragmentation;\n    return null == s || s > n ? -1 : i;\n  }\n\n  _freeVertices(e, t, r) {\n    this._storageFor(e).vtxFreeList?.free(t, r);\n  }\n\n  _freeIndices(e, t, r) {\n    this._storageFor(e).idxFreeList?.free(t, r);\n  }\n\n  _allocateIndices(e, t) {\n    const r = this._storageFor(e),\n          i = r.idxFreeList?.allocate(t);\n\n    if (null == i || -1 === i) return -1;\n    const s = r.idxFreeList?.fragmentation;\n    return null == s || s > n ? -1 : i;\n  }\n\n  _storageFor(e) {\n    return this._freeListsAndStorage[e];\n  }\n\n  _stridesFor(e, t) {\n    return this._strides[e][t];\n  }\n\n}\n\nexport { d as default };","map":{"version":3,"names":["FreeList","e","allocateTypedArrayBuffer","t","strideToPackingFactor","r","copyMeshData","i","s","o","getStrides","length","n","d","constructor","_strides","_displayList","_freeListsAndStorage","_dirtyMap","vtxFreeList","idxFreeList","vertexBuffers","indexBuffer","Uint32Array","data","stride","fromTileData","a","x","tileDisplayData","displayObjects","displayRecords","geometryType","Math","max","vertexFrom","vertexCount","indexFrom","indexCount","u","displayList","f","tileBufferData","geometries","l","_storageFor","c","allocate","m","vertexBuffer","delete","_freeVertices","_freeIndices","removeFromList","setMeshData","meshData","_allocateVertices","_allocateIndices","markDirtyIndices","markDirtyVertices","addToList","setMeshDataFromBuffers","tryAddMeshData","fragmentation","free","_stridesFor","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/views/2d/engine/webgl/DisplayRecordStore.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{FreeList as e}from\"./FreeList.js\";import{allocateTypedArrayBuffer as t,strideToPackingFactor as r,copyMeshData as i}from\"./Utils.js\";const s=[\"FILL\",\"LINE\",\"MARKER\",\"TEXT\",\"LABEL\"];function o(e){const t=e.getStrides(),r={};for(let i=0;i<t.length;i++)r[s[i]]=t[i];return r}const n=.5;class d{constructor(r,i,s,o){this._strides=r,this._displayList=i,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const n in r){this._freeListsAndStorage[n]={vtxFreeList:o?new e(o):null,idxFreeList:o?new e(o):null,vertexBuffers:{},indexBuffer:o?new Uint32Array(o):null};for(const e in r[n])this._freeListsAndStorage[n].vertexBuffers[e]={data:o?t(o,r[n][e]):null,stride:r[n][e]}}}static fromTileData(t,i){const n=o(t),a=[0,0,0,0,0],x=[0,0,0,0,0];for(const e of t.tileDisplayData.displayObjects)for(const t of e.displayRecords)a[t.geometryType]=Math.max(a[t.geometryType],t.vertexFrom+t.vertexCount),x[t.geometryType]=Math.max(x[t.geometryType],t.indexFrom+t.indexCount);const u=new d(n,t.tileDisplayData.displayList,i,void 0),f=t.tileBufferData?.geometries??[];for(let o=0;o<f.length;++o){const t=a[o],i=x[o],n=f[o],d=s[o],l=u._storageFor(d),c=f[o].indexBuffer;l.indexBuffer=c,l.idxFreeList=new e(c.length),l.idxFreeList.allocate(i);let m=0;for(const e in n.vertexBuffer){const t=f[o].vertexBuffer[e];l.vertexBuffers[e].data=t.data,l.vertexBuffers[e].stride=t.stride;const i=r(t.stride),s=t.data.length*i/t.stride;m||(m=s)}l.vtxFreeList=new e(m),l.vtxFreeList.allocate(t)}return u}delete(e){const t=s[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,r,o,n){const d=s[e.geometryType];let a,x;e.meshData=null,void 0===e.vertexFrom?(x=t.vertexCount,a=this._allocateVertices(d,x)):t.vertexCount>e.vertexCount?(this._freeVertices(d,e.vertexFrom,e.vertexCount),x=t.vertexCount,a=this._allocateVertices(d,x)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,x=e.vertexCount):(this._freeVertices(d,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,x=t.vertexCount);let u,f,l,c=!0;if(void 0===e.indexFrom?(u=n,l=t.indexCount,f=this._allocateIndices(d,l)):t.indexCount>e.indexCount?(u=this._displayList.removeFromList(e),this._freeIndices(d,e.indexFrom,e.indexCount),l=t.indexCount,f=this._allocateIndices(d,l)):t.indexCount===e.indexCount?(c=!1,f=e.indexFrom,l=e.indexCount):(u=this._displayList.removeFromList(e),this._freeIndices(d,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),f=e.indexFrom,l=t.indexCount),-1!==a&&-1!==f){const s=this._storageFor(d);if(i(a,f,s.vertexBuffers,s.indexBuffer,t,r,o),e.vertexFrom=a,e.indexFrom=f,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return c&&this._displayList.addToList(e,u),!0}return-1!==a&&this._freeVertices(d,a,x),-1!==f&&this._freeIndices(d,f,l),e.setMeshDataFromBuffers(t,r,o),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const r=t.vertexBuffer,o=t.indexBuffer,n=s[e.geometryType],d=this._allocateVertices(n,e.vertexCount);if(-1===d)return this._freeVertices(n,d,e.vertexCount),!1;const a=this._allocateIndices(n,e.indexCount);if(-1===a)return this._freeVertices(n,d,e.vertexCount),this._freeIndices(n,a,e.indexCount),!1;const x=this._storageFor(n);if(i(d,a,x.vertexBuffers,x.indexBuffer,e,r,o),e.vertexFrom=d,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,d,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const r=this._storageFor(e),i=r.vtxFreeList?.allocate(t);if(null==i||-1===i)return-1;const s=r.vtxFreeList?.fragmentation;return null==s||s>n?-1:i}_freeVertices(e,t,r){this._storageFor(e).vtxFreeList?.free(t,r)}_freeIndices(e,t,r){this._storageFor(e).idxFreeList?.free(t,r)}_allocateIndices(e,t){const r=this._storageFor(e),i=r.idxFreeList?.allocate(t);if(null==i||-1===i)return-1;const s=r.idxFreeList?.fragmentation;return null==s||s>n?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}export{d as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}