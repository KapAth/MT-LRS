{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { clone as e } from \"../../core/lang.js\";\nimport { isNone as n } from \"../../core/maybe.js\";\nimport t from \"./RasterFunction.js\";\nimport { schema as r } from \"./rasterFunctionUtils.js\";\nimport { getPixelValueRange as o } from \"./rasterFormats/pixelRangeUtils.js\";\nimport { getRFxArgColorRampValue as a, convertColorRampToColormap as i, getColorRampName as s, rgbaConvertTo32Bit as u } from \"../../renderers/support/colorRampUtils.js\";\nimport { stretchTypeJSONDict as l } from \"../../renderers/support/stretchRendererUtils.js\";\nimport c from \"../../renderers/visualVariables/SizeVariable.js\";\nconst m = new Set([\"u1\", \"u2\", \"u4\", \"u8\", \"s8\", \"u16\", \"s16\"]),\n      p = {\n  simple_scalar: \"Simple Scalar\",\n  wind_barb: \"Wind Barb\",\n  single_arrow: \"Single Arrow\",\n  beaufort_kn: \"Beaufort Wind (Knots)\",\n  beaufort_m: \"Beaufort Wind (MetersPerSecond)\",\n  ocean_current_m: \"Ocean Current (MetersPerSecond)\",\n  ocean_current_kn: \"Ocean Current (Knots)\"\n},\n      f = new Set([\"raster-stretch\", \"unique-value\", \"class-breaks\", \"raster-shaded-relief\", \"vector-field\", \"raster-colormap\"]);\n\nfunction g(e) {\n  return f.has(e.type);\n}\n\nfunction d(n, t) {\n  if (!n || !t) return e(n || t);\n  const r = e(n);\n\n  if (r.rasterFunctionDefinition && t.rasterFunctionDefinition) {\n    const e = t.rasterFunctionDefinition;\n    (e.thumbnail || e.thumbnailEx) && (e.thumbnail = e.thumbnailEx = void 0), h(r.rasterFunctionDefinition.arguments, t);\n  } else if (\"none\" !== t.functionName?.toLowerCase()) {\n    R(r.functionArguments).Raster = t;\n  }\n\n  return r;\n}\n\nfunction h(e, n) {\n  for (const t in e) \"raster\" === t.toLowerCase() && (\"RasterFunctionVariable\" === e[t].type ? (e[t] = n.rasterFunctionDefinition, e[t].type = \"RasterFunctionTemplate\") : \"RasterFunctionTemplate\" === e[t].type && h(e[t].arguments, n));\n}\n\nfunction y(n) {\n  const t = e(r[n.functionName + \"Function\"]),\n        o = n.functionArguments;\n\n  for (const e in o) \"raster\" === e.toLowerCase() ? (t.arguments[e] = y(o[e]), t.arguments[e].type = \"RasterFunctionTemplate\") : \"colormap\" === e.toLowerCase() ? (t.arguments[e].value = D(o[e]), t.arguments.ColorSchemeType.value = 0) : t.arguments[e].value = o[e];\n\n  return t;\n}\n\nfunction b(e, n) {\n  switch (n = n || {}, e.type) {\n    case \"raster-stretch\":\n      return x(e, n);\n\n    case \"class-breaks\":\n      return S(e, n);\n\n    case \"unique-value\":\n      return A(e, n);\n\n    case \"raster-colormap\":\n      return N(e, n);\n\n    case \"vector-field\":\n      return w(e, n);\n\n    case \"raster-shaded-relief\":\n      return v(e, n);\n\n    case \"flow\":\n      throw new Error(\"Unsupported rendering rule.\");\n  }\n}\n\nfunction R(e) {\n  const n = e?.Raster;\n  return n && \"esri.layers.support.RasterFunction\" === n.declaredClass ? R(n.functionArguments) : e;\n}\n\nconst T = {\n  none: 0,\n  standardDeviation: 3,\n  histogramEqualization: 4,\n  minMax: 5,\n  percentClip: 6,\n  sigmoid: 9\n};\n\nfunction w(e, n) {\n  const r = new t();\n  r.functionName = \"VectorFieldRenderer\";\n  const {\n    dataType: o,\n    bandProperties: a\n  } = n,\n        i = \"vector-uv\" === o;\n  let s, u;\n  a && 2 === a.length && (s = a.map(e => e.BandName.toLowerCase()).indexOf(\"magnitude\"), u = a.map(e => e.BandName.toLowerCase()).indexOf(\"direction\")), -1 !== s && null !== s || (s = 0, u = 1);\n  const l = \"arithmetic\" === e.rotationType ? 1 : 2,\n        m = \"flow-from\" === e.flowRepresentation ? 0 : 1,\n        f = e.visualVariables ? e.visualVariables.find(e => \"Magnitude\" === e.field) : new c(),\n        g = {\n    magnitudeBandID: s,\n    directionBandID: u,\n    isUVComponents: i,\n    referenceSystem: l,\n    massFlowAngleRepresentation: m,\n    symbolTileSize: 50,\n    symbolTileSizeUnits: 100,\n    calculationMethod: \"Vector Average\",\n    symbologyName: p[e.style.toLowerCase().replace(\"-\", \"_\")],\n    minimumMagnitude: f.minDataValue,\n    maximumMagnitude: f.maxDataValue,\n    minimumSymbolSize: f.minSize,\n    maximumSymbolSize: f.maxSize\n  };\n  return r.functionArguments = g, n.convertToRFT ? new t({\n    rasterFunctionDefinition: y(r)\n  }) : r;\n}\n\nfunction v(e, n) {\n  const r = n.convertToRFT;\n  if (\"elevation\" !== n.dataType && (\"generic\" !== n.dataType || 1 !== n.bandCount || \"s16\" !== n.pixelType && \"s32\" !== n.pixelType && \"f32\" !== n.pixelType && \"f64\" !== n.pixelType)) return new t();\n  const o = new t();\n  o.functionName = \"Hillshade\";\n  const s = \"traditional\" === e.hillshadeType ? 0 : 1,\n        u = \"none\" === e.scalingType ? 1 : 3,\n        l = {\n    HillshadeType: s,\n    SlopeType: u,\n    ZFactor: e.zFactor\n  };\n  return 0 === s && (l.Azimuth = e.azimuth, l.Altitude = e.altitude), 3 === u && (l.PSPower = e.pixelSizePower, l.PSZFactor = e.pixelSizeFactor), o.functionArguments = l, o.variableName = \"Raster\", e.colorRamp && (o.functionName = \"ShadedRelief\", r ? l.ColorRamp = a(e.colorRamp) : l.Colormap = i(e.colorRamp)), r ? new t({\n    rasterFunctionDefinition: y(o)\n  }) : o;\n}\n\nfunction x(e, n) {\n  const r = n.convertToRFT,\n        o = new t();\n  o.functionName = \"Stretch\";\n  const u = T[l.toJSON(e.stretchType)],\n        c = \"u8\",\n        m = {\n    StretchType: u,\n    Statistics: V(e.statistics ?? []),\n    DRA: e.dynamicRangeAdjustment,\n    UseGamma: e.useGamma,\n    Gamma: e.gamma,\n    ComputeGamma: e.computeGamma\n  };\n\n  if (null != e.outputMin && (m.Min = e.outputMin), null != e.outputMax && (m.Max = e.outputMax), u === T.standardDeviation ? (m.NumberOfStandardDeviations = e.numberOfStandardDeviations, o.outputPixelType = c) : u === T.percentClip ? (m.MinPercent = e.minPercent, m.MaxPercent = e.maxPercent, o.outputPixelType = c) : u === T.minMax ? o.outputPixelType = c : u === T.sigmoid && (m.SigmoidStrengthLevel = e.sigmoidStrengthLevel), o.functionArguments = m, o.variableName = \"Raster\", e.colorRamp) {\n    const u = e.colorRamp,\n          l = new t();\n    if (r) l.functionArguments = {\n      ColorRamp: a(u)\n    };else {\n      const t = s(u);\n      if (t) l.functionArguments = {\n        colorRamp: t\n      };else if (!n.convertColorRampToColormap || \"algorithmic\" !== u.type && \"multipart\" !== u.type) {\n        const n = e.colorRamp.toJSON();\n        \"algorithmic\" === n.type ? n.algorithm = n.algorithm || \"esriCIELabAlgorithm\" : \"multipart\" === n.type && n.colorRamps?.length && n.colorRamps.forEach(e => e.algorithm = e.algorithm || \"esriCIELabAlgorithm\"), l.functionArguments = {\n          colorRamp: n\n        };\n      } else l.functionArguments = {\n        Colormap: i(u)\n      };\n    }\n    return l.variableName = \"Raster\", l.functionName = \"Colormap\", l.functionArguments.Raster = o, r ? new t({\n      rasterFunctionDefinition: y(l)\n    }) : l;\n  }\n\n  return r ? new t({\n    rasterFunctionDefinition: y(o)\n  }) : o;\n}\n\nfunction S(e, r) {\n  const o = [],\n        a = [],\n        i = [],\n        s = [],\n        u = 1e-6,\n        {\n    pixelType: l,\n    rasterAttributeTable: c\n  } = r,\n        m = n(c) ? null : c.features,\n        p = F(c);\n\n  if (p && m && Array.isArray(m) && e.classBreakInfos) {\n    e.classBreakInfos.forEach((n, t) => {\n      const r = n.symbol?.color;\n      let o;\n      r?.a && null != n.minValue && null != n.maxValue && m.forEach(a => {\n        null != n.minValue && null != n.maxValue && (o = a.attributes[e.field], (o >= n.minValue && o < n.maxValue || t === e.classBreakInfos.length - 1 && o >= n.minValue) && s.push([a.attributes[p], r.r, r.g, r.b]));\n      });\n    });\n    const n = l ? C(s, l) : s,\n          o = new t();\n    return o.functionName = \"Colormap\", o.functionArguments = {}, o.functionArguments.Colormap = n, o.variableName = \"Raster\", r.convertToRFT ? new t({\n      rasterFunctionDefinition: y(o)\n    }) : o;\n  }\n\n  e.classBreakInfos.forEach((e, n) => {\n    if (null == e.minValue || null == e.maxValue) return;\n    const t = e.symbol && e.symbol.color;\n    t?.a ? (0 === n ? o.push(e.minValue, e.maxValue + u) : o.push(e.minValue + u, e.maxValue + u), a.push(n), s.push([n, t.r, t.g, t.b])) : i.push(e.minValue, e.maxValue);\n  });\n  const f = l ? C(s, l) : s,\n        g = new t();\n  g.functionName = \"Remap\", g.functionArguments = {\n    InputRanges: o,\n    OutputValues: a,\n    NoDataRanges: i\n  }, g.variableName = \"Raster\";\n  const d = new t();\n  return d.functionName = \"Colormap\", d.functionArguments = {\n    Colormap: f,\n    Raster: g\n  }, r.convertToRFT ? new t({\n    rasterFunctionDefinition: y(d)\n  }) : d;\n}\n\nfunction C(e, n) {\n  const t = m.has(n) ? o(n) : null;\n  return t && e.push([Math.floor(t[0] - 1), 0, 0, 0], [Math.ceil(t[1] + 1), 0, 0, 0]), e;\n}\n\nfunction F(e) {\n  if (n(e)) return;\n  const {\n    fields: t\n  } = e,\n        r = t && t.find(e => e && e.name && \"value\" === e.name.toLowerCase());\n  return r && r.name;\n}\n\nfunction A(e, r) {\n  const o = [],\n        {\n    pixelType: a,\n    rasterAttributeTable: i\n  } = r,\n        s = n(i) ? null : i.features,\n        u = F(i),\n        l = e.defaultSymbol?.color?.toRgb(),\n        c = e.uniqueValueInfos;\n  if (c) if (s) {\n    if (u) {\n      const n = new Map();\n      c.forEach(e => {\n        const t = e.value,\n              r = e.symbol?.color;\n        null != t && r && r.a && n.set(String(t), r.toRgb());\n      });\n      const t = e.field;\n      s.forEach(({\n        attributes: e\n      }) => {\n        const r = String(e[t]),\n              a = e[u],\n              i = n.get(r);\n        i ? o.push([a, ...i]) : l && o.push([a, ...l]);\n      });\n    }\n  } else for (let n = 0; n < c.length; n++) {\n    const e = c[n],\n          t = e.symbol?.color,\n          r = +e.value;\n\n    if (t?.a) {\n      if (isNaN(r)) return null;\n      o.push([r, t.r, t.g, t.b]);\n    }\n  }\n  const m = a && o.length > 0 ? C(o, a) : o,\n        p = new t();\n  return p.functionName = \"Colormap\", p.functionArguments = {}, p.functionArguments.Colormap = m, p.variableName = \"Raster\", r.convertToRFT ? new t({\n    rasterFunctionDefinition: y(p)\n  }) : p;\n}\n\nfunction N(e, n) {\n  const r = e.extractColormap();\n  if (!r || 0 === r.length) return null;\n  const {\n    pixelType: o\n  } = n,\n        a = o ? C(r, o) : r,\n        i = new t();\n  return i.functionName = \"Colormap\", i.functionArguments = {}, i.functionArguments.Colormap = a, n.convertToRFT ? new t({\n    rasterFunctionDefinition: y(i)\n  }) : i;\n}\n\nfunction V(e) {\n  const n = [];\n  return e?.forEach(e => {\n    const t = e;\n    if (Array.isArray(t)) n.push(t);else {\n      if (null == t.min || null == t.max) return;\n      const e = [t.min, t.max, t.avg || 0, t.stddev || 0];\n      n.push(e);\n    }\n  }), n;\n}\n\nfunction D(e) {\n  const n = [],\n        t = [];\n  return e.forEach(e => {\n    n.push(e[0]), t.push(u([...e.slice(1), 255]));\n  }), {\n    type: \"RasterColormap\",\n    values: n,\n    colors: t\n  };\n}\n\nexport { d as combineRenderingRules, b as convertRendererToRenderingRule, y as convertRenderingRuleToRFT, g as isSupportedRendererType };","map":{"version":3,"names":["clone","e","isNone","n","t","schema","r","getPixelValueRange","o","getRFxArgColorRampValue","a","convertColorRampToColormap","i","getColorRampName","s","rgbaConvertTo32Bit","u","stretchTypeJSONDict","l","c","m","Set","p","simple_scalar","wind_barb","single_arrow","beaufort_kn","beaufort_m","ocean_current_m","ocean_current_kn","f","g","has","type","d","rasterFunctionDefinition","thumbnail","thumbnailEx","h","arguments","functionName","toLowerCase","R","functionArguments","Raster","y","value","D","ColorSchemeType","b","x","S","A","N","w","v","Error","declaredClass","T","none","standardDeviation","histogramEqualization","minMax","percentClip","sigmoid","dataType","bandProperties","length","map","BandName","indexOf","rotationType","flowRepresentation","visualVariables","find","field","magnitudeBandID","directionBandID","isUVComponents","referenceSystem","massFlowAngleRepresentation","symbolTileSize","symbolTileSizeUnits","calculationMethod","symbologyName","style","replace","minimumMagnitude","minDataValue","maximumMagnitude","maxDataValue","minimumSymbolSize","minSize","maximumSymbolSize","maxSize","convertToRFT","bandCount","pixelType","hillshadeType","scalingType","HillshadeType","SlopeType","ZFactor","zFactor","Azimuth","azimuth","Altitude","altitude","PSPower","pixelSizePower","PSZFactor","pixelSizeFactor","variableName","colorRamp","ColorRamp","Colormap","toJSON","stretchType","StretchType","Statistics","V","statistics","DRA","dynamicRangeAdjustment","UseGamma","useGamma","Gamma","gamma","ComputeGamma","computeGamma","outputMin","Min","outputMax","Max","NumberOfStandardDeviations","numberOfStandardDeviations","outputPixelType","MinPercent","minPercent","MaxPercent","maxPercent","SigmoidStrengthLevel","sigmoidStrengthLevel","algorithm","colorRamps","forEach","rasterAttributeTable","features","F","Array","isArray","classBreakInfos","symbol","color","minValue","maxValue","attributes","push","C","InputRanges","OutputValues","NoDataRanges","Math","floor","ceil","fields","name","defaultSymbol","toRgb","uniqueValueInfos","Map","set","String","get","isNaN","extractColormap","min","max","avg","stddev","slice","values","colors","combineRenderingRules","convertRendererToRenderingRule","convertRenderingRuleToRFT","isSupportedRendererType"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/layers/support/imageryRendererUtils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{clone as e}from\"../../core/lang.js\";import{isNone as n}from\"../../core/maybe.js\";import t from\"./RasterFunction.js\";import{schema as r}from\"./rasterFunctionUtils.js\";import{getPixelValueRange as o}from\"./rasterFormats/pixelRangeUtils.js\";import{getRFxArgColorRampValue as a,convertColorRampToColormap as i,getColorRampName as s,rgbaConvertTo32Bit as u}from\"../../renderers/support/colorRampUtils.js\";import{stretchTypeJSONDict as l}from\"../../renderers/support/stretchRendererUtils.js\";import c from\"../../renderers/visualVariables/SizeVariable.js\";const m=new Set([\"u1\",\"u2\",\"u4\",\"u8\",\"s8\",\"u16\",\"s16\"]),p={simple_scalar:\"Simple Scalar\",wind_barb:\"Wind Barb\",single_arrow:\"Single Arrow\",beaufort_kn:\"Beaufort Wind (Knots)\",beaufort_m:\"Beaufort Wind (MetersPerSecond)\",ocean_current_m:\"Ocean Current (MetersPerSecond)\",ocean_current_kn:\"Ocean Current (Knots)\"},f=new Set([\"raster-stretch\",\"unique-value\",\"class-breaks\",\"raster-shaded-relief\",\"vector-field\",\"raster-colormap\"]);function g(e){return f.has(e.type)}function d(n,t){if(!n||!t)return e(n||t);const r=e(n);if(r.rasterFunctionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),h(r.rasterFunctionDefinition.arguments,t)}else if(\"none\"!==t.functionName?.toLowerCase()){R(r.functionArguments).Raster=t}return r}function h(e,n){for(const t in e)\"raster\"===t.toLowerCase()&&(\"RasterFunctionVariable\"===e[t].type?(e[t]=n.rasterFunctionDefinition,e[t].type=\"RasterFunctionTemplate\"):\"RasterFunctionTemplate\"===e[t].type&&h(e[t].arguments,n))}function y(n){const t=e(r[n.functionName+\"Function\"]),o=n.functionArguments;for(const e in o)\"raster\"===e.toLowerCase()?(t.arguments[e]=y(o[e]),t.arguments[e].type=\"RasterFunctionTemplate\"):\"colormap\"===e.toLowerCase()?(t.arguments[e].value=D(o[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=o[e];return t}function b(e,n){switch(n=n||{},e.type){case\"raster-stretch\":return x(e,n);case\"class-breaks\":return S(e,n);case\"unique-value\":return A(e,n);case\"raster-colormap\":return N(e,n);case\"vector-field\":return w(e,n);case\"raster-shaded-relief\":return v(e,n);case\"flow\":throw new Error(\"Unsupported rendering rule.\")}}function R(e){const n=e?.Raster;return n&&\"esri.layers.support.RasterFunction\"===n.declaredClass?R(n.functionArguments):e}const T={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function w(e,n){const r=new t;r.functionName=\"VectorFieldRenderer\";const{dataType:o,bandProperties:a}=n,i=\"vector-uv\"===o;let s,u;a&&2===a.length&&(s=a.map((e=>e.BandName.toLowerCase())).indexOf(\"magnitude\"),u=a.map((e=>e.BandName.toLowerCase())).indexOf(\"direction\")),-1!==s&&null!==s||(s=0,u=1);const l=\"arithmetic\"===e.rotationType?1:2,m=\"flow-from\"===e.flowRepresentation?0:1,f=e.visualVariables?e.visualVariables.find((e=>\"Magnitude\"===e.field)):new c,g={magnitudeBandID:s,directionBandID:u,isUVComponents:i,referenceSystem:l,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:\"Vector Average\",symbologyName:p[e.style.toLowerCase().replace(\"-\",\"_\")],minimumMagnitude:f.minDataValue,maximumMagnitude:f.maxDataValue,minimumSymbolSize:f.minSize,maximumSymbolSize:f.maxSize};return r.functionArguments=g,n.convertToRFT?new t({rasterFunctionDefinition:y(r)}):r}function v(e,n){const r=n.convertToRFT;if(\"elevation\"!==n.dataType&&(\"generic\"!==n.dataType||1!==n.bandCount||\"s16\"!==n.pixelType&&\"s32\"!==n.pixelType&&\"f32\"!==n.pixelType&&\"f64\"!==n.pixelType))return new t;const o=new t;o.functionName=\"Hillshade\";const s=\"traditional\"===e.hillshadeType?0:1,u=\"none\"===e.scalingType?1:3,l={HillshadeType:s,SlopeType:u,ZFactor:e.zFactor};return 0===s&&(l.Azimuth=e.azimuth,l.Altitude=e.altitude),3===u&&(l.PSPower=e.pixelSizePower,l.PSZFactor=e.pixelSizeFactor),o.functionArguments=l,o.variableName=\"Raster\",e.colorRamp&&(o.functionName=\"ShadedRelief\",r?l.ColorRamp=a(e.colorRamp):l.Colormap=i(e.colorRamp)),r?new t({rasterFunctionDefinition:y(o)}):o}function x(e,n){const r=n.convertToRFT,o=new t;o.functionName=\"Stretch\";const u=T[l.toJSON(e.stretchType)],c=\"u8\",m={StretchType:u,Statistics:V(e.statistics??[]),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(m.Min=e.outputMin),null!=e.outputMax&&(m.Max=e.outputMax),u===T.standardDeviation?(m.NumberOfStandardDeviations=e.numberOfStandardDeviations,o.outputPixelType=c):u===T.percentClip?(m.MinPercent=e.minPercent,m.MaxPercent=e.maxPercent,o.outputPixelType=c):u===T.minMax?o.outputPixelType=c:u===T.sigmoid&&(m.SigmoidStrengthLevel=e.sigmoidStrengthLevel),o.functionArguments=m,o.variableName=\"Raster\",e.colorRamp){const u=e.colorRamp,l=new t;if(r)l.functionArguments={ColorRamp:a(u)};else{const t=s(u);if(t)l.functionArguments={colorRamp:t};else if(!n.convertColorRampToColormap||\"algorithmic\"!==u.type&&\"multipart\"!==u.type){const n=e.colorRamp.toJSON();\"algorithmic\"===n.type?n.algorithm=n.algorithm||\"esriCIELabAlgorithm\":\"multipart\"===n.type&&n.colorRamps?.length&&n.colorRamps.forEach((e=>e.algorithm=e.algorithm||\"esriCIELabAlgorithm\")),l.functionArguments={colorRamp:n}}else l.functionArguments={Colormap:i(u)}}return l.variableName=\"Raster\",l.functionName=\"Colormap\",l.functionArguments.Raster=o,r?new t({rasterFunctionDefinition:y(l)}):l}return r?new t({rasterFunctionDefinition:y(o)}):o}function S(e,r){const o=[],a=[],i=[],s=[],u=1e-6,{pixelType:l,rasterAttributeTable:c}=r,m=n(c)?null:c.features,p=F(c);if(p&&m&&Array.isArray(m)&&e.classBreakInfos){e.classBreakInfos.forEach(((n,t)=>{const r=n.symbol?.color;let o;r?.a&&null!=n.minValue&&null!=n.maxValue&&m.forEach((a=>{null!=n.minValue&&null!=n.maxValue&&(o=a.attributes[e.field],(o>=n.minValue&&o<n.maxValue||t===e.classBreakInfos.length-1&&o>=n.minValue)&&s.push([a.attributes[p],r.r,r.g,r.b]))}))}));const n=l?C(s,l):s,o=new t;return o.functionName=\"Colormap\",o.functionArguments={},o.functionArguments.Colormap=n,o.variableName=\"Raster\",r.convertToRFT?new t({rasterFunctionDefinition:y(o)}):o}e.classBreakInfos.forEach(((e,n)=>{if(null==e.minValue||null==e.maxValue)return;const t=e.symbol&&e.symbol.color;t?.a?(0===n?o.push(e.minValue,e.maxValue+u):o.push(e.minValue+u,e.maxValue+u),a.push(n),s.push([n,t.r,t.g,t.b])):i.push(e.minValue,e.maxValue)}));const f=l?C(s,l):s,g=new t;g.functionName=\"Remap\",g.functionArguments={InputRanges:o,OutputValues:a,NoDataRanges:i},g.variableName=\"Raster\";const d=new t;return d.functionName=\"Colormap\",d.functionArguments={Colormap:f,Raster:g},r.convertToRFT?new t({rasterFunctionDefinition:y(d)}):d}function C(e,n){const t=m.has(n)?o(n):null;return t&&e.push([Math.floor(t[0]-1),0,0,0],[Math.ceil(t[1]+1),0,0,0]),e}function F(e){if(n(e))return;const{fields:t}=e,r=t&&t.find((e=>e&&e.name&&\"value\"===e.name.toLowerCase()));return r&&r.name}function A(e,r){const o=[],{pixelType:a,rasterAttributeTable:i}=r,s=n(i)?null:i.features,u=F(i),l=e.defaultSymbol?.color?.toRgb(),c=e.uniqueValueInfos;if(c)if(s){if(u){const n=new Map;c.forEach((e=>{const t=e.value,r=e.symbol?.color;null!=t&&r&&r.a&&n.set(String(t),r.toRgb())}));const t=e.field;s.forEach((({attributes:e})=>{const r=String(e[t]),a=e[u],i=n.get(r);i?o.push([a,...i]):l&&o.push([a,...l])}))}}else for(let n=0;n<c.length;n++){const e=c[n],t=e.symbol?.color,r=+e.value;if(t?.a){if(isNaN(r))return null;o.push([r,t.r,t.g,t.b])}}const m=a&&o.length>0?C(o,a):o,p=new t;return p.functionName=\"Colormap\",p.functionArguments={},p.functionArguments.Colormap=m,p.variableName=\"Raster\",r.convertToRFT?new t({rasterFunctionDefinition:y(p)}):p}function N(e,n){const r=e.extractColormap();if(!r||0===r.length)return null;const{pixelType:o}=n,a=o?C(r,o):r,i=new t;return i.functionName=\"Colormap\",i.functionArguments={},i.functionArguments.Colormap=a,n.convertToRFT?new t({rasterFunctionDefinition:y(i)}):i}function V(e){const n=[];return e?.forEach((e=>{const t=e;if(Array.isArray(t))n.push(t);else{if(null==t.min||null==t.max)return;const e=[t.min,t.max,t.avg||0,t.stddev||0];n.push(e)}})),n}function D(e){const n=[],t=[];return e.forEach((e=>{n.push(e[0]),t.push(u([...e.slice(1),255]))})),{type:\"RasterColormap\",values:n,colors:t}}export{d as combineRenderingRules,b as convertRendererToRenderingRule,y as convertRenderingRuleToRFT,g as isSupportedRendererType};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}