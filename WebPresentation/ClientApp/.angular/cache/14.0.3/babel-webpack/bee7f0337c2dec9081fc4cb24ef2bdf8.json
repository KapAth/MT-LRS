{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport t from \"./MeshData.js\";\nimport { strideToPackingFactor as e } from \"./Utils.js\";\n\nclass s {\n  constructor(t, e, s, i = 0, r = 0) {\n    this.id = t, this.geometryType = e, this.materialKey = s, this.minZoom = i, this.maxZoom = r, this.meshData = null, this.symbolLevel = 0, this.zOrder = 0, this.vertexFrom = 0, this.vertexCount = 0, this.indexFrom = 0, this.indexCount = 0, this._sortKey = null;\n  }\n\n  get sortKey() {\n    return null == this._sortKey && this._computeSortKey(), this._sortKey;\n  }\n\n  clone() {\n    return this.copy();\n  }\n\n  copy() {\n    const t = new s(this.id, this.geometryType, this.materialKey);\n    return t.vertexFrom = this.vertexFrom, t.vertexCount = this.vertexCount, t.indexFrom = this.indexFrom, t.indexCount = this.indexCount, t.zOrder = this.zOrder, t.symbolLevel = this.symbolLevel, t.meshData = this.meshData, t.minZoom = this.minZoom, t.maxZoom = this.maxZoom, t;\n  }\n\n  setMeshDataFromBuffers(s, i, r) {\n    const o = new t();\n\n    for (const t in i) {\n      const r = i[t].stride,\n            a = i[t].data;\n      if (!a) continue;\n      const h = [],\n            n = e(r);\n\n      for (let t = 0; t < r * s.vertexCount / n; ++t) h[t] = a[t + r * s.vertexFrom / n];\n\n      o.vertexData.set(t, h);\n    }\n\n    o.indexData.length = 0;\n\n    for (let t = 0; t < s.indexCount; ++t) o.indexData[t] = r[t + s.indexFrom] - s.vertexFrom;\n\n    o.vertexCount = s.vertexCount, this.meshData = o;\n  }\n\n  readMeshDataFromBuffers(s, i) {\n    this.meshData ? this.meshData.clear() : this.meshData = new t();\n\n    for (const t in s) {\n      const i = s[t].stride,\n            r = s[t].data,\n            o = [],\n            a = e(i);\n\n      for (let t = 0; t < i * this.vertexCount / a; ++t) o[t] = r[t + i * this.vertexFrom / a];\n\n      this.meshData.vertexData.set(t, o);\n    }\n\n    this.meshData.indexData.length = 0;\n\n    for (let t = 0; t < this.indexCount; ++t) this.meshData.indexData[t] = i[t + this.indexFrom] - this.vertexFrom;\n\n    this.meshData.vertexCount = this.vertexCount;\n  }\n\n  writeMeshDataToBuffers(t, s, i, r) {\n    if (this.meshData) {\n      for (const i in s) {\n        const r = s[i].stride,\n              o = this.meshData.vertexData.get(i),\n              a = s[i].data,\n              h = e(r);\n\n        for (let e = 0; e < r * this.meshData.vertexCount / h; ++e) a[e + r * t / h] = o[e];\n      }\n\n      for (let e = 0; e < this.meshData.indexData.length; ++e) r[e + i] = this.meshData.indexData[e] + t;\n\n      this.vertexFrom = t, this.vertexCount = this.meshData.vertexCount, this.indexFrom = i, this.indexCount = this.meshData.indexData.length;\n    }\n  }\n\n  static writeAllMeshDataToBuffers(t, e, s) {\n    let i = 0,\n        r = 0;\n\n    for (const o of t) o.writeMeshDataToBuffers(i, e, r, s), i += o.vertexCount, r += o.indexCount;\n  }\n\n  _computeSortKey() {\n    this._sortKey = (31 & this.symbolLevel) << 12 | (127 & this.zOrder) << 4 | 7 & this.geometryType;\n  }\n\n  serialize(t) {\n    return t.push(this.geometryType), t.push(this.materialKey), t.push(this.vertexFrom), t.push(this.vertexCount), t.push(this.indexFrom), t.push(this.indexCount), t.push(this.minZoom), t.push(this.maxZoom), t;\n  }\n\n  static deserialize(t, e) {\n    const i = t.readInt32(),\n          r = t.readInt32(),\n          o = new s(e.id, i, r);\n    return o.vertexFrom = t.readInt32(), o.vertexCount = t.readInt32(), o.indexFrom = t.readInt32(), o.indexCount = t.readInt32(), o.minZoom = t.readInt32(), o.maxZoom = t.readInt32(), o;\n  }\n\n}\n\nexport { s as default };","map":{"version":3,"names":["t","strideToPackingFactor","e","s","constructor","i","r","id","geometryType","materialKey","minZoom","maxZoom","meshData","symbolLevel","zOrder","vertexFrom","vertexCount","indexFrom","indexCount","_sortKey","sortKey","_computeSortKey","clone","copy","setMeshDataFromBuffers","o","stride","a","data","h","n","vertexData","set","indexData","length","readMeshDataFromBuffers","clear","writeMeshDataToBuffers","get","writeAllMeshDataToBuffers","serialize","push","deserialize","readInt32","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/views/2d/engine/webgl/WGLDisplayRecord.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport t from\"./MeshData.js\";import{strideToPackingFactor as e}from\"./Utils.js\";class s{constructor(t,e,s,i=0,r=0){this.id=t,this.geometryType=e,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0,this._sortKey=null}get sortKey(){return null==this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const t=new s(this.id,this.geometryType,this.materialKey);return t.vertexFrom=this.vertexFrom,t.vertexCount=this.vertexCount,t.indexFrom=this.indexFrom,t.indexCount=this.indexCount,t.zOrder=this.zOrder,t.symbolLevel=this.symbolLevel,t.meshData=this.meshData,t.minZoom=this.minZoom,t.maxZoom=this.maxZoom,t}setMeshDataFromBuffers(s,i,r){const o=new t;for(const t in i){const r=i[t].stride,a=i[t].data;if(!a)continue;const h=[],n=e(r);for(let t=0;t<r*s.vertexCount/n;++t)h[t]=a[t+r*s.vertexFrom/n];o.vertexData.set(t,h)}o.indexData.length=0;for(let t=0;t<s.indexCount;++t)o.indexData[t]=r[t+s.indexFrom]-s.vertexFrom;o.vertexCount=s.vertexCount,this.meshData=o}readMeshDataFromBuffers(s,i){this.meshData?this.meshData.clear():this.meshData=new t;for(const t in s){const i=s[t].stride,r=s[t].data,o=[],a=e(i);for(let t=0;t<i*this.vertexCount/a;++t)o[t]=r[t+i*this.vertexFrom/a];this.meshData.vertexData.set(t,o)}this.meshData.indexData.length=0;for(let t=0;t<this.indexCount;++t)this.meshData.indexData[t]=i[t+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(t,s,i,r){if(this.meshData){for(const i in s){const r=s[i].stride,o=this.meshData.vertexData.get(i),a=s[i].data,h=e(r);for(let e=0;e<r*this.meshData.vertexCount/h;++e)a[e+r*t/h]=o[e]}for(let e=0;e<this.meshData.indexData.length;++e)r[e+i]=this.meshData.indexData[e]+t;this.vertexFrom=t,this.vertexCount=this.meshData.vertexCount,this.indexFrom=i,this.indexCount=this.meshData.indexData.length}}static writeAllMeshDataToBuffers(t,e,s){let i=0,r=0;for(const o of t)o.writeMeshDataToBuffers(i,e,r,s),i+=o.vertexCount,r+=o.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(t){return t.push(this.geometryType),t.push(this.materialKey),t.push(this.vertexFrom),t.push(this.vertexCount),t.push(this.indexFrom),t.push(this.indexCount),t.push(this.minZoom),t.push(this.maxZoom),t}static deserialize(t,e){const i=t.readInt32(),r=t.readInt32(),o=new s(e.id,i,r);return o.vertexFrom=t.readInt32(),o.vertexCount=t.readInt32(),o.indexFrom=t.readInt32(),o.indexCount=t.readInt32(),o.minZoom=t.readInt32(),o.maxZoom=t.readInt32(),o}}export{s as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}