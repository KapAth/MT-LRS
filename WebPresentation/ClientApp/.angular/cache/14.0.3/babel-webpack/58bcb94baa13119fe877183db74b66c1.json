{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { JSONSupport as s } from \"../../../core/JSONSupport.js\";\nimport { isSome as e, isNone as r } from \"../../../core/maybe.js\";\nimport { property as i } from \"../../../core/accessorSupport/decorators/property.js\";\nimport { cast as n } from \"../../../core/accessorSupport/decorators/cast.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as o } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport a from \"../PixelBlock.js\";\nimport u from \"../RasterInfo.js\";\nlet p = class extends s {\n  constructor() {\n    super(...arguments), this.functionArguments = null, this.readingBufferSize = 0, this.id = -1, this.isNoopProcess = !1, this.rawInputBandIds = [], this.isInputBandIdsSwizzled = !1, this.swizzledBandSelection = [], this.isBranch = !1, this._bindingResult = null;\n  }\n\n  get supportsGPU() {\n    return this._bindingResult.supportsGPU;\n  }\n\n  bind(t, s = !1, r = -1) {\n    this.id = r + 1;\n\n    const i = this._getRasterValues();\n\n    let n = !0;\n\n    for (let o = 0; o < i.length; o++) {\n      const r = i[o];\n\n      if (e(r) && this._isRasterFunctionValue(r)) {\n        const e = r.bind(t, s, this.id + o);\n        if (!e.success) return this._bindingResult = e, e;\n        n = n && e.supportsGPU;\n      }\n    }\n\n    return !this.rasterInfo || s ? (this.sourceRasterInfos = this._getSourceRasterInfos(t), this._bindingResult = this._bindSourceRasters(), this._bindingResult.supportsGPU = n && this._bindingResult.supportsGPU, this.processInputBandIds(), this._bindingResult) : (this._bindingResult = {\n      success: !0,\n      supportsGPU: !0\n    }, this.processInputBandIds(), this._bindingResult);\n  }\n\n  process(t) {\n    const s = this._getRasterValues(),\n          e = 0 === s.length ? t.pixelBlocks ?? t.primaryPixelBlocks : s.map(s => this._readRasterValue(s, t));\n\n    return this._processPixels({ ...t,\n      pixelBlocks: e\n    });\n  }\n\n  processInputBandIds() {\n    const t = this._getRasterValues().filter(this._isRasterFunctionValue);\n\n    let s;\n\n    if (t.length > 1) {\n      const s = t.map(t => t.processInputBandIds()[0]);\n      this.rawInputBandIds = s, this.isInputBandIdsSwizzled = this.rawInputBandIds.some((t, s) => t !== s);\n      const e = t.filter(t => \"ExtractBand\" === t.functionName);\n      return e.length && e.forEach((t, s) => {\n        t.isInputBandIdsSwizzled = !0, t.swizzledBandSelection = [s, s, s];\n      }), this.rawInputBandIds;\n    }\n\n    const e = t[0];\n\n    if (e) {\n      if (s = e.processInputBandIds(), e.isInputBandIdsSwizzled) return this.rawInputBandIds = s, s;\n    } else {\n      s = [];\n      const {\n        bandCount: t\n      } = this.sourceRasterInfos[0];\n\n      for (let e = 0; e < t; e++) s.push(e);\n    }\n\n    const r = this._getInputBandIds(s);\n\n    return this.isInputBandIdsSwizzled = r.some((t, s) => t !== s), this.rawInputBandIds = r, this.rawInputBandIds;\n  }\n\n  getPrimaryRasters() {\n    const t = [],\n          s = [];\n    return this._getPrimaryRasters(this, t, s), {\n      rasters: t,\n      rasterIds: s\n    };\n  }\n\n  getWebGLProcessorDefinition() {\n    const t = this._getWebGLParameters(),\n          {\n      raster: s,\n      rasters: e\n    } = this.functionArguments;\n\n    return e && Array.isArray(e) && e.length ? (t.rasters = e.map(t => this._isRasterFunctionValue(t) ? t.getWebGLProcessorDefinition() : \"number\" == typeof t ? {\n      name: \"Constant\",\n      parameters: {\n        value: t\n      },\n      pixelType: \"f32\",\n      id: -1,\n      isNoopProcess: !1\n    } : {\n      name: \"Identity\",\n      parameters: {\n        value: t\n      },\n      pixelType: \"f32\",\n      id: -1,\n      isNoopProcess: !1\n    }), t.rasters.some(t => null != t) || (t.rasters = null)) : this._isRasterFunctionValue(s) && (t.raster = s.getWebGLProcessorDefinition()), {\n      name: this.functionName,\n      parameters: t,\n      pixelType: this.outputPixelType,\n      id: this.id,\n      isNoopProcess: this.isNoopProcess\n    };\n  }\n\n  getFlatWebGLFunctionChain() {\n    const t = this.getWebGLProcessorDefinition();\n    if (!t) return null;\n    const s = [t],\n          {\n      parameters: e\n    } = t;\n    let r = e.rasters || e.raster && [e.raster];\n\n    for (; r?.length;) {\n      s.unshift(...r);\n      const t = [];\n\n      for (let s = 0; s < r.length; s++) {\n        const {\n          parameters: e\n        } = r[s],\n              i = e.rasters || e.raster && [e.raster];\n        i?.length && t.push(...i);\n      }\n\n      r = t;\n    }\n\n    for (let n = s.length - 1; n >= 0; n--) s[n].isNoopProcess && s.splice(n, 1);\n\n    let i = !1;\n\n    for (let n = 0; n < s.length; n++) {\n      const t = s[n];\n      t.id = s.length - n - 1;\n      const {\n        rasters: e\n      } = t.parameters;\n      i = i || null != e && e.length > 1;\n    }\n\n    return {\n      hasBranches: i,\n      functions: s\n    };\n  }\n\n  _getOutputPixelType(t) {\n    return \"unknown\" === this.outputPixelType ? t : this.outputPixelType ?? t;\n  }\n\n  _getWebGLParameters() {\n    return {};\n  }\n\n  _getInputBandIds(t) {\n    return t;\n  }\n\n  _isOutputRoundingNeeded() {\n    const {\n      outputPixelType: t\n    } = this;\n    return (t?.startsWith(\"u\") || t?.startsWith(\"s\")) ?? !1;\n  }\n\n  _getRasterValues() {\n    const {\n      rasterArgumentNames: t\n    } = this;\n    return \"rasters\" === t[0] ? this.functionArguments.rasters ?? [] : t.map(t => this.functionArguments[t]);\n  }\n\n  _getSourceRasterInfos(t) {\n    const s = this._getRasterValues(),\n          {\n      rasterInfos: e,\n      rasterIds: r\n    } = t;\n\n    if (0 === s.length) return e;\n    const i = s.map(t => t && \"object\" == typeof t && \"bind\" in t && t.rasterInfo ? t.rasterInfo : \"string\" == typeof t && r.includes(t) ? e[r.indexOf(t)] : \"number\" != typeof t ? e[0] : void 0),\n          n = i.find(t => t) ?? e[0];\n    return i.forEach((t, s) => {\n      void 0 === t && (i[s] = n);\n    }), i;\n  }\n\n  _getPrimaryRasterId(t) {\n    return t?.url;\n  }\n\n  _getPrimaryRasters(t, s = [], e = []) {\n    for (let r = 0; r < t.sourceRasters.length; r++) {\n      const i = t.sourceRasters[r];\n      if (\"number\" != typeof i) if (\"bind\" in i) this._getPrimaryRasters(i, s, e);else {\n        const t = i,\n              r = this._getPrimaryRasterId(t);\n\n        if (null == r) continue;\n        e.includes(r) || (this.mainPrimaryRasterId === r ? (s.unshift(t), e.unshift(r)) : (s.push(t), e.push(r)));\n      }\n    }\n  }\n\n  _isRasterFunctionValue(t) {\n    return null != t && \"object\" == typeof t && \"getWebGLProcessorDefinition\" in t;\n  }\n\n  _readRasterValue(t, s) {\n    const {\n      primaryPixelBlocks: e\n    } = s;\n\n    if (r(t) || \"$$\" === t) {\n      const t = e[0];\n      return r(t) ? null : t.clone();\n    }\n\n    if (\"string\" == typeof t) {\n      const r = s.primaryRasterIds.indexOf(t);\n      return -1 === r ? null : e[r];\n    }\n\n    if (\"number\" == typeof t) {\n      const s = e[0];\n      if (r(s)) return null;\n      const {\n        width: i,\n        height: n,\n        pixelType: o,\n        mask: u\n      } = s,\n            p = u ? new Uint8Array(u) : null,\n            l = new Float32Array(i * n);\n      l.fill(t);\n      const d = this.sourceRasterInfos[0].bandCount,\n            c = new Array(d).fill(l);\n      return new a({\n        width: i,\n        height: n,\n        pixelType: o,\n        pixels: c,\n        mask: p\n      });\n    }\n\n    return t.process(s);\n  }\n\n};\nt([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"functionName\", void 0), t([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"functionArguments\", void 0), t([i()], p.prototype, \"rasterArgumentNames\", void 0), t([i({\n  json: {\n    write: !0\n  }\n}), n(t => t?.toLowerCase())], p.prototype, \"outputPixelType\", void 0), t([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"mainPrimaryRasterId\", void 0), t([i()], p.prototype, \"sourceRasters\", void 0), t([i({\n  type: [u],\n  json: {\n    write: !0\n  }\n})], p.prototype, \"sourceRasterInfos\", void 0), t([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"rasterInfo\", void 0), t([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"readingBufferSize\", void 0), t([i({\n  json: {\n    write: !0\n  }\n})], p.prototype, \"id\", void 0), t([i()], p.prototype, \"isNoopProcess\", void 0), t([i()], p.prototype, \"supportsGPU\", null), t([i()], p.prototype, \"rawInputBandIds\", void 0), t([i()], p.prototype, \"isInputBandIdsSwizzled\", void 0), t([i()], p.prototype, \"swizzledBandSelection\", void 0), t([i()], p.prototype, \"isBranch\", void 0), t([i()], p.prototype, \"_bindingResult\", void 0), p = t([o(\"esri.layers.support.rasterFunctions.BaseRasterFunction\")], p);\nconst l = p;\nexport { l as default };","map":{"version":3,"names":["_","t","JSONSupport","s","isSome","e","isNone","r","property","i","cast","n","subclass","o","a","u","p","constructor","arguments","functionArguments","readingBufferSize","id","isNoopProcess","rawInputBandIds","isInputBandIdsSwizzled","swizzledBandSelection","isBranch","_bindingResult","supportsGPU","bind","_getRasterValues","length","_isRasterFunctionValue","success","rasterInfo","sourceRasterInfos","_getSourceRasterInfos","_bindSourceRasters","processInputBandIds","process","pixelBlocks","primaryPixelBlocks","map","_readRasterValue","_processPixels","filter","some","functionName","forEach","bandCount","push","_getInputBandIds","getPrimaryRasters","_getPrimaryRasters","rasters","rasterIds","getWebGLProcessorDefinition","_getWebGLParameters","raster","Array","isArray","name","parameters","value","pixelType","outputPixelType","getFlatWebGLFunctionChain","unshift","splice","hasBranches","functions","_getOutputPixelType","_isOutputRoundingNeeded","startsWith","rasterArgumentNames","rasterInfos","includes","indexOf","find","_getPrimaryRasterId","url","sourceRasters","mainPrimaryRasterId","clone","primaryRasterIds","width","height","mask","Uint8Array","l","Float32Array","fill","d","c","pixels","json","write","prototype","toLowerCase","type","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/layers/support/rasterFunctions/BaseRasterFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{JSONSupport as s}from\"../../../core/JSONSupport.js\";import{isSome as e,isNone as r}from\"../../../core/maybe.js\";import{property as i}from\"../../../core/accessorSupport/decorators/property.js\";import{cast as n}from\"../../../core/accessorSupport/decorators/cast.js\";import\"../../../core/arrayUtils.js\";import{subclass as o}from\"../../../core/accessorSupport/decorators/subclass.js\";import a from\"../PixelBlock.js\";import u from\"../RasterInfo.js\";let p=class extends s{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}bind(t,s=!1,r=-1){this.id=r+1;const i=this._getRasterValues();let n=!0;for(let o=0;o<i.length;o++){const r=i[o];if(e(r)&&this._isRasterFunctionValue(r)){const e=r.bind(t,s,this.id+o);if(!e.success)return this._bindingResult=e,e;n=n&&e.supportsGPU}}return!this.rasterInfo||s?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.supportsGPU=n&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const s=this._getRasterValues(),e=0===s.length?t.pixelBlocks??t.primaryPixelBlocks:s.map((s=>this._readRasterValue(s,t)));return this._processPixels({...t,pixelBlocks:e})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let s;if(t.length>1){const s=t.map((t=>t.processInputBandIds()[0]));this.rawInputBandIds=s,this.isInputBandIdsSwizzled=this.rawInputBandIds.some(((t,s)=>t!==s));const e=t.filter((t=>\"ExtractBand\"===t.functionName));return e.length&&e.forEach(((t,s)=>{t.isInputBandIdsSwizzled=!0,t.swizzledBandSelection=[s,s,s]})),this.rawInputBandIds}const e=t[0];if(e){if(s=e.processInputBandIds(),e.isInputBandIdsSwizzled)return this.rawInputBandIds=s,s}else{s=[];const{bandCount:t}=this.sourceRasterInfos[0];for(let e=0;e<t;e++)s.push(e)}const r=this._getInputBandIds(s);return this.isInputBandIdsSwizzled=r.some(((t,s)=>t!==s)),this.rawInputBandIds=r,this.rawInputBandIds}getPrimaryRasters(){const t=[],s=[];return this._getPrimaryRasters(this,t,s),{rasters:t,rasterIds:s}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:s,rasters:e}=this.functionArguments;return e&&Array.isArray(e)&&e.length?(t.rasters=e.map((t=>this._isRasterFunctionValue(t)?t.getWebGLProcessorDefinition():\"number\"==typeof t?{name:\"Constant\",parameters:{value:t},pixelType:\"f32\",id:-1,isNoopProcess:!1}:{name:\"Identity\",parameters:{value:t},pixelType:\"f32\",id:-1,isNoopProcess:!1})),t.rasters.some((t=>null!=t))||(t.rasters=null)):this._isRasterFunctionValue(s)&&(t.raster=s.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getFlatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const s=[t],{parameters:e}=t;let r=e.rasters||e.raster&&[e.raster];for(;r?.length;){s.unshift(...r);const t=[];for(let s=0;s<r.length;s++){const{parameters:e}=r[s],i=e.rasters||e.raster&&[e.raster];i?.length&&t.push(...i)}r=t}for(let n=s.length-1;n>=0;n--)s[n].isNoopProcess&&s.splice(n,1);let i=!1;for(let n=0;n<s.length;n++){const t=s[n];t.id=s.length-n-1;const{rasters:e}=t.parameters;i=i||null!=e&&e.length>1}return{hasBranches:i,functions:s}}_getOutputPixelType(t){return\"unknown\"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_isOutputRoundingNeeded(){const{outputPixelType:t}=this;return(t?.startsWith(\"u\")||t?.startsWith(\"s\"))??!1}_getRasterValues(){const{rasterArgumentNames:t}=this;return\"rasters\"===t[0]?this.functionArguments.rasters??[]:t.map((t=>this.functionArguments[t]))}_getSourceRasterInfos(t){const s=this._getRasterValues(),{rasterInfos:e,rasterIds:r}=t;if(0===s.length)return e;const i=s.map((t=>t&&\"object\"==typeof t&&\"bind\"in t&&t.rasterInfo?t.rasterInfo:\"string\"==typeof t&&r.includes(t)?e[r.indexOf(t)]:\"number\"!=typeof t?e[0]:void 0)),n=i.find((t=>t))??e[0];return i.forEach(((t,s)=>{void 0===t&&(i[s]=n)})),i}_getPrimaryRasterId(t){return t?.url}_getPrimaryRasters(t,s=[],e=[]){for(let r=0;r<t.sourceRasters.length;r++){const i=t.sourceRasters[r];if(\"number\"!=typeof i)if(\"bind\"in i)this._getPrimaryRasters(i,s,e);else{const t=i,r=this._getPrimaryRasterId(t);if(null==r)continue;e.includes(r)||(this.mainPrimaryRasterId===r?(s.unshift(t),e.unshift(r)):(s.push(t),e.push(r)))}}}_isRasterFunctionValue(t){return null!=t&&\"object\"==typeof t&&\"getWebGLProcessorDefinition\"in t}_readRasterValue(t,s){const{primaryPixelBlocks:e}=s;if(r(t)||\"$$\"===t){const t=e[0];return r(t)?null:t.clone()}if(\"string\"==typeof t){const r=s.primaryRasterIds.indexOf(t);return-1===r?null:e[r]}if(\"number\"==typeof t){const s=e[0];if(r(s))return null;const{width:i,height:n,pixelType:o,mask:u}=s,p=u?new Uint8Array(u):null,l=new Float32Array(i*n);l.fill(t);const d=this.sourceRasterInfos[0].bandCount,c=new Array(d).fill(l);return new a({width:i,height:n,pixelType:o,pixels:c,mask:p})}return t.process(s)}};t([i({json:{write:!0}})],p.prototype,\"functionName\",void 0),t([i({json:{write:!0}})],p.prototype,\"functionArguments\",void 0),t([i()],p.prototype,\"rasterArgumentNames\",void 0),t([i({json:{write:!0}}),n((t=>t?.toLowerCase()))],p.prototype,\"outputPixelType\",void 0),t([i({json:{write:!0}})],p.prototype,\"mainPrimaryRasterId\",void 0),t([i()],p.prototype,\"sourceRasters\",void 0),t([i({type:[u],json:{write:!0}})],p.prototype,\"sourceRasterInfos\",void 0),t([i({json:{write:!0}})],p.prototype,\"rasterInfo\",void 0),t([i({json:{write:!0}})],p.prototype,\"readingBufferSize\",void 0),t([i({json:{write:!0}})],p.prototype,\"id\",void 0),t([i()],p.prototype,\"isNoopProcess\",void 0),t([i()],p.prototype,\"supportsGPU\",null),t([i()],p.prototype,\"rawInputBandIds\",void 0),t([i()],p.prototype,\"isInputBandIdsSwizzled\",void 0),t([i()],p.prototype,\"swizzledBandSelection\",void 0),t([i()],p.prototype,\"isBranch\",void 0),t([i()],p.prototype,\"_bindingResult\",void 0),p=t([o(\"esri.layers.support.rasterFunctions.BaseRasterFunction\")],p);const l=p;export{l as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}