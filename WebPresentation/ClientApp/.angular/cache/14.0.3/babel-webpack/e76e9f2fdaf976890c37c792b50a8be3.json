{"ast":null,"code":"/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.7\n */\nimport { w as tabbable, x as focusable, y as isTabbable, z as isFocusable, h as focusElement, A as tabbableOptions } from './dom.js';\n/*!\n* focus-trap 7.2.0\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n\n    var trapIndex = trapStack.indexOf(trap);\n\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\n\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\n\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\n\nvar isTabEvent = function isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}; // checks for TAB by default\n\n\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n}; // checks for SHIFT+TAB by default\n\n\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\n\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n}; // Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\n\n\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n  return idx;\n};\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\n\n\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\n\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n}; // NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\n\n\nvar internalTrapStack = [];\n\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   firstTabbableNode: HTMLElement|null,\n    //   lastTabbableNode: HTMLElement|null,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n\n\n  var findContainerIndex = function findContainerIndex(element) {\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n          tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n\n\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n\n      optionValue = optionValue.apply(void 0, params);\n    }\n\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      } // else, empty string (invalid), null (invalid), 0 (invalid)\n\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n\n    return node;\n  };\n\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus'); // false explicitly indicates we want no initialFocus at all\n\n    if (node === false) {\n      return false;\n    }\n\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode; // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n\n    return node;\n  };\n\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions); // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes\n\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        firstTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[0] : null,\n        lastTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : null,\n\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true; // NOTE: If tabindex is positive (in order to manipulate the tab order separate\n          //  from the DOM order), this __will not work__ because the list of focusableNodes,\n          //  while it contains tabbable nodes, does not sort its nodes in any order other\n          //  than DOM order, because it can't: Where would you place focusable (but not\n          //  tabbable) nodes in that order? They have no order, because they aren't tabbale...\n          // Support for positive tabindex is already broken and hard to manage (possibly\n          //  not supportable, TBD), so this isn't going to make things worse than they\n          //  already are, and at least makes things better for the majority of cases where\n          //  tabindex is either 0/unset or negative.\n          // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375\n\n          var nodeIdx = focusableNodes.findIndex(function (n) {\n            return n === node;\n          });\n\n          if (nodeIdx < 0) {\n            return undefined;\n          }\n\n          if (forward) {\n            return focusableNodes.slice(nodeIdx + 1).find(function (n) {\n              return isTabbable(n, config.tabbableOptions);\n            });\n          }\n\n          return focusableNodes.slice(0, nodeIdx).reverse().find(function (n) {\n            return isTabbable(n, config.tabbableOptions);\n          });\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    }); // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n  };\n\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === doc.activeElement) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  }; // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n\n\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n\n    if (findContainerIndex(target) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable(target, config.tabbableOptions)\n      });\n      return;\n    } // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    } // otherwise, prevent the click\n\n\n    e.preventDefault();\n  }; // In case focus escapes the trap for some strange reason, pull it back in.\n\n\n  var checkFocusIn = function checkFocusIn(e) {\n    var target = getActualTarget(e);\n    var targetContained = findContainerIndex(target) >= 0; // In Firefox when you Tab out of an iframe the Document is briefly focused.\n\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  }; // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n\n\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var target = getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {\n          var firstTabbableNode = _ref2.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var lastTabbableNode = _ref3.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = _destinationGroup.firstTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n\n      tryFocus(destinationNode);\n    } // else, let the browser take care of [shift+]tab and move the focus\n\n  };\n\n  var checkKey = function checkKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n\n    if (findContainerIndex(target) >= 0) {\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }; //\n  // EVENT LISTENERS\n  //\n\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    } // There can be only one listening focus trap at a time\n\n\n    activeFocusTraps.activateTrap(trapStack, trap); // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  }; //\n  // TRAP DEFINITION\n  //\n\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n\n    get paused() {\n      return state.paused;\n    },\n\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n\n        addListeners();\n\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n      return this;\n    },\n    unpause: function unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    }\n  }; // initialize container elements\n\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nconst trapStack = [];\n/**\n * Helper to set up the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n */\n\nfunction connectFocusTrap(component) {\n  const {\n    focusTrapEl\n  } = component;\n\n  if (!focusTrapEl) {\n    return;\n  }\n\n  if (focusTrapEl.tabIndex == null) {\n    focusTrapEl.tabIndex = -1;\n  }\n\n  const focusTrapOptions = {\n    clickOutsideDeactivates: true,\n    document: focusTrapEl.ownerDocument,\n    escapeDeactivates: false,\n    fallbackFocus: focusTrapEl,\n    setReturnFocus: el => {\n      focusElement(el);\n      return false;\n    },\n    tabbableOptions,\n    trapStack\n  };\n  component.focusTrap = createFocusTrap(focusTrapEl, focusTrapOptions);\n}\n/**\n * Helper to activate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n */\n\n\nfunction activateFocusTrap(component) {\n  if (!component.focusTrapDisabled) {\n    component.focusTrap?.activate();\n  }\n}\n/**\n * Helper to deactivate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n */\n\n\nfunction deactivateFocusTrap(component) {\n  component.focusTrap?.deactivate();\n}\n/**\n * Helper to update the element(s) that are used within the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @example\n * const modal = document.querySelector(\"calcite-modal\");\n * const input = document.createElement(\"calcite-input\");\n * content.appendChild(input);\n * await input.componentOnReady();\n * await modal.updateFocusTrapElements();\n * requestAnimationFrame(() => input.setFocus());\n */\n\n\nfunction updateFocusTrapElements(component) {\n  component.focusTrap?.updateContainerElements(component.focusTrapEl);\n}\n\nexport { activateFocusTrap as a, connectFocusTrap as c, deactivateFocusTrap as d, updateFocusTrapElements as u };","map":{"version":3,"names":["w","tabbable","x","focusable","y","isTabbable","z","isFocusable","h","focusElement","A","tabbableOptions","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","_toPropertyKey","configurable","writable","_toPrimitive","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","String","Number","arg","activeFocusTraps","activateTrap","trapStack","trap","activeTrap","pause","trapIndex","indexOf","splice","deactivateTrap","unpause","isSelectableInput","node","tagName","toLowerCase","select","isEscapeEvent","e","keyCode","isTabEvent","isKeyForward","shiftKey","isKeyBackward","delay","fn","setTimeout","findIndex","arr","idx","every","valueOrHandler","_len","params","Array","_key","getActualTarget","event","shadowRoot","composedPath","internalTrapStack","createFocusTrap","elements","userOptions","doc","document","config","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","delayInitialFocusTimer","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","element","_ref","container","tabbableNodes","contains","find","getNodeForOption","optionValue","_len2","_key2","Error","concat","querySelector","getInitialFocusNode","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","focusableNodes","lastTabbableNode","nextTabbableNode","forward","nodeIdx","n","slice","reverse","group","tryFocus","focus","preventScroll","getReturnFocusNode","previousActiveElement","checkPointerDown","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","stopImmediatePropagation","checkKeyNav","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref2","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref3","_destinationGroupIndex","_destinationGroup","checkKey","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","activate","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","options","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","finishDeactivation","updateContainerElements","containerElements","elementsAsArray","Boolean","connectFocusTrap","component","focusTrapEl","tabIndex","focusTrapOptions","ownerDocument","fallbackFocus","setReturnFocus","el","focusTrap","activateFocusTrap","focusTrapDisabled","deactivateFocusTrap","updateFocusTrapElements","a","c","d","u"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@esri/calcite-components/dist/components/focusTrapComponent.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.7\n */\nimport { w as tabbable, x as focusable, y as isTabbable, z as isFocusable, h as focusElement, A as tabbableOptions } from './dom.js';\n\n/*!\n* focus-trap 7.2.0\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap.pause();\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0) {\n      trapStack[trapStack.length - 1].unpause();\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nvar findIndex = function findIndex(arr, fn) {\n  var idx = -1;\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(void 0, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === void 0 ? void 0 : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   firstTabbableNode: HTMLElement|null,\n    //   lastTabbableNode: HTMLElement|null,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element) {\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) ||\n      // fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        params[_key2 - 1] = arguments[_key2];\n      }\n      optionValue = optionValue.apply(void 0, params);\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        firstTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[0] : null,\n        lastTabbableNode: tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : null,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          // NOTE: If tabindex is positive (in order to manipulate the tab order separate\n          //  from the DOM order), this __will not work__ because the list of focusableNodes,\n          //  while it contains tabbable nodes, does not sort its nodes in any order other\n          //  than DOM order, because it can't: Where would you place focusable (but not\n          //  tabbable) nodes in that order? They have no order, because they aren't tabbale...\n          // Support for positive tabindex is already broken and hard to manage (possibly\n          //  not supportable, TBD), so this isn't going to make things worse than they\n          //  already are, and at least makes things better for the majority of cases where\n          //  tabindex is either 0/unset or negative.\n          // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375\n          var nodeIdx = focusableNodes.findIndex(function (n) {\n            return n === node;\n          });\n          if (nodeIdx < 0) {\n            return undefined;\n          }\n          if (forward) {\n            return focusableNodes.slice(nodeIdx + 1).find(function (n) {\n              return isTabbable(n, config.tabbableOptions);\n            });\n          }\n          return focusableNodes.slice(0, nodeIdx).reverse().find(function (n) {\n            return isTabbable(n, config.tabbableOptions);\n          });\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n  };\n  var tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === doc.activeElement) {\n      return;\n    }\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable(target, config.tabbableOptions)\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  var checkFocusIn = function checkFocusIn(e) {\n    var target = getActualTarget(e);\n    var targetContained = findContainerIndex(target) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var target = getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = findIndex(state.tabbableGroups, function (_ref2) {\n          var firstTabbableNode = _ref2.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = findIndex(state.tabbableGroups, function (_ref3) {\n          var lastTabbableNode = _ref3.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = _destinationGroup.firstTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  var checkKey = function checkKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n      return;\n    }\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      if (onActivate) {\n        onActivate();\n      }\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      if (onDeactivate) {\n        onDeactivate();\n      }\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n      state.paused = true;\n      removeListeners();\n      return this;\n    },\n    unpause: function unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      return this;\n    }\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nconst trapStack = [];\n/**\n * Helper to set up the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n */\nfunction connectFocusTrap(component) {\n  const { focusTrapEl } = component;\n  if (!focusTrapEl) {\n    return;\n  }\n  if (focusTrapEl.tabIndex == null) {\n    focusTrapEl.tabIndex = -1;\n  }\n  const focusTrapOptions = {\n    clickOutsideDeactivates: true,\n    document: focusTrapEl.ownerDocument,\n    escapeDeactivates: false,\n    fallbackFocus: focusTrapEl,\n    setReturnFocus: (el) => {\n      focusElement(el);\n      return false;\n    },\n    tabbableOptions,\n    trapStack\n  };\n  component.focusTrap = createFocusTrap(focusTrapEl, focusTrapOptions);\n}\n/**\n * Helper to activate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n */\nfunction activateFocusTrap(component) {\n  if (!component.focusTrapDisabled) {\n    component.focusTrap?.activate();\n  }\n}\n/**\n * Helper to deactivate the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n */\nfunction deactivateFocusTrap(component) {\n  component.focusTrap?.deactivate();\n}\n/**\n * Helper to update the element(s) that are used within the FocusTrap component.\n *\n * @param {FocusTrapComponent} component The FocusTrap component.\n * @example\n * const modal = document.querySelector(\"calcite-modal\");\n * const input = document.createElement(\"calcite-input\");\n * content.appendChild(input);\n * await input.componentOnReady();\n * await modal.updateFocusTrapElements();\n * requestAnimationFrame(() => input.setFocus());\n */\nfunction updateFocusTrapElements(component) {\n  component.focusTrap?.updateContainerElements(component.focusTrapEl);\n}\n\nexport { activateFocusTrap as a, connectFocusTrap as c, deactivateFocusTrap as d, updateFocusTrapElements as u };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}