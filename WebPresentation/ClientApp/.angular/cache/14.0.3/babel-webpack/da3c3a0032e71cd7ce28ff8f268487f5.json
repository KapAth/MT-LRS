{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as t } from \"../../../chunks/tslib.es6.js\";\nimport { isSome as s, isNone as e } from \"../../../core/maybe.js\";\nimport { property as n } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as r } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { getBandMatrix3 as o } from \"./bandIndexUtils.js\";\nimport i from \"./BaseRasterFunction.js\";\nimport a from \"./ExtractBandFunctionArguments.js\";\nimport { MissingBandAction as u } from \"./pixelUtils.js\";\nlet c = class extends i {\n  constructor() {\n    super(...arguments), this.functionName = \"ExtractBand\", this.functionArguments = null, this.rasterArgumentNames = [\"raster\"];\n  }\n\n  _bindSourceRasters() {\n    const {\n      sourceRasterInfos: t\n    } = this,\n          e = t[0],\n          {\n      bandCount: n\n    } = e,\n          {\n      bandIds: r,\n      missingBandAction: o\n    } = this.functionArguments;\n    if (o === u.fail && r.some(t => t < 0 || t >= n)) return {\n      success: !1,\n      supportsGPU: !1,\n      error: \"extract-band-function: invalid bandIds\"\n    };\n    this.outputPixelType = this._getOutputPixelType(\"f32\");\n    const i = e.clone();\n    i.pixelType = this.outputPixelType, i.bandCount = r.length;\n    const {\n      statistics: a,\n      histograms: c\n    } = i;\n    s(a) && a.length && (i.statistics = r.map(t => a[t] || a[a.length - 1])), s(c) && c.length && (i.histograms = r.map(t => c[t] || c[c.length - 1])), this.rasterInfo = i;\n    return {\n      success: !0,\n      supportsGPU: i.bandCount <= 3\n    };\n  }\n\n  _processPixels(t) {\n    const s = t.pixelBlocks?.[0];\n    if (e(s)) return null;\n    const n = s.pixels.length,\n          r = this.functionArguments.bandIds.map(t => t >= n ? n - 1 : t);\n    return s.extractBands(r);\n  }\n\n  _getWebGLParameters() {\n    let t;\n    if (this.isInputBandIdsSwizzled) t = this.swizzledBandSelection.length ? this.swizzledBandSelection : [0, 1, 2];else {\n      t = [...this.functionArguments.bandIds], 0 === t.length ? t = [0, 1, 2] : t.length < 3 && (t[1] = t[1] ?? t[0], t[2] = t[2] ?? t[1]);\n\n      for (let s = 0; s < 3; s++) t[s] = Math.min(t[s], 2);\n    }\n    return {\n      bandIndexMat3: o(t)\n    };\n  }\n\n  _getInputBandIds(t) {\n    const s = t.length;\n    return this.functionArguments.bandIds.map(t => t >= s ? s - 1 : t).map(s => t[s]);\n  }\n\n};\nt([n({\n  json: {\n    write: !0,\n    name: \"rasterFunction\"\n  }\n})], c.prototype, \"functionName\", void 0), t([n({\n  type: a,\n  json: {\n    write: !0,\n    name: \"rasterFunctionArguments\"\n  }\n})], c.prototype, \"functionArguments\", void 0), t([n()], c.prototype, \"rasterArgumentNames\", void 0), c = t([r(\"esri.layers.support.rasterFunctions.ExtractBandFunction\")], c);\nconst p = c;\nexport { p as default };","map":{"version":3,"names":["_","t","isSome","s","isNone","e","property","n","subclass","r","getBandMatrix3","o","i","a","MissingBandAction","u","c","constructor","arguments","functionName","functionArguments","rasterArgumentNames","_bindSourceRasters","sourceRasterInfos","bandCount","bandIds","missingBandAction","fail","some","success","supportsGPU","error","outputPixelType","_getOutputPixelType","clone","pixelType","length","statistics","histograms","map","rasterInfo","_processPixels","pixelBlocks","pixels","extractBands","_getWebGLParameters","isInputBandIdsSwizzled","swizzledBandSelection","Math","min","bandIndexMat3","_getInputBandIds","json","write","name","prototype","type","p","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/layers/support/rasterFunctions/ExtractBandFunction.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import{isSome as s,isNone as e}from\"../../../core/maybe.js\";import{property as n}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as r}from\"../../../core/accessorSupport/decorators/subclass.js\";import{getBandMatrix3 as o}from\"./bandIndexUtils.js\";import i from\"./BaseRasterFunction.js\";import a from\"./ExtractBandFunctionArguments.js\";import{MissingBandAction as u}from\"./pixelUtils.js\";let c=class extends i{constructor(){super(...arguments),this.functionName=\"ExtractBand\",this.functionArguments=null,this.rasterArgumentNames=[\"raster\"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:n}=e,{bandIds:r,missingBandAction:o}=this.functionArguments;if(o===u.fail&&r.some((t=>t<0||t>=n)))return{success:!1,supportsGPU:!1,error:\"extract-band-function: invalid bandIds\"};this.outputPixelType=this._getOutputPixelType(\"f32\");const i=e.clone();i.pixelType=this.outputPixelType,i.bandCount=r.length;const{statistics:a,histograms:c}=i;s(a)&&a.length&&(i.statistics=r.map((t=>a[t]||a[a.length-1]))),s(c)&&c.length&&(i.histograms=r.map((t=>c[t]||c[c.length-1]))),this.rasterInfo=i;return{success:!0,supportsGPU:i.bandCount<=3}}_processPixels(t){const s=t.pixelBlocks?.[0];if(e(s))return null;const n=s.pixels.length,r=this.functionArguments.bandIds.map((t=>t>=n?n-1:t));return s.extractBands(r)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let s=0;s<3;s++)t[s]=Math.min(t[s],2)}return{bandIndexMat3:o(t)}}_getInputBandIds(t){const s=t.length;return this.functionArguments.bandIds.map((t=>t>=s?s-1:t)).map((s=>t[s]))}};t([n({json:{write:!0,name:\"rasterFunction\"}})],c.prototype,\"functionName\",void 0),t([n({type:a,json:{write:!0,name:\"rasterFunctionArguments\"}})],c.prototype,\"functionArguments\",void 0),t([n()],c.prototype,\"rasterArgumentNames\",void 0),c=t([r(\"esri.layers.support.rasterFunctions.ExtractBandFunction\")],c);const p=c;export{p as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}