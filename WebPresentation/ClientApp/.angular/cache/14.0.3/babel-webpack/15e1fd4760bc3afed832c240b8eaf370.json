{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { setSingleImageTextures as e, setCoordsAndTransforms as r } from \"./utils.js\";\nconst t = {\n  vsPath: \"raster/rfx/vs\",\n  fsPath: \"raster/rfx/convolution\",\n  attributes: new Map([[\"a_position\", 0], [\"a_texcoord\", 1]])\n};\n\nfunction a(e, r) {\n  const {\n    painter: a,\n    rasterFunction: n\n  } = e,\n        {\n    kernelRows: o,\n    kernelCols: s\n  } = n.parameters,\n        i = [{\n    name: \"rows\",\n    value: o\n  }, {\n    name: \"cols\",\n    value: s\n  }];\n  return a.materialManager.getProgram(t, i);\n}\n\nfunction n(t, a, n) {\n  e(t, a, n), r(a), a.setUniform2fv(\"u_srcImageSize\", [n.width, n.height]);\n  const {\n    kernel: o,\n    clampRange: s\n  } = t.rasterFunction.parameters;\n  a.setUniform1fv(\"u_kernel\", o), a.setUniform2fv(\"u_clampRange\", s);\n}\n\nconst o = {\n  createProgram: a,\n  bindTextureAndUniforms: n\n};\nexport { o as default };","map":{"version":3,"names":["setSingleImageTextures","e","setCoordsAndTransforms","r","t","vsPath","fsPath","attributes","Map","a","painter","rasterFunction","n","kernelRows","o","kernelCols","s","parameters","i","name","value","materialManager","getProgram","setUniform2fv","width","height","kernel","clampRange","setUniform1fv","createProgram","bindTextureAndUniforms","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/views/2d/engine/imagery/processor/convolutionProcessor.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{setSingleImageTextures as e,setCoordsAndTransforms as r}from\"./utils.js\";const t={vsPath:\"raster/rfx/vs\",fsPath:\"raster/rfx/convolution\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])};function a(e,r){const{painter:a,rasterFunction:n}=e,{kernelRows:o,kernelCols:s}=n.parameters,i=[{name:\"rows\",value:o},{name:\"cols\",value:s}];return a.materialManager.getProgram(t,i)}function n(t,a,n){e(t,a,n),r(a),a.setUniform2fv(\"u_srcImageSize\",[n.width,n.height]);const{kernel:o,clampRange:s}=t.rasterFunction.parameters;a.setUniform1fv(\"u_kernel\",o),a.setUniform2fv(\"u_clampRange\",s)}const o={createProgram:a,bindTextureAndUniforms:n};export{o as default};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAOA,sBAAsB,IAAIC,CAAjC,EAAmCC,sBAAsB,IAAIC,CAA7D,QAAmE,YAAnE;AAAgF,MAAMC,CAAC,GAAC;EAACC,MAAM,EAAC,eAAR;EAAwBC,MAAM,EAAC,wBAA/B;EAAwDC,UAAU,EAAC,IAAIC,GAAJ,CAAQ,CAAC,CAAC,YAAD,EAAc,CAAd,CAAD,EAAkB,CAAC,YAAD,EAAc,CAAd,CAAlB,CAAR;AAAnE,CAAR;;AAAyH,SAASC,CAAT,CAAWR,CAAX,EAAaE,CAAb,EAAe;EAAC,MAAK;IAACO,OAAO,EAACD,CAAT;IAAWE,cAAc,EAACC;EAA1B,IAA6BX,CAAlC;EAAA,MAAoC;IAACY,UAAU,EAACC,CAAZ;IAAcC,UAAU,EAACC;EAAzB,IAA4BJ,CAAC,CAACK,UAAlE;EAAA,MAA6EC,CAAC,GAAC,CAAC;IAACC,IAAI,EAAC,MAAN;IAAaC,KAAK,EAACN;EAAnB,CAAD,EAAuB;IAACK,IAAI,EAAC,MAAN;IAAaC,KAAK,EAACJ;EAAnB,CAAvB,CAA/E;EAA6H,OAAOP,CAAC,CAACY,eAAF,CAAkBC,UAAlB,CAA6BlB,CAA7B,EAA+Bc,CAA/B,CAAP;AAAyC;;AAAA,SAASN,CAAT,CAAWR,CAAX,EAAaK,CAAb,EAAeG,CAAf,EAAiB;EAACX,CAAC,CAACG,CAAD,EAAGK,CAAH,EAAKG,CAAL,CAAD,EAAST,CAAC,CAACM,CAAD,CAAV,EAAcA,CAAC,CAACc,aAAF,CAAgB,gBAAhB,EAAiC,CAACX,CAAC,CAACY,KAAH,EAASZ,CAAC,CAACa,MAAX,CAAjC,CAAd;EAAmE,MAAK;IAACC,MAAM,EAACZ,CAAR;IAAUa,UAAU,EAACX;EAArB,IAAwBZ,CAAC,CAACO,cAAF,CAAiBM,UAA9C;EAAyDR,CAAC,CAACmB,aAAF,CAAgB,UAAhB,EAA2Bd,CAA3B,GAA8BL,CAAC,CAACc,aAAF,CAAgB,cAAhB,EAA+BP,CAA/B,CAA9B;AAAgE;;AAAA,MAAMF,CAAC,GAAC;EAACe,aAAa,EAACpB,CAAf;EAAiBqB,sBAAsB,EAAClB;AAAxC,CAAR;AAAmD,SAAOE,CAAC,IAAIiB,OAAZ"},"metadata":{},"sourceType":"module"}