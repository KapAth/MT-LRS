{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport t from \"../../../core/Error.js\";\nimport e from \"./CloudRaster.js\";\nimport r from \"./ImageAuxRaster.js\";\nimport s from \"./ImageServerRaster.js\";\nimport o from \"./MRFRaster.js\";\nimport a from \"./TIFFRaster.js\";\nconst c = new Map();\nc.set(\"CRF\", {\n  desc: \"Cloud Raster Format\",\n  constructor: e\n}), c.set(\"MRF\", {\n  desc: \"Meta Raster Format\",\n  constructor: o\n}), c.set(\"TIFF\", {\n  desc: \"GeoTIFF\",\n  constructor: a\n}), c.set(\"RasterTileServer\", {\n  desc: \"Raster Tile Server\",\n  constructor: s\n}), c.set(\"JPG\", {\n  desc: \"JPG Raster Format\",\n  constructor: r\n}), c.set(\"PNG\", {\n  desc: \"PNG Raster Format\",\n  constructor: r\n}), c.set(\"GIF\", {\n  desc: \"GIF Raster Format\",\n  constructor: r\n}), c.set(\"BMP\", {\n  desc: \"BMP Raster Format\",\n  constructor: r\n});\n\nclass n {\n  static get supportedFormats() {\n    const t = new Set();\n    return c.forEach((e, r) => t.add(r)), t;\n  }\n\n  static open(e) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        url: r,\n        ioConfig: s,\n        sourceJSON: o\n      } = e;\n      let a = e.datasetFormat;\n      null == a && r.lastIndexOf(\".\") && (a = r.slice(r.lastIndexOf(\".\") + 1).toUpperCase()), \"OVR\" === a || \"TIF\" === a ? a = \"TIFF\" : \"JPG\" !== a && \"JPEG\" !== a && \"JFIF\" !== a || (a = \"JPG\"), r.toLowerCase().includes(\"/imageserver\") && !r.toLowerCase().includes(\"/wcsserver\") && (a = \"RasterTileServer\");\n      const n = {\n        url: r,\n        sourceJSON: o,\n        datasetFormat: a,\n        ioConfig: s ?? {\n          bandIds: null,\n          sampling: null\n        }\n      };\n      let l, i;\n\n      if (a && _this.supportedFormats.has(a)) {\n        if (\"CRF\" === a && !s?.enableCRF) throw new t(\"rasterfactory:open\", `cannot open raster: ${r}`);\n        return l = c.get(a).constructor, i = new l(n), yield i.open({\n          signal: e.signal\n        }), i;\n      }\n\n      if (a) throw new t(\"rasterfactory:open\", \"not a supported format \" + a);\n      const u = Array.from(c.keys());\n      let F = 0;\n\n      const m = () => (a = u[F++], a && (\"CRF\" !== a || s?.enableCRF) ? (l = c.get(a).constructor, i = new l(n), i.open({\n        signal: e.signal\n      }).then(() => i).catch(() => m())) : null);\n\n      return m();\n    })();\n  }\n\n  static register(t, e, r) {\n    c.has(t.toUpperCase()) || c.set(t.toUpperCase(), {\n      desc: e,\n      constructor: r\n    });\n  }\n\n}\n\nexport { n as default };","map":{"version":3,"names":["t","e","r","s","o","a","c","Map","set","desc","constructor","n","supportedFormats","Set","forEach","add","open","url","ioConfig","sourceJSON","datasetFormat","lastIndexOf","slice","toUpperCase","toLowerCase","includes","bandIds","sampling","l","i","has","enableCRF","get","signal","u","Array","from","keys","F","m","then","catch","register","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/layers/support/rasterDatasets/RasterFactory.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport t from\"../../../core/Error.js\";import e from\"./CloudRaster.js\";import r from\"./ImageAuxRaster.js\";import s from\"./ImageServerRaster.js\";import o from\"./MRFRaster.js\";import a from\"./TIFFRaster.js\";const c=new Map;c.set(\"CRF\",{desc:\"Cloud Raster Format\",constructor:e}),c.set(\"MRF\",{desc:\"Meta Raster Format\",constructor:o}),c.set(\"TIFF\",{desc:\"GeoTIFF\",constructor:a}),c.set(\"RasterTileServer\",{desc:\"Raster Tile Server\",constructor:s}),c.set(\"JPG\",{desc:\"JPG Raster Format\",constructor:r}),c.set(\"PNG\",{desc:\"PNG Raster Format\",constructor:r}),c.set(\"GIF\",{desc:\"GIF Raster Format\",constructor:r}),c.set(\"BMP\",{desc:\"BMP Raster Format\",constructor:r});class n{static get supportedFormats(){const t=new Set;return c.forEach(((e,r)=>t.add(r))),t}static async open(e){const{url:r,ioConfig:s,sourceJSON:o}=e;let a=e.datasetFormat;null==a&&r.lastIndexOf(\".\")&&(a=r.slice(r.lastIndexOf(\".\")+1).toUpperCase()),\"OVR\"===a||\"TIF\"===a?a=\"TIFF\":\"JPG\"!==a&&\"JPEG\"!==a&&\"JFIF\"!==a||(a=\"JPG\"),r.toLowerCase().includes(\"/imageserver\")&&!r.toLowerCase().includes(\"/wcsserver\")&&(a=\"RasterTileServer\");const n={url:r,sourceJSON:o,datasetFormat:a,ioConfig:s??{bandIds:null,sampling:null}};let l,i;if(a&&this.supportedFormats.has(a)){if(\"CRF\"===a&&!s?.enableCRF)throw new t(\"rasterfactory:open\",`cannot open raster: ${r}`);return l=c.get(a).constructor,i=new l(n),await i.open({signal:e.signal}),i}if(a)throw new t(\"rasterfactory:open\",\"not a supported format \"+a);const u=Array.from(c.keys());let F=0;const m=()=>(a=u[F++],a&&(\"CRF\"!==a||s?.enableCRF)?(l=c.get(a).constructor,i=new l(n),i.open({signal:e.signal}).then((()=>i)).catch((()=>m()))):null);return m()}static register(t,e,r){c.has(t.toUpperCase())||c.set(t.toUpperCase(),{desc:e,constructor:r})}}export{n as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}