{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../../chunks/tslib.es6.js\";\nimport t from \"../../../../core/Accessor.js\";\nimport { property as s } from \"../../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../../core/accessorSupport/ensureType.js\";\nimport \"../../../../core/arrayUtils.js\";\nimport { subclass as r } from \"../../../../core/accessorSupport/decorators/subclass.js\";\nimport { QueueProcessor as o } from \"../../../support/QueueProcessor.js\";\n\nfunction i(e) {\n  return e.some(e => e.globalId);\n}\n\nfunction n(e) {\n  return e.filter(e => !e.error).map(e => e.objectId ?? e.globalId).filter(e => null != e);\n}\n\nfunction d(e, t) {\n  const s = new Set(e);\n\n  for (const r of t.values()) s.add(r);\n\n  return s;\n}\n\nfunction a(e, t) {\n  const s = new Set(e);\n\n  for (const r of t.values()) s.delete(r);\n\n  return s;\n}\n\nlet c = class extends t {\n  constructor(e) {\n    super(e), this._hasGlobalIds = !1, this._notifyUpdating = () => {\n      this.notifyChange(\"updating\");\n    };\n  }\n\n  normalizeCtorArgs(e) {\n    return this._queueProcessor = new o({\n      concurrency: 1,\n      process: e.process\n    }), {};\n  }\n\n  destroy() {\n    this.clear();\n  }\n\n  get updating() {\n    return this._queueProcessor.length > 0;\n  }\n\n  clear() {\n    this._queueProcessor.clear();\n  }\n\n  push(e) {\n    const t = this._queueProcessor,\n          s = t.last();\n\n    switch (e.type) {\n      case \"update\":\n      case \"refresh\":\n        if (s?.type === e.type) return;\n        t.push(e).then(this._notifyUpdating, this._notifyUpdating);\n        break;\n\n      case \"edit\":\n        {\n          const r = \"processed-edit\" === s?.type ? s : null;\n          r && t.popLast();\n\n          const o = this._mergeEdits(r, e);\n\n          for (const e of o) e && t.push(e).then(this._notifyUpdating, this._notifyUpdating);\n\n          break;\n        }\n    }\n\n    this.notifyChange(\"updating\");\n  }\n\n  _mergeEdits(e, t) {\n    const {\n      addedFeatures: s,\n      deletedFeatures: r,\n      updatedFeatures: o\n    } = t.edits;\n\n    if (this._hasGlobalIds = this._hasGlobalIds || i(s) || i(o) || i(r), this._hasGlobalIds) {\n      return [e, {\n        type: \"processed-edit\",\n        edits: {\n          addOrModified: [...s, ...o],\n          removed: r\n        }\n      }];\n    }\n\n    const c = new Set(n(e?.edits.addOrModified ?? [])),\n          p = new Set(n(e?.edits.removed ?? [])),\n          u = new Set([...n(s), ...n(o)]),\n          l = new Set(n(r));\n    return [{\n      type: \"processed-edit\",\n      edits: {\n        addOrModified: Array.from(d(a(c, l), u)).map(e => ({\n          objectId: e\n        })),\n        removed: Array.from(d(a(p, u), l)).map(e => ({\n          objectId: e\n        }))\n      }\n    }];\n  }\n\n};\ne([s({\n  readOnly: !0\n})], c.prototype, \"updating\", null), e([s()], c.prototype, \"process\", void 0), c = e([r(\"esri.views.2d.layers.support.FeatureCommandQueue\")], c);\nconst p = c;\nexport { p as default };","map":{"version":3,"names":["_","e","t","property","s","subclass","r","QueueProcessor","o","i","some","globalId","n","filter","error","map","objectId","d","Set","values","add","a","delete","c","constructor","_hasGlobalIds","_notifyUpdating","notifyChange","normalizeCtorArgs","_queueProcessor","concurrency","process","destroy","clear","updating","length","push","last","type","then","popLast","_mergeEdits","addedFeatures","deletedFeatures","updatedFeatures","edits","addOrModified","removed","p","u","l","Array","from","readOnly","prototype","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/views/2d/layers/support/FeatureCommandQueue.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../chunks/tslib.es6.js\";import t from\"../../../../core/Accessor.js\";import{property as s}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/accessorSupport/ensureType.js\";import\"../../../../core/arrayUtils.js\";import{subclass as r}from\"../../../../core/accessorSupport/decorators/subclass.js\";import{QueueProcessor as o}from\"../../../support/QueueProcessor.js\";function i(e){return e.some((e=>e.globalId))}function n(e){return e.filter((e=>!e.error)).map((e=>e.objectId??e.globalId)).filter((e=>null!=e))}function d(e,t){const s=new Set(e);for(const r of t.values())s.add(r);return s}function a(e,t){const s=new Set(e);for(const r of t.values())s.delete(r);return s}let c=class extends t{constructor(e){super(e),this._hasGlobalIds=!1,this._notifyUpdating=()=>{this.notifyChange(\"updating\")}}normalizeCtorArgs(e){return this._queueProcessor=new o({concurrency:1,process:e.process}),{}}destroy(){this.clear()}get updating(){return this._queueProcessor.length>0}clear(){this._queueProcessor.clear()}push(e){const t=this._queueProcessor,s=t.last();switch(e.type){case\"update\":case\"refresh\":if(s?.type===e.type)return;t.push(e).then(this._notifyUpdating,this._notifyUpdating);break;case\"edit\":{const r=\"processed-edit\"===s?.type?s:null;r&&t.popLast();const o=this._mergeEdits(r,e);for(const e of o)e&&t.push(e).then(this._notifyUpdating,this._notifyUpdating);break}}this.notifyChange(\"updating\")}_mergeEdits(e,t){const{addedFeatures:s,deletedFeatures:r,updatedFeatures:o}=t.edits;if(this._hasGlobalIds=this._hasGlobalIds||i(s)||i(o)||i(r),this._hasGlobalIds){return[e,{type:\"processed-edit\",edits:{addOrModified:[...s,...o],removed:r}}]}const c=new Set(n(e?.edits.addOrModified??[])),p=new Set(n(e?.edits.removed??[])),u=new Set([...n(s),...n(o)]),l=new Set(n(r));return[{type:\"processed-edit\",edits:{addOrModified:Array.from(d(a(c,l),u)).map((e=>({objectId:e}))),removed:Array.from(d(a(p,u),l)).map((e=>({objectId:e})))}}]}};e([s({readOnly:!0})],c.prototype,\"updating\",null),e([s()],c.prototype,\"process\",void 0),c=e([r(\"esri.views.2d.layers.support.FeatureCommandQueue\")],c);const p=c;export{p as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}