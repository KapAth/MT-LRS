{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isNone as e, isSome as t } from \"../../../core/maybe.js\";\nimport { polygonCentroid as i, extentCentroid as s } from \"../../../geometry/support/centroid.js\";\nimport { getPolygonExtent as a, getGeometryExtent as r } from \"../../../geometry/support/extentUtils.js\";\nimport { toQuantizationTransform as n } from \"../../../geometry/support/quantizationUtils.js\";\nimport { isValid as o, equals as l } from \"../../../geometry/support/spatialReferenceUtils.js\";\nimport u from \"./AttributesBuilder.js\";\nimport { project as c } from \"./projectionSupport.js\";\nimport { makeEdgeCandidate as d, makeVertexCandidate as m } from \"./SnappingCandidate.js\";\nimport { cleanFromGeometryEngine as h, getGeometry as f, transformCentroid as g } from \"./utils.js\";\nimport { isStringField as p } from \"../../support/fieldUtils.js\";\nimport { isNullCountSupported as y, calculateStringStatistics as x, calculateStatistics as I, processSummaryStatisticsResult as T, calculateUniqueValuesCount as V, createUVResult as F, calculateClassBreaks as S, resolveCBResult as _, calculateHistogram as z, getAttributeComparator as v, calculatePercentile as b } from \"../../../statistics/utils.js\";\nimport { loadArcade as R } from \"../../../support/arcadeOnDemand.js\";\n\nclass A {\n  constructor(e, t, i) {\n    this.items = e, this.query = t, this.geometryType = i.geometryType, this.hasM = i.hasM, this.hasZ = i.hasZ, this.fieldsIndex = i.fieldsIndex, this.objectIdField = i.objectIdField, this.spatialReference = i.spatialReference, this.featureAdapter = i.featureAdapter;\n  }\n\n  get size() {\n    return this.items.length;\n  }\n\n  createQueryResponseForCount() {\n    const e = new u(this.query, this.featureAdapter, this.fieldsIndex);\n    if (!this.query.outStatistics) return e.countDistinctValues(this.items);\n    const {\n      groupByFieldsForStatistics: t,\n      having: i,\n      outStatistics: s\n    } = this.query,\n          a = t?.length;\n    if (!!!a) return 1;\n    const r = new Map(),\n          n = new Map(),\n          o = new Set();\n\n    for (const l of s) {\n      const {\n        statisticType: s\n      } = l,\n            a = \"exceedslimit\" !== s ? l.onStatisticField : void 0;\n\n      if (!n.has(a)) {\n        const i = [];\n\n        for (const s of t) {\n          const t = this._getAttributeValues(e, s, r);\n\n          i.push(t);\n        }\n\n        n.set(a, this._calculateUniqueValues(i, e.returnDistinctValues));\n      }\n\n      const u = n.get(a);\n\n      for (const t in u) {\n        const {\n          data: s,\n          items: a\n        } = u[t],\n              r = s.join(\",\");\n        i && !e.validateItems(a, i) || o.add(r);\n      }\n    }\n\n    return o.size;\n  }\n\n  createQueryResponse() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let e;\n\n      if (_this.query.outStatistics) {\n        e = _this.query.outStatistics.some(e => \"exceedslimit\" === e.statisticType) ? _this._createExceedsLimitQueryResponse(_this.query) : yield _this._createStatisticsQueryResponse(_this.query);\n      } else e = _this._createFeatureQueryResponse(_this.query);\n\n      if (_this.query.returnQueryGeometry) {\n        const t = _this.query.geometry;\n        o(_this.query.outSR) && !l(t.spatialReference, _this.query.outSR) ? e.queryGeometry = h({\n          spatialReference: _this.query.outSR,\n          ...c(t, t.spatialReference, _this.query.outSR)\n        }) : e.queryGeometry = h({\n          spatialReference: _this.query.outSR,\n          ...t\n        });\n      }\n\n      return e;\n    })();\n  }\n\n  createSnappingResponse(t, i) {\n    const s = this.featureAdapter,\n          a = N(this.hasZ, this.hasM),\n          {\n      point: r,\n      mode: n\n    } = t,\n          o = \"number\" == typeof t.distance ? t.distance : t.distance.x,\n          l = \"number\" == typeof t.distance ? t.distance : t.distance.y,\n          u = {\n      candidates: []\n    },\n          c = \"esriGeometryPolygon\" === this.geometryType,\n          h = this._getPointCreator(n, this.spatialReference, i),\n          f = new q(null, 0),\n          g = new q(null, 0),\n          p = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n\n    for (const y of this.items) {\n      const i = s.getGeometry(y);\n      if (e(i)) continue;\n      const {\n        coords: n,\n        lengths: x\n      } = i;\n\n      if (f.coords = n, g.coords = n, t.types & D.EDGE) {\n        let e = 0;\n\n        for (let t = 0; t < x.length; t++) {\n          const i = x[t];\n\n          for (let t = 0; t < i; t++, e += a) {\n            const n = f;\n\n            if (n.coordsIndex = e, t !== i - 1) {\n              const t = g;\n              t.coordsIndex = e + a;\n              const i = p;\n              E(p, r, n, t);\n              const c = (r.x - i.x) / o,\n                    m = (r.y - i.y) / l,\n                    f = c * c + m * m;\n              f <= 1 && u.candidates.push(d(s.getObjectId(y), h(i), Math.sqrt(f), h(n), h(t)));\n            }\n          }\n        }\n      }\n\n      if (t.types & D.VERTEX) {\n        const e = c ? n.length - a : n.length;\n\n        for (let t = 0; t < e; t += a) {\n          const e = f;\n          e.coordsIndex = t;\n          const i = (r.x - e.x) / o,\n                a = (r.y - e.y) / l,\n                n = i * i + a * a;\n          n <= 1 && u.candidates.push(m(s.getObjectId(y), h(e), Math.sqrt(n)));\n        }\n      }\n    }\n\n    return u.candidates.sort((e, t) => e.distance - t.distance), u;\n  }\n\n  _getPointCreator(e, i, s) {\n    const a = t(s) && !l(i, s) ? e => c(e, i, s) : e => e,\n          {\n      hasZ: r\n    } = this,\n          n = 0;\n    return \"3d\" === e ? r ? ({\n      x: e,\n      y: t,\n      z: i\n    }) => a({\n      x: e,\n      y: t,\n      z: i\n    }) : ({\n      x: e,\n      y: t\n    }) => a({\n      x: e,\n      y: t,\n      z: n\n    }) : ({\n      x: e,\n      y: t\n    }) => a({\n      x: e,\n      y: t\n    });\n  }\n\n  createSummaryStatisticsResponse(e) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        field: t,\n        valueExpression: i,\n        normalizationField: s,\n        normalizationType: a,\n        normalizationTotal: r,\n        minValue: n,\n        maxValue: o,\n        scale: l\n      } = e,\n            u = _this2.fieldsIndex.isDateField(t),\n            c = yield _this2._getDataValues({\n        field: t,\n        valueExpression: i,\n        normalizationField: s,\n        normalizationType: a,\n        normalizationTotal: r,\n        scale: l\n      }),\n            d = y({\n        normalizationType: a,\n        normalizationField: s,\n        minValue: n,\n        maxValue: o\n      }),\n            m = _this2.fieldsIndex.get(t),\n            h = {\n        value: .5,\n        fieldType: m?.type\n      },\n            f = p(m) ? x({\n        values: c,\n        supportsNullCount: d,\n        percentileParams: h\n      }) : I({\n        values: c,\n        minValue: n,\n        maxValue: o,\n        useSampleStdDev: !a,\n        supportsNullCount: d,\n        percentileParams: h\n      });\n\n      return T(f, u);\n    })();\n  }\n\n  createUniqueValuesResponse(e) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        field: t,\n        valueExpression: i,\n        domains: s,\n        returnAllCodedValues: a,\n        scale: r\n      } = e,\n            n = yield _this3._getDataValues({\n        field: t,\n        field2: e.field2,\n        field3: e.field3,\n        fieldDelimiter: e.fieldDelimiter,\n        valueExpression: i,\n        scale: r\n      }),\n            o = V(n);\n      return F(o, s, a, e.fieldDelimiter);\n    })();\n  }\n\n  createClassBreaksResponse(e) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        field: t,\n        valueExpression: i,\n        normalizationField: s,\n        normalizationType: a,\n        normalizationTotal: r,\n        classificationMethod: n,\n        standardDeviationInterval: o,\n        minValue: l,\n        maxValue: u,\n        numClasses: c,\n        scale: d\n      } = e,\n            m = yield _this4._getDataValues({\n        field: t,\n        valueExpression: i,\n        normalizationField: s,\n        normalizationType: a,\n        normalizationTotal: r,\n        scale: d\n      }),\n            h = S(m, {\n        field: t,\n        normalizationField: s,\n        normalizationType: a,\n        normalizationTotal: r,\n        classificationMethod: n,\n        standardDeviationInterval: o,\n        minValue: l,\n        maxValue: u,\n        numClasses: c\n      });\n      return _(h, n);\n    })();\n  }\n\n  createHistogramResponse(e) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        field: t,\n        valueExpression: i,\n        normalizationField: s,\n        normalizationType: a,\n        normalizationTotal: r,\n        classificationMethod: n,\n        standardDeviationInterval: o,\n        minValue: l,\n        maxValue: u,\n        numBins: c,\n        scale: d\n      } = e,\n            m = yield _this5._getDataValues({\n        field: t,\n        valueExpression: i,\n        normalizationField: s,\n        normalizationType: a,\n        normalizationTotal: r,\n        scale: d\n      });\n      return z(m, {\n        field: t,\n        normalizationField: s,\n        normalizationType: a,\n        normalizationTotal: r,\n        classificationMethod: n,\n        standardDeviationInterval: o,\n        minValue: l,\n        maxValue: u,\n        numBins: c\n      });\n    })();\n  }\n\n  _sortFeatures(e, t, i) {\n    if (e.length > 1 && t && t.length) for (const s of t.reverse()) {\n      const t = s.split(\" \"),\n            a = t[0],\n            r = this.fieldsIndex.get(a),\n            n = !!t[1] && \"desc\" === t[1].toLowerCase(),\n            o = v(r?.type, n);\n      e.sort((e, t) => {\n        const s = i(e, a, r),\n              n = i(t, a, r);\n        return o(s, n);\n      });\n    }\n  }\n\n  _createFeatureQueryResponse(e) {\n    const t = this.items,\n          {\n      geometryType: i,\n      hasM: s,\n      hasZ: a,\n      objectIdField: r,\n      spatialReference: o\n    } = this,\n          {\n      outFields: l,\n      outSR: u,\n      quantizationParameters: c,\n      resultRecordCount: d,\n      resultOffset: m,\n      returnZ: f,\n      returnM: g\n    } = e,\n          p = null != d && t.length > (m || 0) + d,\n          y = l && (l.includes(\"*\") ? [...this.fieldsIndex.fields] : l.map(e => this.fieldsIndex.get(e)));\n    return {\n      exceededTransferLimit: p,\n      features: this._createFeatures(e, t),\n      fields: y,\n      geometryType: i,\n      hasM: s && g,\n      hasZ: a && f,\n      objectIdFieldName: r,\n      spatialReference: h(u || o),\n      transform: c && n(c) || null\n    };\n  }\n\n  _createFeatures(e, t) {\n    const i = new u(e, this.featureAdapter, this.fieldsIndex),\n          {\n      hasM: s,\n      hasZ: a\n    } = this,\n          {\n      orderByFields: r,\n      quantizationParameters: o,\n      returnGeometry: l,\n      returnCentroid: c,\n      maxAllowableOffset: d,\n      resultOffset: m,\n      resultRecordCount: h,\n      returnZ: p = !1,\n      returnM: y = !1\n    } = e,\n          x = a && p,\n          I = s && y;\n    let T = [],\n        V = 0;\n    const F = [...t];\n\n    if (this._sortFeatures(F, r, (e, t, s) => i.getFieldValue(e, t, s)), l || c) {\n      const e = n(o) ?? void 0;\n      if (l && !c) for (const t of F) T[V++] = {\n        attributes: i.getAttributes(t),\n        geometry: f(this.geometryType, this.hasZ, this.hasM, this.featureAdapter.getGeometry(t), d, e, x, I)\n      };else if (!l && c) for (const t of F) T[V++] = {\n        attributes: i.getAttributes(t),\n        centroid: g(this, this.featureAdapter.getCentroid(t, this), e)\n      };else for (const t of F) T[V++] = {\n        attributes: i.getAttributes(t),\n        centroid: g(this, this.featureAdapter.getCentroid(t, this), e),\n        geometry: f(this.geometryType, this.hasZ, this.hasM, this.featureAdapter.getGeometry(t), d, e, x, I)\n      };\n    } else for (const n of F) {\n      const e = i.getAttributes(n);\n      e && (T[V++] = {\n        attributes: e\n      });\n    }\n\n    const S = m || 0;\n\n    if (null != h) {\n      const e = S + h;\n      T = T.slice(S, Math.min(T.length, e));\n    }\n\n    return T;\n  }\n\n  _createExceedsLimitQueryResponse(e) {\n    let i = !1,\n        s = Number.POSITIVE_INFINITY,\n        a = Number.POSITIVE_INFINITY,\n        r = Number.POSITIVE_INFINITY;\n\n    for (const t of e.outStatistics ?? []) if (\"exceedslimit\" === t.statisticType) {\n      s = null != t.maxPointCount ? t.maxPointCount : Number.POSITIVE_INFINITY, a = null != t.maxRecordCount ? t.maxRecordCount : Number.POSITIVE_INFINITY, r = null != t.maxVertexCount ? t.maxVertexCount : Number.POSITIVE_INFINITY;\n      break;\n    }\n\n    if (\"esriGeometryPoint\" === this.geometryType) i = this.items.length > s;else if (this.items.length > a) i = !0;else {\n      const e = N(this.hasZ, this.hasM),\n            s = this.featureAdapter;\n      i = this.items.reduce((e, i) => {\n        const a = s.getGeometry(i);\n        return e + (t(a) && a.coords.length || 0);\n      }, 0) / e > r;\n    }\n    return {\n      fields: [{\n        name: \"exceedslimit\",\n        type: \"esriFieldTypeInteger\",\n        alias: \"exceedslimit\",\n        sqlType: \"sqlTypeInteger\",\n        domain: null,\n        defaultValue: null\n      }],\n      features: [{\n        attributes: {\n          exceedslimit: Number(i)\n        }\n      }]\n    };\n  }\n\n  _createStatisticsQueryResponse(e) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const t = {\n        attributes: {}\n      },\n            i = [],\n            s = new Map(),\n            a = new Map(),\n            r = new Map(),\n            n = new Map(),\n            o = new u(e, _this6.featureAdapter, _this6.fieldsIndex),\n            l = e.outStatistics,\n            {\n        groupByFieldsForStatistics: c,\n        having: d,\n        orderByFields: m\n      } = e,\n            h = c && c.length,\n            f = !!h,\n            g = f ? c[0] : null,\n            p = f && !_this6.fieldsIndex.get(g);\n\n      for (const u of l ?? []) {\n        const {\n          outStatisticFieldName: e,\n          statisticType: l\n        } = u,\n              m = u,\n              y = \"exceedslimit\" !== l ? u.onStatisticField : void 0,\n              x = \"percentile_disc\" === l || \"percentile_cont\" === l,\n              I = \"EnvelopeAggregate\" === l || \"CentroidAggregate\" === l || \"ConvexHullAggregate\" === l,\n              T = f && 1 === h && (y === g || p) && \"count\" === l;\n\n        if (f) {\n          if (!r.has(y)) {\n            const e = [];\n\n            for (const t of c) {\n              const i = _this6._getAttributeValues(o, t, s);\n\n              e.push(i);\n            }\n\n            r.set(y, _this6._calculateUniqueValues(e, !I && o.returnDistinctValues));\n          }\n\n          const t = r.get(y);\n\n          for (const i in t) {\n            const {\n              count: a,\n              data: r,\n              items: l,\n              itemPositions: u\n            } = t[i],\n                  h = r.join(\",\");\n\n            if (!d || o.validateItems(l, d)) {\n              const t = n.get(h) || {\n                attributes: {}\n              };\n\n              if (I) {\n                t.aggregateGeometries || (t.aggregateGeometries = {});\n                const {\n                  aggregateGeometries: e,\n                  outStatisticFieldName: i\n                } = yield _this6._getAggregateGeometry(m, l);\n                t.aggregateGeometries[i] = e;\n              } else {\n                let i = null;\n                if (T) i = a;else {\n                  const e = _this6._getAttributeValues(o, y, s),\n                        t = u.map(t => e[t]);\n\n                  i = x && \"statisticParameters\" in m ? _this6._getPercentileValue(m, t) : _this6._getStatisticValue(m, t, null, o.returnDistinctValues);\n                }\n                t.attributes[e] = i;\n              }\n\n              let i = 0;\n              c.forEach((e, s) => t.attributes[_this6.fieldsIndex.get(e) ? e : \"EXPR_\" + ++i] = r[s]), n.set(h, t);\n            }\n          }\n        } else if (I) {\n          t.aggregateGeometries || (t.aggregateGeometries = {});\n          const {\n            aggregateGeometries: e,\n            outStatisticFieldName: i\n          } = yield _this6._getAggregateGeometry(m, _this6.items);\n          t.aggregateGeometries[i] = e;\n        } else {\n          const i = _this6._getAttributeValues(o, y, s);\n\n          t.attributes[e] = x && \"statisticParameters\" in m ? _this6._getPercentileValue(m, i) : _this6._getStatisticValue(m, i, a, o.returnDistinctValues);\n        }\n\n        i.push({\n          name: e,\n          alias: e,\n          type: \"esriFieldTypeDouble\"\n        });\n      }\n\n      const y = f ? Array.from(n.values()) : [t];\n      return _this6._sortFeatures(y, m, (e, t) => e.attributes[t]), {\n        fields: i,\n        features: y\n      };\n    })();\n  }\n\n  _getAggregateGeometry(e, t) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      const n = yield import(\"../../../geometry/geometryEngineJSON.js\"),\n            {\n        statisticType: o,\n        outStatisticFieldName: l\n      } = e,\n            {\n        featureAdapter: u,\n        spatialReference: c,\n        geometryType: d,\n        hasZ: m,\n        hasM: h\n      } = _this7,\n            g = t.map(e => f(d, m, h, u.getGeometry(e))),\n            p = n.convexHull(c, g, !0)[0],\n            y = {\n        aggregateGeometries: null,\n        outStatisticFieldName: null\n      };\n\n      if (\"EnvelopeAggregate\" === o) {\n        const e = p ? a(p) : r(n.union(c, g));\n        y.aggregateGeometries = { ...e,\n          spatialReference: c\n        }, y.outStatisticFieldName = l || \"extent\";\n      } else if (\"CentroidAggregate\" === o) {\n        const e = p ? i(p) : s(r(n.union(c, g)));\n        y.aggregateGeometries = {\n          x: e[0],\n          y: e[1],\n          spatialReference: c\n        }, y.outStatisticFieldName = l || \"centroid\";\n      } else \"ConvexHullAggregate\" === o && (y.aggregateGeometries = p, y.outStatisticFieldName = l || \"convexHull\");\n\n      return y;\n    })();\n  }\n\n  _getStatisticValue(e, t, i, s) {\n    const {\n      onStatisticField: a,\n      statisticType: r\n    } = e;\n    let n = null;\n    n = i?.has(a) ? i.get(a) : p(this.fieldsIndex.get(a)) ? x({\n      values: t,\n      returnDistinct: s\n    }) : I({\n      values: s ? [...new Set(t)] : t,\n      minValue: null,\n      maxValue: null,\n      useSampleStdDev: !0\n    }), i && i.set(a, n);\n    return n[\"var\" === r ? \"variance\" : r];\n  }\n\n  _getPercentileValue(e, t) {\n    const {\n      onStatisticField: i,\n      statisticParameters: s,\n      statisticType: a\n    } = e,\n          {\n      value: r,\n      orderBy: n\n    } = s,\n          o = this.fieldsIndex.get(i);\n    return b(t, {\n      value: r,\n      orderBy: n,\n      fieldType: o?.type,\n      isDiscrete: \"percentile_disc\" === a\n    });\n  }\n\n  _getAttributeValues(e, t, i) {\n    if (i.has(t)) return i.get(t);\n    const s = this.fieldsIndex.get(t),\n          a = this.items.map(i => e.getFieldValue(i, t, s));\n    return i.set(t, a), a;\n  }\n\n  _getAttributeDataValues(e, t) {\n    return this.items.map(i => e.getDataValue(i, {\n      field: t.field,\n      field2: t.field2,\n      field3: t.field3,\n      fieldDelimiter: t.fieldDelimiter,\n      normalizationField: t.normalizationField,\n      normalizationType: t.normalizationType,\n      normalizationTotal: t.normalizationTotal\n    }));\n  }\n\n  _getAttributeExpressionValues(e, t, i) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        arcadeUtils: s\n      } = yield R(),\n            a = s.createFunction(t),\n            r = i && s.getViewInfo(i);\n      return e.getExpressionValues(_this8.items, a, r, s);\n    })();\n  }\n\n  _calculateUniqueValues(e, t) {\n    const i = {},\n          s = this.items,\n          a = s.length;\n\n    for (let r = 0; r < a; r++) {\n      const a = s[r],\n            n = [];\n\n      for (const t of e) n.push(t[r]);\n\n      const o = n.join(\",\");\n      null == i[o] ? i[o] = {\n        count: 1,\n        data: n,\n        items: [a],\n        itemPositions: [r]\n      } : (t || i[o].count++, i[o].items.push(a), i[o].itemPositions.push(r));\n    }\n\n    return i;\n  }\n\n  _getDataValues(e) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      const t = new u(_this9.query, _this9.featureAdapter, _this9.fieldsIndex),\n            {\n        valueExpression: i,\n        field: s,\n        normalizationField: a,\n        normalizationType: r,\n        normalizationTotal: n,\n        scale: o\n      } = e,\n            l = i ? {\n        viewingMode: \"map\",\n        scale: o,\n        spatialReference: _this9.query.outSR || _this9.spatialReference\n      } : null;\n      return i ? _this9._getAttributeExpressionValues(t, i, l) : _this9._getAttributeDataValues(t, {\n        field: s,\n        field2: e.field2,\n        field3: e.field3,\n        fieldDelimiter: e.fieldDelimiter,\n        normalizationField: a,\n        normalizationType: r,\n        normalizationTotal: n\n      });\n    })();\n  }\n\n}\n\nfunction E(e, t, i, s) {\n  const a = s.x - i.x,\n        r = s.y - i.y,\n        n = a * a + r * r,\n        o = (t.x - i.x) * a + (t.y - i.y) * r,\n        l = Math.min(1, Math.max(0, o / n));\n  e.x = i.x + a * l, e.y = i.y + r * l;\n}\n\nfunction N(e, t) {\n  return e ? t ? 4 : 3 : t ? 3 : 2;\n}\n\nvar D;\n!function (e) {\n  e[e.NONE = 0] = \"NONE\", e[e.EDGE = 1] = \"EDGE\", e[e.VERTEX = 2] = \"VERTEX\";\n}(D || (D = {}));\n\nclass q {\n  constructor(e, t) {\n    this.coords = e, this.coordsIndex = t;\n  }\n\n  get x() {\n    return this.coords[this.coordsIndex];\n  }\n\n  get y() {\n    return this.coords[this.coordsIndex + 1];\n  }\n\n  get z() {\n    return this.coords[this.coordsIndex + 2];\n  }\n\n}\n\nexport { A as QueryEngineResult, D as SnappingTypes };","map":{"version":3,"names":["isNone","e","isSome","t","polygonCentroid","i","extentCentroid","s","getPolygonExtent","a","getGeometryExtent","r","toQuantizationTransform","n","isValid","o","equals","l","u","project","c","makeEdgeCandidate","d","makeVertexCandidate","m","cleanFromGeometryEngine","h","getGeometry","f","transformCentroid","g","isStringField","p","isNullCountSupported","y","calculateStringStatistics","x","calculateStatistics","I","processSummaryStatisticsResult","T","calculateUniqueValuesCount","V","createUVResult","F","calculateClassBreaks","S","resolveCBResult","_","calculateHistogram","z","getAttributeComparator","v","calculatePercentile","b","loadArcade","R","A","constructor","items","query","geometryType","hasM","hasZ","fieldsIndex","objectIdField","spatialReference","featureAdapter","size","length","createQueryResponseForCount","outStatistics","countDistinctValues","groupByFieldsForStatistics","having","Map","Set","statisticType","onStatisticField","has","_getAttributeValues","push","set","_calculateUniqueValues","returnDistinctValues","get","data","join","validateItems","add","createQueryResponse","some","_createExceedsLimitQueryResponse","_createStatisticsQueryResponse","_createFeatureQueryResponse","returnQueryGeometry","geometry","outSR","queryGeometry","createSnappingResponse","N","point","mode","distance","candidates","_getPointCreator","q","coords","lengths","types","D","EDGE","coordsIndex","E","getObjectId","Math","sqrt","VERTEX","sort","createSummaryStatisticsResponse","field","valueExpression","normalizationField","normalizationType","normalizationTotal","minValue","maxValue","scale","isDateField","_getDataValues","value","fieldType","type","values","supportsNullCount","percentileParams","useSampleStdDev","createUniqueValuesResponse","domains","returnAllCodedValues","field2","field3","fieldDelimiter","createClassBreaksResponse","classificationMethod","standardDeviationInterval","numClasses","createHistogramResponse","numBins","_sortFeatures","reverse","split","toLowerCase","outFields","quantizationParameters","resultRecordCount","resultOffset","returnZ","returnM","includes","fields","map","exceededTransferLimit","features","_createFeatures","objectIdFieldName","transform","orderByFields","returnGeometry","returnCentroid","maxAllowableOffset","getFieldValue","attributes","getAttributes","centroid","getCentroid","slice","min","Number","POSITIVE_INFINITY","maxPointCount","maxRecordCount","maxVertexCount","reduce","name","alias","sqlType","domain","defaultValue","exceedslimit","outStatisticFieldName","count","itemPositions","aggregateGeometries","_getAggregateGeometry","_getPercentileValue","_getStatisticValue","forEach","Array","from","convexHull","union","returnDistinct","statisticParameters","orderBy","isDiscrete","_getAttributeDataValues","getDataValue","_getAttributeExpressionValues","arcadeUtils","createFunction","getViewInfo","getExpressionValues","viewingMode","max","NONE","QueryEngineResult","SnappingTypes"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/layers/graphics/data/QueryEngineResult.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isNone as e,isSome as t}from\"../../../core/maybe.js\";import{polygonCentroid as i,extentCentroid as s}from\"../../../geometry/support/centroid.js\";import{getPolygonExtent as a,getGeometryExtent as r}from\"../../../geometry/support/extentUtils.js\";import{toQuantizationTransform as n}from\"../../../geometry/support/quantizationUtils.js\";import{isValid as o,equals as l}from\"../../../geometry/support/spatialReferenceUtils.js\";import u from\"./AttributesBuilder.js\";import{project as c}from\"./projectionSupport.js\";import{makeEdgeCandidate as d,makeVertexCandidate as m}from\"./SnappingCandidate.js\";import{cleanFromGeometryEngine as h,getGeometry as f,transformCentroid as g}from\"./utils.js\";import{isStringField as p}from\"../../support/fieldUtils.js\";import{isNullCountSupported as y,calculateStringStatistics as x,calculateStatistics as I,processSummaryStatisticsResult as T,calculateUniqueValuesCount as V,createUVResult as F,calculateClassBreaks as S,resolveCBResult as _,calculateHistogram as z,getAttributeComparator as v,calculatePercentile as b}from\"../../../statistics/utils.js\";import{loadArcade as R}from\"../../../support/arcadeOnDemand.js\";class A{constructor(e,t,i){this.items=e,this.query=t,this.geometryType=i.geometryType,this.hasM=i.hasM,this.hasZ=i.hasZ,this.fieldsIndex=i.fieldsIndex,this.objectIdField=i.objectIdField,this.spatialReference=i.spatialReference,this.featureAdapter=i.featureAdapter}get size(){return this.items.length}createQueryResponseForCount(){const e=new u(this.query,this.featureAdapter,this.fieldsIndex);if(!this.query.outStatistics)return e.countDistinctValues(this.items);const{groupByFieldsForStatistics:t,having:i,outStatistics:s}=this.query,a=t?.length;if(!!!a)return 1;const r=new Map,n=new Map,o=new Set;for(const l of s){const{statisticType:s}=l,a=\"exceedslimit\"!==s?l.onStatisticField:void 0;if(!n.has(a)){const i=[];for(const s of t){const t=this._getAttributeValues(e,s,r);i.push(t)}n.set(a,this._calculateUniqueValues(i,e.returnDistinctValues))}const u=n.get(a);for(const t in u){const{data:s,items:a}=u[t],r=s.join(\",\");i&&!e.validateItems(a,i)||o.add(r)}}return o.size}async createQueryResponse(){let e;if(this.query.outStatistics){e=this.query.outStatistics.some((e=>\"exceedslimit\"===e.statisticType))?this._createExceedsLimitQueryResponse(this.query):await this._createStatisticsQueryResponse(this.query)}else e=this._createFeatureQueryResponse(this.query);if(this.query.returnQueryGeometry){const t=this.query.geometry;o(this.query.outSR)&&!l(t.spatialReference,this.query.outSR)?e.queryGeometry=h({spatialReference:this.query.outSR,...c(t,t.spatialReference,this.query.outSR)}):e.queryGeometry=h({spatialReference:this.query.outSR,...t})}return e}createSnappingResponse(t,i){const s=this.featureAdapter,a=N(this.hasZ,this.hasM),{point:r,mode:n}=t,o=\"number\"==typeof t.distance?t.distance:t.distance.x,l=\"number\"==typeof t.distance?t.distance:t.distance.y,u={candidates:[]},c=\"esriGeometryPolygon\"===this.geometryType,h=this._getPointCreator(n,this.spatialReference,i),f=new q(null,0),g=new q(null,0),p={x:0,y:0,z:0};for(const y of this.items){const i=s.getGeometry(y);if(e(i))continue;const{coords:n,lengths:x}=i;if(f.coords=n,g.coords=n,t.types&D.EDGE){let e=0;for(let t=0;t<x.length;t++){const i=x[t];for(let t=0;t<i;t++,e+=a){const n=f;if(n.coordsIndex=e,t!==i-1){const t=g;t.coordsIndex=e+a;const i=p;E(p,r,n,t);const c=(r.x-i.x)/o,m=(r.y-i.y)/l,f=c*c+m*m;f<=1&&u.candidates.push(d(s.getObjectId(y),h(i),Math.sqrt(f),h(n),h(t)))}}}}if(t.types&D.VERTEX){const e=c?n.length-a:n.length;for(let t=0;t<e;t+=a){const e=f;e.coordsIndex=t;const i=(r.x-e.x)/o,a=(r.y-e.y)/l,n=i*i+a*a;n<=1&&u.candidates.push(m(s.getObjectId(y),h(e),Math.sqrt(n)))}}}return u.candidates.sort(((e,t)=>e.distance-t.distance)),u}_getPointCreator(e,i,s){const a=t(s)&&!l(i,s)?e=>c(e,i,s):e=>e,{hasZ:r}=this,n=0;return\"3d\"===e?r?({x:e,y:t,z:i})=>a({x:e,y:t,z:i}):({x:e,y:t})=>a({x:e,y:t,z:n}):({x:e,y:t})=>a({x:e,y:t})}async createSummaryStatisticsResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,minValue:n,maxValue:o,scale:l}=e,u=this.fieldsIndex.isDateField(t),c=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:l}),d=y({normalizationType:a,normalizationField:s,minValue:n,maxValue:o}),m=this.fieldsIndex.get(t),h={value:.5,fieldType:m?.type},f=p(m)?x({values:c,supportsNullCount:d,percentileParams:h}):I({values:c,minValue:n,maxValue:o,useSampleStdDev:!a,supportsNullCount:d,percentileParams:h});return T(f,u)}async createUniqueValuesResponse(e){const{field:t,valueExpression:i,domains:s,returnAllCodedValues:a,scale:r}=e,n=await this._getDataValues({field:t,field2:e.field2,field3:e.field3,fieldDelimiter:e.fieldDelimiter,valueExpression:i,scale:r}),o=V(n);return F(o,s,a,e.fieldDelimiter)}async createClassBreaksResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numClasses:c,scale:d}=e,m=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:d}),h=S(m,{field:t,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numClasses:c});return _(h,n)}async createHistogramResponse(e){const{field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numBins:c,scale:d}=e,m=await this._getDataValues({field:t,valueExpression:i,normalizationField:s,normalizationType:a,normalizationTotal:r,scale:d});return z(m,{field:t,normalizationField:s,normalizationType:a,normalizationTotal:r,classificationMethod:n,standardDeviationInterval:o,minValue:l,maxValue:u,numBins:c})}_sortFeatures(e,t,i){if(e.length>1&&t&&t.length)for(const s of t.reverse()){const t=s.split(\" \"),a=t[0],r=this.fieldsIndex.get(a),n=!!t[1]&&\"desc\"===t[1].toLowerCase(),o=v(r?.type,n);e.sort(((e,t)=>{const s=i(e,a,r),n=i(t,a,r);return o(s,n)}))}}_createFeatureQueryResponse(e){const t=this.items,{geometryType:i,hasM:s,hasZ:a,objectIdField:r,spatialReference:o}=this,{outFields:l,outSR:u,quantizationParameters:c,resultRecordCount:d,resultOffset:m,returnZ:f,returnM:g}=e,p=null!=d&&t.length>(m||0)+d,y=l&&(l.includes(\"*\")?[...this.fieldsIndex.fields]:l.map((e=>this.fieldsIndex.get(e))));return{exceededTransferLimit:p,features:this._createFeatures(e,t),fields:y,geometryType:i,hasM:s&&g,hasZ:a&&f,objectIdFieldName:r,spatialReference:h(u||o),transform:c&&n(c)||null}}_createFeatures(e,t){const i=new u(e,this.featureAdapter,this.fieldsIndex),{hasM:s,hasZ:a}=this,{orderByFields:r,quantizationParameters:o,returnGeometry:l,returnCentroid:c,maxAllowableOffset:d,resultOffset:m,resultRecordCount:h,returnZ:p=!1,returnM:y=!1}=e,x=a&&p,I=s&&y;let T=[],V=0;const F=[...t];if(this._sortFeatures(F,r,((e,t,s)=>i.getFieldValue(e,t,s))),l||c){const e=n(o)??void 0;if(l&&!c)for(const t of F)T[V++]={attributes:i.getAttributes(t),geometry:f(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),d,e,x,I)};else if(!l&&c)for(const t of F)T[V++]={attributes:i.getAttributes(t),centroid:g(this,this.featureAdapter.getCentroid(t,this),e)};else for(const t of F)T[V++]={attributes:i.getAttributes(t),centroid:g(this,this.featureAdapter.getCentroid(t,this),e),geometry:f(this.geometryType,this.hasZ,this.hasM,this.featureAdapter.getGeometry(t),d,e,x,I)}}else for(const n of F){const e=i.getAttributes(n);e&&(T[V++]={attributes:e})}const S=m||0;if(null!=h){const e=S+h;T=T.slice(S,Math.min(T.length,e))}return T}_createExceedsLimitQueryResponse(e){let i=!1,s=Number.POSITIVE_INFINITY,a=Number.POSITIVE_INFINITY,r=Number.POSITIVE_INFINITY;for(const t of e.outStatistics??[])if(\"exceedslimit\"===t.statisticType){s=null!=t.maxPointCount?t.maxPointCount:Number.POSITIVE_INFINITY,a=null!=t.maxRecordCount?t.maxRecordCount:Number.POSITIVE_INFINITY,r=null!=t.maxVertexCount?t.maxVertexCount:Number.POSITIVE_INFINITY;break}if(\"esriGeometryPoint\"===this.geometryType)i=this.items.length>s;else if(this.items.length>a)i=!0;else{const e=N(this.hasZ,this.hasM),s=this.featureAdapter;i=this.items.reduce(((e,i)=>{const a=s.getGeometry(i);return e+(t(a)&&a.coords.length||0)}),0)/e>r}return{fields:[{name:\"exceedslimit\",type:\"esriFieldTypeInteger\",alias:\"exceedslimit\",sqlType:\"sqlTypeInteger\",domain:null,defaultValue:null}],features:[{attributes:{exceedslimit:Number(i)}}]}}async _createStatisticsQueryResponse(e){const t={attributes:{}},i=[],s=new Map,a=new Map,r=new Map,n=new Map,o=new u(e,this.featureAdapter,this.fieldsIndex),l=e.outStatistics,{groupByFieldsForStatistics:c,having:d,orderByFields:m}=e,h=c&&c.length,f=!!h,g=f?c[0]:null,p=f&&!this.fieldsIndex.get(g);for(const u of l??[]){const{outStatisticFieldName:e,statisticType:l}=u,m=u,y=\"exceedslimit\"!==l?u.onStatisticField:void 0,x=\"percentile_disc\"===l||\"percentile_cont\"===l,I=\"EnvelopeAggregate\"===l||\"CentroidAggregate\"===l||\"ConvexHullAggregate\"===l,T=f&&1===h&&(y===g||p)&&\"count\"===l;if(f){if(!r.has(y)){const e=[];for(const t of c){const i=this._getAttributeValues(o,t,s);e.push(i)}r.set(y,this._calculateUniqueValues(e,!I&&o.returnDistinctValues))}const t=r.get(y);for(const i in t){const{count:a,data:r,items:l,itemPositions:u}=t[i],h=r.join(\",\");if(!d||o.validateItems(l,d)){const t=n.get(h)||{attributes:{}};if(I){t.aggregateGeometries||(t.aggregateGeometries={});const{aggregateGeometries:e,outStatisticFieldName:i}=await this._getAggregateGeometry(m,l);t.aggregateGeometries[i]=e}else{let i=null;if(T)i=a;else{const e=this._getAttributeValues(o,y,s),t=u.map((t=>e[t]));i=x&&\"statisticParameters\"in m?this._getPercentileValue(m,t):this._getStatisticValue(m,t,null,o.returnDistinctValues)}t.attributes[e]=i}let i=0;c.forEach(((e,s)=>t.attributes[this.fieldsIndex.get(e)?e:\"EXPR_\"+ ++i]=r[s])),n.set(h,t)}}}else if(I){t.aggregateGeometries||(t.aggregateGeometries={});const{aggregateGeometries:e,outStatisticFieldName:i}=await this._getAggregateGeometry(m,this.items);t.aggregateGeometries[i]=e}else{const i=this._getAttributeValues(o,y,s);t.attributes[e]=x&&\"statisticParameters\"in m?this._getPercentileValue(m,i):this._getStatisticValue(m,i,a,o.returnDistinctValues)}i.push({name:e,alias:e,type:\"esriFieldTypeDouble\"})}const y=f?Array.from(n.values()):[t];return this._sortFeatures(y,m,((e,t)=>e.attributes[t])),{fields:i,features:y}}async _getAggregateGeometry(e,t){const n=await import(\"../../../geometry/geometryEngineJSON.js\"),{statisticType:o,outStatisticFieldName:l}=e,{featureAdapter:u,spatialReference:c,geometryType:d,hasZ:m,hasM:h}=this,g=t.map((e=>f(d,m,h,u.getGeometry(e)))),p=n.convexHull(c,g,!0)[0],y={aggregateGeometries:null,outStatisticFieldName:null};if(\"EnvelopeAggregate\"===o){const e=p?a(p):r(n.union(c,g));y.aggregateGeometries={...e,spatialReference:c},y.outStatisticFieldName=l||\"extent\"}else if(\"CentroidAggregate\"===o){const e=p?i(p):s(r(n.union(c,g)));y.aggregateGeometries={x:e[0],y:e[1],spatialReference:c},y.outStatisticFieldName=l||\"centroid\"}else\"ConvexHullAggregate\"===o&&(y.aggregateGeometries=p,y.outStatisticFieldName=l||\"convexHull\");return y}_getStatisticValue(e,t,i,s){const{onStatisticField:a,statisticType:r}=e;let n=null;n=i?.has(a)?i.get(a):p(this.fieldsIndex.get(a))?x({values:t,returnDistinct:s}):I({values:s?[...new Set(t)]:t,minValue:null,maxValue:null,useSampleStdDev:!0}),i&&i.set(a,n);return n[\"var\"===r?\"variance\":r]}_getPercentileValue(e,t){const{onStatisticField:i,statisticParameters:s,statisticType:a}=e,{value:r,orderBy:n}=s,o=this.fieldsIndex.get(i);return b(t,{value:r,orderBy:n,fieldType:o?.type,isDiscrete:\"percentile_disc\"===a})}_getAttributeValues(e,t,i){if(i.has(t))return i.get(t);const s=this.fieldsIndex.get(t),a=this.items.map((i=>e.getFieldValue(i,t,s)));return i.set(t,a),a}_getAttributeDataValues(e,t){return this.items.map((i=>e.getDataValue(i,{field:t.field,field2:t.field2,field3:t.field3,fieldDelimiter:t.fieldDelimiter,normalizationField:t.normalizationField,normalizationType:t.normalizationType,normalizationTotal:t.normalizationTotal})))}async _getAttributeExpressionValues(e,t,i){const{arcadeUtils:s}=await R(),a=s.createFunction(t),r=i&&s.getViewInfo(i);return e.getExpressionValues(this.items,a,r,s)}_calculateUniqueValues(e,t){const i={},s=this.items,a=s.length;for(let r=0;r<a;r++){const a=s[r],n=[];for(const t of e)n.push(t[r]);const o=n.join(\",\");null==i[o]?i[o]={count:1,data:n,items:[a],itemPositions:[r]}:(t||i[o].count++,i[o].items.push(a),i[o].itemPositions.push(r))}return i}async _getDataValues(e){const t=new u(this.query,this.featureAdapter,this.fieldsIndex),{valueExpression:i,field:s,normalizationField:a,normalizationType:r,normalizationTotal:n,scale:o}=e,l=i?{viewingMode:\"map\",scale:o,spatialReference:this.query.outSR||this.spatialReference}:null;return i?this._getAttributeExpressionValues(t,i,l):this._getAttributeDataValues(t,{field:s,field2:e.field2,field3:e.field3,fieldDelimiter:e.fieldDelimiter,normalizationField:a,normalizationType:r,normalizationTotal:n})}}function E(e,t,i,s){const a=s.x-i.x,r=s.y-i.y,n=a*a+r*r,o=(t.x-i.x)*a+(t.y-i.y)*r,l=Math.min(1,Math.max(0,o/n));e.x=i.x+a*l,e.y=i.y+r*l}function N(e,t){return e?t?4:3:t?3:2}var D;!function(e){e[e.NONE=0]=\"NONE\",e[e.EDGE=1]=\"EDGE\",e[e.VERTEX=2]=\"VERTEX\"}(D||(D={}));class q{constructor(e,t){this.coords=e,this.coordsIndex=t}get x(){return this.coords[this.coordsIndex]}get y(){return this.coords[this.coordsIndex+1]}get z(){return this.coords[this.coordsIndex+2]}}export{A as QueryEngineResult,D as SnappingTypes};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}