{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { isNone as t } from \"../../../core/maybe.js\";\nimport s from \"../../../core/RandomLCG.js\";\nimport { Placement as i } from \"../CIMPlacements.js\";\nimport { PlacementGridType as e } from \"../enums.js\";\nconst n = 512,\n      h = 10,\n      _ = 12,\n      r = 25,\n      o = 24;\n\nfunction a(t) {\n  return void 0 !== t.rings;\n}\n\nclass l {\n  static local() {\n    return null === l.instance && (l.instance = new l()), l.instance;\n  }\n\n  execute(t, s, i, e, n) {\n    return new f(t, s, i, e, n);\n  }\n\n}\n\nl.instance = null;\n\nclass f {\n  constructor(t, h, _, r, o) {\n    if (this._xMin = 0, this._xMax = 0, this._yMin = 0, this._yMax = 0, this._currentX = 0, this._currentY = 0, this._accelerationMap = null, this._testInsidePolygon = !1, this._verticalSubdivision = !0, this._stepX = Math.abs(h.stepX ?? 16) * _, this._stepY = Math.abs(h.stepY ?? 16) * _, 0 !== this._stepX && 0 !== this._stepY && t && a(t) && t.rings) {\n      if (this._gridType = h.gridType ?? e.Fixed, this._gridType === e.Random) {\n        const t = h.seed ?? 13,\n              i = 1;\n        this._randomLCG = new s(t * i), this._randomness = (h.randomness ?? 100) / 100, this._gridAngle = 0, this._shiftOddRows = !1, this._cosAngle = 1, this._sinAngle = 0, this._offsetX = 0, this._offsetY = 0, this._buildRandomValues();\n      } else {\n        if (this._randomness = 0, this._gridAngle = h.gridAngle ?? 0, this._shiftOddRows = h.shiftOddRows ?? !1, this._offsetX = (h.offsetX ?? 0) * _, this._offsetY = (h.offsetY ?? 0) * _, this._cosAngle = Math.cos(this._gridAngle / 180 * Math.PI), this._sinAngle = -Math.sin(this._gridAngle / 180 * Math.PI), this._stepX) if (this._offsetX < 0) for (; this._offsetX < -.5 * this._stepX;) this._offsetX += this._stepX;else for (; this._offsetX >= .5 * this._stepX;) this._offsetX -= this._stepX;\n        if (this._stepY) if (this._offsetY < 0) for (; this._offsetY < -.5 * this._stepY;) this._offsetY += this._stepY;else for (; this._offsetY >= .5 * this._stepY;) this._offsetY -= this._stepY;\n      }\n\n      if (this._graphicOriginX = 0, this._graphicOriginY = 0, null != r) {\n        const [t, s, i] = r.split(\"/\"),\n              e = parseFloat(s),\n              h = parseFloat(i);\n        this._graphicOriginX = -h * n, this._graphicOriginY = e * n, this._testInsidePolygon = !0;\n      }\n\n      this._internalPlacement = new i(), this._calculateMinMax(t), this._geometry = t;\n    }\n  }\n\n  next() {\n    return this._geometry ? this._nextInside() : null;\n  }\n\n  _buildRandomValues() {\n    if (!f._randValues) {\n      f._randValues = [];\n\n      for (let t = 0; t < o; t++) for (let s = 0; s < o; s++) f._randValues.push(this._randomLCG.getFloat()), f._randValues.push(this._randomLCG.getFloat());\n    }\n  }\n\n  _calculateMinMax(t) {\n    let s, i, e, h, o, a, l, f, c, g, u, M, p, d;\n    this._xMin = 0, this._xMax = 0, this._yMin = 0, this._yMax = 0, l = f = p = u = Number.MAX_VALUE, c = g = d = M = -Number.MAX_VALUE;\n    const m = 1 !== this._cosAngle;\n    let X = 0;\n\n    for (const n of t.rings) {\n      const t = n ? n.length : 0;\n\n      for (let _ = 0; _ < t; _++) a = n[_][0], o = n[_][1], s = a - this._graphicOriginX - this._offsetX, i = o - this._graphicOriginY - this._offsetY, m ? (e = this._cosAngle * s - this._sinAngle * i, h = this._sinAngle * s + this._cosAngle * i) : (e = s, h = i), l = Math.min(l, e), c = Math.max(c, e), f = Math.min(f, h), g = Math.max(g, h), u = Math.min(u, o), M = Math.max(M, o), p = Math.min(p, a), d = Math.max(d, a), X++;\n    }\n\n    u = u !== Number.MAX_VALUE ? u : -n - this._stepY, M = M !== -Number.MAX_VALUE ? M : this._stepY, p = p !== Number.MAX_VALUE ? p : -this._stepX, d = d !== -Number.MAX_VALUE ? d : n + this._stepX;\n    const A = M - u,\n          Y = d - p;\n\n    if (this._verticalSubdivision = A >= Y, this._polygonMin = this._verticalSubdivision ? u : p, this._testInsidePolygon) {\n      let t = 0 - this._graphicOriginX - this._offsetX - this._stepX,\n          s = n - this._graphicOriginX - this._offsetX + this._stepX,\n          i = -n - this._graphicOriginY - this._offsetY - this._stepY,\n          e = 0 - this._graphicOriginY - this._offsetY + this._stepY;\n\n      if (m) {\n        const n = [[t, i], [t, e], [s, i], [s, e]];\n        t = i = Number.MAX_VALUE, s = e = -Number.MAX_VALUE;\n\n        for (const h of n) {\n          const n = this._cosAngle * h[0] - this._sinAngle * h[1],\n                _ = this._sinAngle * h[0] + this._cosAngle * h[1];\n\n          t = Math.min(t, n), s = Math.max(s, n), i = Math.min(i, _), e = Math.max(e, _);\n        }\n      }\n\n      l = l !== Number.MAX_VALUE ? Math.max(l, t) : t, f = f !== Number.MAX_VALUE ? Math.max(f, i) : i, c = c !== -Number.MAX_VALUE ? Math.min(c, s) : s, g = g !== -Number.MAX_VALUE ? Math.min(g, e) : e;\n    }\n\n    this._xMin = Math.round(l / this._stepX), this._xMax = Math.round(c / this._stepX), this._yMin = Math.round(f / this._stepY), this._yMax = Math.round(g / this._stepY), this._currentX = this._xMax + 1, this._currentY = this._yMin - 1, this._testInsidePolygon && X > _ && (A > r || Y > r) && this._buildAccelerationMap(t, p, d, u, M);\n  }\n\n  _buildAccelerationMap(t, s, i, e, _) {\n    const {\n      rings: r\n    } = t,\n          o = new Map(),\n          a = this._verticalSubdivision,\n          l = a ? _ - e : i - s;\n    let f = Math.ceil(l / h);\n    if (f <= 1) return;\n    const c = Math.floor(l / f);\n    let u, M, p, d, m, X, A, Y, x, y;\n    f++, this._delta = c, a ? (Y = -n - this._stepY, x = this._stepY, y = e) : (Y = -this._stepX, x = n + this._stepX, y = s);\n\n    for (let n = 0; n < r.length; n++) if (u = r[n], !(u.length < 2)) for (let t = 1; t < u.length; t++) {\n      if (M = u[t - 1], p = u[t], a) {\n        if (M[1] === p[1] || M[1] < Y && p[1] < Y || M[1] > x && p[1] > x) continue;\n        d = Math.min(M[1], p[1]), m = Math.max(M[1], p[1]);\n      } else {\n        if (M[0] === p[0] || M[0] < Y && p[0] < Y || M[0] > x && p[0] > x) continue;\n        d = Math.min(M[0], p[0]), m = Math.max(M[0], p[0]);\n      }\n\n      for (; d < m;) X = Math.floor((d - y) / c), g(X, n, t, o), d += c;\n\n      A = Math.floor((m - y) / c), A > X && g(A, n, t, o);\n    }\n\n    this._accelerationMap = o;\n  }\n\n  _nextInside() {\n    for (;;) {\n      if (this._currentX > this._xMax) {\n        if (this._currentY++, this._currentY > this._yMax) return null;\n        this._currentX = this._xMin, this._shiftOddRows && this._currentY % 2 && this._currentX--;\n      }\n\n      let t = this._currentX * this._stepX + this._offsetX;\n      this._shiftOddRows && this._currentY % 2 && (t += .5 * this._stepX);\n      const s = this._currentY * this._stepY + this._offsetY;\n      let i, n;\n\n      if (this._currentX++, this._gridType === e.Random) {\n        const e = (this._currentX % o + o) % o,\n              h = (this._currentY % o + o) % o;\n        i = this._graphicOriginX + t + this._stepX * this._randomness * (.5 - f._randValues[h * o + e]) * 2 / 3, n = this._graphicOriginY + s + this._stepY * this._randomness * (.5 - f._randValues[h * o + e + 1]) * 2 / 3;\n      } else i = this._graphicOriginX + this._cosAngle * t + this._sinAngle * s, n = this._graphicOriginY - this._sinAngle * t + this._cosAngle * s;\n\n      if (!this._testInsidePolygon || this._isInsidePolygon(i, n, this._geometry)) return this._internalPlacement.setTranslate(i, n), this._internalPlacement;\n    }\n  }\n\n  _isInsidePolygon(s, i, e) {\n    const {\n      rings: n\n    } = e;\n    if (t(this._accelerationMap)) return c(s, i, e);\n\n    const h = this._verticalSubdivision,\n          _ = h ? i : s,\n          r = Math.floor((_ - this._polygonMin) / this._delta),\n          o = this._accelerationMap.get(r);\n\n    if (!o) return !1;\n    let a,\n        l,\n        f,\n        g,\n        u,\n        M = 0;\n\n    for (const t of o) {\n      u = t[0];\n      const e = n[u];\n\n      if (g = t[1], a = e[g - 1], l = e[g], h) {\n        if (a[1] > i == l[1] > i) continue;\n        f = (l[0] - a[0]) * (i - a[1]) - (l[1] - a[1]) * (s - a[0]);\n      } else {\n        if (a[0] > s == l[0] > s) continue;\n        f = (l[1] - a[1]) * (s - a[0]) - (l[0] - a[0]) * (i - a[1]);\n      }\n\n      f > 0 ? M++ : M--;\n    }\n\n    return 0 !== M;\n  }\n\n}\n\nfunction c(t, s, i) {\n  const {\n    rings: e\n  } = i;\n\n  let n,\n      h,\n      _,\n      r = 0;\n\n  for (const o of e) {\n    n = o.length;\n\n    for (let i = 1; i < n; ++i) {\n      if (h = o[i - 1], _ = o[i], h[1] > s == _[1] > s) continue;\n      (_[0] - h[0]) * (s - h[1]) - (_[1] - h[1]) * (t - h[0]) > 0 ? r++ : r--;\n    }\n  }\n\n  return 0 !== r;\n}\n\nfunction g(t, s, i, e) {\n  let n = e.get(t);\n  n || (n = [], e.set(t, n)), n.push([s, i]);\n}\n\nexport { l as PlacementInsidePolygon };","map":{"version":3,"names":["isNone","t","s","Placement","i","PlacementGridType","e","n","h","_","r","o","a","rings","l","local","instance","execute","f","constructor","_xMin","_xMax","_yMin","_yMax","_currentX","_currentY","_accelerationMap","_testInsidePolygon","_verticalSubdivision","_stepX","Math","abs","stepX","_stepY","stepY","_gridType","gridType","Fixed","Random","seed","_randomLCG","_randomness","randomness","_gridAngle","_shiftOddRows","_cosAngle","_sinAngle","_offsetX","_offsetY","_buildRandomValues","gridAngle","shiftOddRows","offsetX","offsetY","cos","PI","sin","_graphicOriginX","_graphicOriginY","split","parseFloat","_internalPlacement","_calculateMinMax","_geometry","next","_nextInside","_randValues","push","getFloat","c","g","u","M","p","d","Number","MAX_VALUE","m","X","length","min","max","A","Y","_polygonMin","round","_buildAccelerationMap","Map","ceil","floor","x","y","_delta","_isInsidePolygon","setTranslate","get","set","PlacementInsidePolygon"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/symbols/cim/placements/PlacementInsidePolygon.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isNone as t}from\"../../../core/maybe.js\";import s from\"../../../core/RandomLCG.js\";import{Placement as i}from\"../CIMPlacements.js\";import{PlacementGridType as e}from\"../enums.js\";const n=512,h=10,_=12,r=25,o=24;function a(t){return void 0!==t.rings}class l{static local(){return null===l.instance&&(l.instance=new l),l.instance}execute(t,s,i,e,n){return new f(t,s,i,e,n)}}l.instance=null;class f{constructor(t,h,_,r,o){if(this._xMin=0,this._xMax=0,this._yMin=0,this._yMax=0,this._currentX=0,this._currentY=0,this._accelerationMap=null,this._testInsidePolygon=!1,this._verticalSubdivision=!0,this._stepX=Math.abs(h.stepX??16)*_,this._stepY=Math.abs(h.stepY??16)*_,0!==this._stepX&&0!==this._stepY&&t&&a(t)&&t.rings){if(this._gridType=h.gridType??e.Fixed,this._gridType===e.Random){const t=h.seed??13,i=1;this._randomLCG=new s(t*i),this._randomness=(h.randomness??100)/100,this._gridAngle=0,this._shiftOddRows=!1,this._cosAngle=1,this._sinAngle=0,this._offsetX=0,this._offsetY=0,this._buildRandomValues()}else{if(this._randomness=0,this._gridAngle=h.gridAngle??0,this._shiftOddRows=h.shiftOddRows??!1,this._offsetX=(h.offsetX??0)*_,this._offsetY=(h.offsetY??0)*_,this._cosAngle=Math.cos(this._gridAngle/180*Math.PI),this._sinAngle=-Math.sin(this._gridAngle/180*Math.PI),this._stepX)if(this._offsetX<0)for(;this._offsetX<-.5*this._stepX;)this._offsetX+=this._stepX;else for(;this._offsetX>=.5*this._stepX;)this._offsetX-=this._stepX;if(this._stepY)if(this._offsetY<0)for(;this._offsetY<-.5*this._stepY;)this._offsetY+=this._stepY;else for(;this._offsetY>=.5*this._stepY;)this._offsetY-=this._stepY}if(this._graphicOriginX=0,this._graphicOriginY=0,null!=r){const[t,s,i]=r.split(\"/\"),e=parseFloat(s),h=parseFloat(i);this._graphicOriginX=-h*n,this._graphicOriginY=e*n,this._testInsidePolygon=!0}this._internalPlacement=new i,this._calculateMinMax(t),this._geometry=t}}next(){return this._geometry?this._nextInside():null}_buildRandomValues(){if(!f._randValues){f._randValues=[];for(let t=0;t<o;t++)for(let s=0;s<o;s++)f._randValues.push(this._randomLCG.getFloat()),f._randValues.push(this._randomLCG.getFloat())}}_calculateMinMax(t){let s,i,e,h,o,a,l,f,c,g,u,M,p,d;this._xMin=0,this._xMax=0,this._yMin=0,this._yMax=0,l=f=p=u=Number.MAX_VALUE,c=g=d=M=-Number.MAX_VALUE;const m=1!==this._cosAngle;let X=0;for(const n of t.rings){const t=n?n.length:0;for(let _=0;_<t;_++)a=n[_][0],o=n[_][1],s=a-this._graphicOriginX-this._offsetX,i=o-this._graphicOriginY-this._offsetY,m?(e=this._cosAngle*s-this._sinAngle*i,h=this._sinAngle*s+this._cosAngle*i):(e=s,h=i),l=Math.min(l,e),c=Math.max(c,e),f=Math.min(f,h),g=Math.max(g,h),u=Math.min(u,o),M=Math.max(M,o),p=Math.min(p,a),d=Math.max(d,a),X++}u=u!==Number.MAX_VALUE?u:-n-this._stepY,M=M!==-Number.MAX_VALUE?M:this._stepY,p=p!==Number.MAX_VALUE?p:-this._stepX,d=d!==-Number.MAX_VALUE?d:n+this._stepX;const A=M-u,Y=d-p;if(this._verticalSubdivision=A>=Y,this._polygonMin=this._verticalSubdivision?u:p,this._testInsidePolygon){let t=0-this._graphicOriginX-this._offsetX-this._stepX,s=n-this._graphicOriginX-this._offsetX+this._stepX,i=-n-this._graphicOriginY-this._offsetY-this._stepY,e=0-this._graphicOriginY-this._offsetY+this._stepY;if(m){const n=[[t,i],[t,e],[s,i],[s,e]];t=i=Number.MAX_VALUE,s=e=-Number.MAX_VALUE;for(const h of n){const n=this._cosAngle*h[0]-this._sinAngle*h[1],_=this._sinAngle*h[0]+this._cosAngle*h[1];t=Math.min(t,n),s=Math.max(s,n),i=Math.min(i,_),e=Math.max(e,_)}}l=l!==Number.MAX_VALUE?Math.max(l,t):t,f=f!==Number.MAX_VALUE?Math.max(f,i):i,c=c!==-Number.MAX_VALUE?Math.min(c,s):s,g=g!==-Number.MAX_VALUE?Math.min(g,e):e}this._xMin=Math.round(l/this._stepX),this._xMax=Math.round(c/this._stepX),this._yMin=Math.round(f/this._stepY),this._yMax=Math.round(g/this._stepY),this._currentX=this._xMax+1,this._currentY=this._yMin-1,this._testInsidePolygon&&X>_&&(A>r||Y>r)&&this._buildAccelerationMap(t,p,d,u,M)}_buildAccelerationMap(t,s,i,e,_){const{rings:r}=t,o=new Map,a=this._verticalSubdivision,l=a?_-e:i-s;let f=Math.ceil(l/h);if(f<=1)return;const c=Math.floor(l/f);let u,M,p,d,m,X,A,Y,x,y;f++,this._delta=c,a?(Y=-n-this._stepY,x=this._stepY,y=e):(Y=-this._stepX,x=n+this._stepX,y=s);for(let n=0;n<r.length;n++)if(u=r[n],!(u.length<2))for(let t=1;t<u.length;t++){if(M=u[t-1],p=u[t],a){if(M[1]===p[1]||M[1]<Y&&p[1]<Y||M[1]>x&&p[1]>x)continue;d=Math.min(M[1],p[1]),m=Math.max(M[1],p[1])}else{if(M[0]===p[0]||M[0]<Y&&p[0]<Y||M[0]>x&&p[0]>x)continue;d=Math.min(M[0],p[0]),m=Math.max(M[0],p[0])}for(;d<m;)X=Math.floor((d-y)/c),g(X,n,t,o),d+=c;A=Math.floor((m-y)/c),A>X&&g(A,n,t,o)}this._accelerationMap=o}_nextInside(){for(;;){if(this._currentX>this._xMax){if(this._currentY++,this._currentY>this._yMax)return null;this._currentX=this._xMin,this._shiftOddRows&&this._currentY%2&&this._currentX--}let t=this._currentX*this._stepX+this._offsetX;this._shiftOddRows&&this._currentY%2&&(t+=.5*this._stepX);const s=this._currentY*this._stepY+this._offsetY;let i,n;if(this._currentX++,this._gridType===e.Random){const e=(this._currentX%o+o)%o,h=(this._currentY%o+o)%o;i=this._graphicOriginX+t+this._stepX*this._randomness*(.5-f._randValues[h*o+e])*2/3,n=this._graphicOriginY+s+this._stepY*this._randomness*(.5-f._randValues[h*o+e+1])*2/3}else i=this._graphicOriginX+this._cosAngle*t+this._sinAngle*s,n=this._graphicOriginY-this._sinAngle*t+this._cosAngle*s;if(!this._testInsidePolygon||this._isInsidePolygon(i,n,this._geometry))return this._internalPlacement.setTranslate(i,n),this._internalPlacement}}_isInsidePolygon(s,i,e){const{rings:n}=e;if(t(this._accelerationMap))return c(s,i,e);const h=this._verticalSubdivision,_=h?i:s,r=Math.floor((_-this._polygonMin)/this._delta),o=this._accelerationMap.get(r);if(!o)return!1;let a,l,f,g,u,M=0;for(const t of o){u=t[0];const e=n[u];if(g=t[1],a=e[g-1],l=e[g],h){if(a[1]>i==l[1]>i)continue;f=(l[0]-a[0])*(i-a[1])-(l[1]-a[1])*(s-a[0])}else{if(a[0]>s==l[0]>s)continue;f=(l[1]-a[1])*(s-a[0])-(l[0]-a[0])*(i-a[1])}f>0?M++:M--}return 0!==M}}function c(t,s,i){const{rings:e}=i;let n,h,_,r=0;for(const o of e){n=o.length;for(let i=1;i<n;++i){if(h=o[i-1],_=o[i],h[1]>s==_[1]>s)continue;(_[0]-h[0])*(s-h[1])-(_[1]-h[1])*(t-h[0])>0?r++:r--}}return 0!==r}function g(t,s,i,e){let n=e.get(t);n||(n=[],e.set(t,n)),n.push([s,i])}export{l as PlacementInsidePolygon};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}