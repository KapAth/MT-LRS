{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../request.js\";\nimport i from \"../../../core/Error.js\";\nimport { JSONSupport as o } from \"../../../core/JSONSupport.js\";\nimport r from \"../../../core/Logger.js\";\nimport { isSome as n, isNone as s, unwrap as a, unwrapOrThrow as l } from \"../../../core/maybe.js\";\nimport { EsriPromiseMixin as c } from \"../../../core/Promise.js\";\nimport { onAbort as m } from \"../../../core/promiseUtils.js\";\nimport { property as f } from \"../../../core/accessorSupport/decorators/property.js\";\nimport { ensureClass as h } from \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as u } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport { sanitizeUrl as p } from \"../arcgisLayerUrl.js\";\nimport { url as d } from \"../commonProperties.js\";\nimport x from \"../DimensionalDefinition.js\";\nimport y from \"../LOD.js\";\nimport g from \"../RasterStorageInfo.js\";\nimport I from \"../TileInfo.js\";\nimport { isMultiSliceOrRangeDefinition as R, getSliceIndex as w, createSlices as k, getSliceIds as S } from \"./multidimensionalUtils.js\";\nimport { getRasterId as v, getBlock as T, putBlock as b, deleteBlock as B, decreaseRefCount as P } from \"./RawBlockCache.js\";\nimport { convertNoDataToMask as M } from \"../rasterFormats/pixelRangeUtils.js\";\nimport { decode as W } from \"../rasterFormats/RasterCodec.js\";\nimport { mosaic as _, approximateTransform as C, getLocalArithmeticNorthRotations as j } from \"../rasterFunctions/pixelUtils.js\";\nimport { load as H, getWorldWidth as L, projectPoint as E, snapPyramid as D, snapExtent as z, getWorldWrapCount as A, projectExtent as F, getProjectionOffsetGrid as q, getRasterDatasetAlignmentInfo as O, projectResolution as G } from \"../rasterFunctions/rasterProjectionHelper.js\";\nimport { convertToLocalDirections as J, uvComponentToVector as N } from \"../rasterFunctions/vectorFieldUtils.js\";\nimport V from \"../../../geometry/Extent.js\";\nimport U from \"../../../geometry/Point.js\";\nconst $ = 8,\n      X = 256;\nlet K = class extends c(o) {\n  constructor() {\n    super(...arguments), this.rasterJobHandler = null, this.datasetName = null, this.datasetFormat = null, this.hasUniqueSourceStorageInfo = !0, this.rasterInfo = null, this.ioConfig = {\n      sampling: \"closest\"\n    };\n  }\n\n  init() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const e = H();\n      _this.addResolvingPromise(e), yield _this.when();\n    })();\n  }\n\n  normalizeCtorArgs(e) {\n    return e && e.ioConfig && (e = { ...e,\n      ioConfig: {\n        resolution: null,\n        bandIds: null,\n        sampling: \"closest\",\n        tileInfo: I.create(),\n        ...e.ioConfig\n      }\n    }), e;\n  }\n\n  get _isGlobalWrappableSource() {\n    const {\n      rasterInfo: e\n    } = this,\n          t = L(e.spatialReference);\n    return n(t) && e.extent.width >= t / 2;\n  }\n\n  set url(e) {\n    this._set(\"url\", p(e, r.getLogger(this.declaredClass)));\n  }\n\n  open(e) {\n    return _asyncToGenerator(function* () {\n      throw new i(\"BaseRaster:open-not-implemented\", \"open() is not implemented\");\n    })();\n  }\n\n  fetchTile(e, t, i, o = {}) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const r = o.tileInfo || _this2.rasterInfo.storageInfo.tileInfo,\n            n = _this2.getTileExtentFromTileInfo(e, t, i, r);\n\n      return _this2.fetchPixels(n, r.size[0], r.size[1], o);\n    })();\n  }\n\n  identify(e, t = {}) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      e = h(U, e).clone().normalize();\n      const {\n        multidimensionalDefinition: i,\n        timeExtent: o\n      } = t,\n            {\n        rasterInfo: r\n      } = _this3,\n            {\n        hasMultidimensionalTranspose: l,\n        multidimensionalInfo: c\n      } = r;\n      let {\n        transposedVariableName: m\n      } = t;\n      const f = n(c) && l && (null != o || R(i));\n\n      if (f && !m) {\n        m = n(i) && i.length > 0 ? i[0].variableName ?? void 0 : c.variables[0].name, t = { ...t,\n          transposedVariableName: m\n        };\n      }\n\n      t = _this3._getRequestOptionsWithSliceId(t);\n      const {\n        spatialReference: u,\n        extent: p\n      } = r,\n            {\n        datumTransformation: d\n      } = t;\n      let x = E(e, u, d);\n      if (!p.intersects(x)) return {\n        location: x,\n        value: null\n      };\n\n      if (n(r.transform)) {\n        const e = r.transform.inverseTransform(x);\n        if (!r.nativeExtent.intersects(e)) return {\n          location: e,\n          value: null\n        };\n        x = e;\n      }\n\n      let y = 0;\n      const g = n(m) && n(c) && r.hasMultidimensionalTranspose;\n\n      if (\"Function\" === _this3.datasetFormat) {\n        const e = _this3.primaryRasters.rasters[0];\n        if (g) return e.identify(x, t);\n        const {\n          pixelSize: i\n        } = r,\n              o = 3,\n              a = i.x * o / 2,\n              l = i.y * o / 2,\n              c = new V({\n          xmin: x.x - a,\n          xmax: x.x + a,\n          ymin: x.y - l,\n          ymax: x.y + l,\n          spatialReference: u\n        }),\n              m = {\n          interpolation: \"nearest\"\n        },\n              {\n          pixelBlock: f\n        } = yield e.fetchPixels(c, o, o, m),\n              {\n          pixelBlock: h\n        } = yield _this3.fetchPixels(c, o, o, m);\n        if (s(f)) return {\n          location: x,\n          value: null\n        };\n        const p = Math.floor(o * o * .5),\n              d = !f.mask || f.mask[p] ? f.pixels.map(e => e[p]) : null;\n        let y;\n        return n(h) && (y = !h.mask || h.mask[p] ? h.pixels.map(e => e[p]) : void 0), {\n          location: x,\n          value: d,\n          processedValue: y,\n          pyramidLevel: 0\n        };\n      }\n\n      if (!g) if (t.srcResolution) {\n        y = D(t.srcResolution, r, _this3.ioConfig.sampling).pyramidLevel;\n      } else if (y = yield _this3.computeBestPyramidLevelForLocation(e, t), null == y) return {\n        location: x,\n        value: null\n      };\n\n      const I = _this3.identifyPixelLocation(x, y, null, g);\n\n      if (null === I) return {\n        location: x,\n        value: null\n      };\n      const {\n        row: w,\n        col: k,\n        rowOffset: S,\n        colOffset: B,\n        blockWidth: P\n      } = I,\n            M = m ?? a(t.sliceId),\n            W = v(_this3.url, M),\n            _ = `${y}/${w}/${k}`;\n      let C = T(W, null, _);\n      s(C) && (C = _this3.fetchRawTile(y, w, k, t), b(W, null, _, C));\n      const j = yield C;\n      if (s(j) || !j.pixels?.length) return {\n        location: x,\n        value: null\n      };\n      const H = S * P + B;\n      return _this3._processIdentifyResult(j, {\n        srcLocation: x,\n        position: H,\n        pyramidLevel: y,\n        useTransposedTile: !!g,\n        requestSomeSlices: f,\n        identifyOptions: t\n      });\n    })();\n  }\n\n  fetchPixels(e, t, i, o = {}) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (e = z(e), (o = _this4._getRequestOptionsWithSliceId(o)).requestRawData) return _this4._fetchPixels(e, t, i, o);\n      const r = L(e.spatialReference),\n            n = A(e);\n      if (s(r) || 0 === n || 1 === n && _this4._isGlobalWrappableSource) return _this4._fetchPixels(e, t, i, o);\n      if (n >= 3) return {\n        extent: e,\n        pixelBlock: null\n      };\n      const a = [],\n            {\n        xmin: l,\n        xmax: c\n      } = e,\n            m = Math.round(r / (c - l) * t),\n            f = m - Math.round((r / 2 - l) / (c - l) * t);\n      let h = 0;\n      const u = [];\n\n      for (let s = 0; s <= n; s++) {\n        const p = new V({\n          xmin: 0 === s ? l : -r / 2,\n          xmax: s === n ? c - r * s : r / 2,\n          ymin: e.ymin,\n          ymax: e.ymax,\n          spatialReference: e.spatialReference\n        }),\n              d = 0 === s ? m - f : s === n ? t - h : m;\n        h += d, u.push(d);\n        const x = o.disableWrapAround && s > 0 ? null : _this4._fetchPixels(p, d, i, o);\n        a.push(x);\n      }\n\n      const p = (yield Promise.all(a)).map(e => e?.pixelBlock);\n      let d = null;\n      const x = {\n        width: t,\n        height: i\n      };\n\n      if (_this4.rasterJobHandler) {\n        d = (yield _this4.rasterJobHandler.mosaicAndTransform({\n          srcPixelBlocks: p,\n          srcMosaicSize: x,\n          destDimension: null,\n          coefs: null,\n          sampleSpacing: null,\n          interpolation: \"nearest\",\n          alignmentInfo: null,\n          blockWidths: u\n        }, o)).pixelBlock;\n      } else d = _(p, x, {\n        blockWidths: u\n      });\n\n      return {\n        extent: e,\n        srcExtent: F(e, _this4.rasterInfo.spatialReference, o.datumTransformation),\n        pixelBlock: d\n      };\n    })();\n  }\n\n  fetchRawPixels(e, t, i, o = {}) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      t = {\n        x: Math.floor(t.x),\n        y: Math.floor(t.y)\n      };\n      const r = yield _this5._fetchRawTiles(e, t, i, o),\n            {\n        nativeExtent: s,\n        nativePixelSize: a,\n        storageInfo: l\n      } = _this5.rasterInfo,\n            c = 2 ** e,\n            m = a.x * c,\n            f = a.y * c,\n            h = new V({\n        xmin: s.xmin + m * t.x,\n        xmax: s.xmin + m * (t.x + i.width - 1),\n        ymin: s.ymax - f * (t.y + i.height - 1),\n        ymax: s.ymax - f * t.y,\n        spatialReference: s.spatialReference\n      });\n      if (!r) return {\n        extent: h,\n        srcExtent: h,\n        pixelBlock: null\n      };\n      const {\n        pixelBlocks: u,\n        mosaicSize: p\n      } = r;\n      if (1 === u.length && n(u[0]) && u[0].width === i.width && u[0].height === i.height) return {\n        extent: h,\n        srcExtent: h,\n        pixelBlock: r.pixelBlocks[0]\n      };\n      const d = e > 0 ? l.pyramidBlockWidth : l.blockWidth,\n            x = e > 0 ? l.pyramidBlockHeight : l.blockHeight,\n            y = {\n        x: t.x % d,\n        y: t.y % x\n      };\n      let g;\n\n      if (_this5.rasterJobHandler) {\n        g = (yield _this5.rasterJobHandler.mosaicAndTransform({\n          srcPixelBlocks: u,\n          srcMosaicSize: p,\n          destDimension: i,\n          clipOffset: y,\n          clipSize: i,\n          coefs: null,\n          sampleSpacing: null,\n          interpolation: o.interpolation,\n          alignmentInfo: null,\n          blockWidths: null\n        }, o)).pixelBlock;\n      } else g = _(u, p, {\n        clipOffset: y,\n        clipSize: i\n      });\n\n      return {\n        extent: h,\n        srcExtent: h,\n        pixelBlock: g\n      };\n    })();\n  }\n\n  fetchRawTile(e, t, o, r) {\n    throw new i(\"BaseRaster:read-not-implemented\", \"fetchRawTile() is not implemented\");\n  }\n\n  computeExtent(e) {\n    return F(this.rasterInfo.extent, e);\n  }\n\n  decodePixelBlock(e, t) {\n    return !this.rasterJobHandler || t.useCanvas ? W(e, t) : this.rasterJobHandler.decode({\n      data: e,\n      options: t\n    });\n  }\n\n  request(e, i, o = 0) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        customFetchParameters: r\n      } = _this6.ioConfig,\n            {\n        range: n,\n        query: s,\n        headers: a\n      } = i;\n      o = o ?? i.retryCount ?? _this6.ioConfig.retryCount;\n      const l = n ? {\n        Range: `bytes=${n.from}-${n.to}`\n      } : null;\n\n      try {\n        return yield t(e, { ...i,\n          query: { ...s,\n            ...r\n          },\n          headers: { ...a,\n            ...l\n          }\n        });\n      } catch (c) {\n        if (o > 0) return o--, _this6.request(e, i, o);\n        throw c;\n      }\n    })();\n  }\n\n  getSliceIndex(e) {\n    const {\n      multidimensionalInfo: t\n    } = this.rasterInfo;\n    return s(t) || s(e) || 0 === e.length ? null : w(e, t);\n  }\n\n  getTileExtentFromTileInfo(e, t, i, o) {\n    const r = l(o.lodAt(e));\n    return this.getTileExtent({\n      x: r.resolution,\n      y: r.resolution\n    }, t, i, o.origin, o.spatialReference, o.size);\n  }\n\n  updateTileInfo() {\n    const {\n      storageInfo: e,\n      spatialReference: t,\n      extent: i,\n      pixelSize: o\n    } = this.rasterInfo;\n\n    if (!e.tileInfo) {\n      const r = [],\n            n = e.maximumPyramidLevel || 0;\n      let s = Math.max(o.x, o.y),\n          a = 1 / .0254 * 96 * s;\n\n      for (let e = 0; e <= n; e++) r.push(new y({\n        level: n - e,\n        resolution: s,\n        scale: a\n      })), s *= 2, a *= 2;\n\n      const l = new U({\n        x: i.xmin,\n        y: i.ymax,\n        spatialReference: t\n      });\n      e.tileInfo = new I({\n        origin: l,\n        size: [e.blockWidth, e.blockHeight],\n        spatialReference: t,\n        lods: r\n      }), e.isVirtualTileInfo = !0;\n    }\n  }\n\n  createRemoteDatasetStorageInfo(e, t = 512, i = 512, o) {\n    const {\n      width: r,\n      height: n,\n      nativeExtent: s,\n      pixelSize: a,\n      spatialReference: l\n    } = e,\n          c = new U({\n      x: s.xmin,\n      y: s.ymax,\n      spatialReference: l\n    });\n    null == o && (o = Math.max(0, Math.round(Math.log(Math.max(r, n)) / Math.LN2 - 8)));\n    const m = this.computeBlockBoundary(s, 512, 512, {\n      x: s.xmin,\n      y: s.ymax\n    }, [a], o);\n    e.storageInfo = new g({\n      blockWidth: t,\n      blockHeight: i,\n      pyramidBlockWidth: t,\n      pyramidBlockHeight: i,\n      origin: c,\n      firstPyramidLevel: 1,\n      maximumPyramidLevel: o,\n      blockBoundary: m\n    });\n  }\n\n  computeBestPyramidLevelForLocation(e, t = {}) {\n    return _asyncToGenerator(function* () {\n      return 0;\n    })();\n  }\n\n  computeBlockBoundary(e, t, i, o, r, n = 0, s = 2) {\n    if (1 === r.length && n > 0) {\n      r = [...r];\n      let {\n        x: e,\n        y: t\n      } = r[0];\n\n      for (let i = 0; i < n; i++) e *= s, t *= s, r.push({\n        x: e,\n        y: t\n      });\n    }\n\n    const a = [],\n          {\n      x: l,\n      y: c\n    } = o;\n\n    for (let m = 0; m < r.length; m++) {\n      const {\n        x: o,\n        y: n\n      } = r[m];\n      a.push({\n        minCol: Math.floor((e.xmin - l + .1 * o) / t / o),\n        maxCol: Math.floor((e.xmax - l - .1 * o) / t / o),\n        minRow: Math.floor((c - e.ymax + .1 * n) / i / n),\n        maxRow: Math.floor((c - e.ymin - .1 * n) / i / n)\n      });\n    }\n\n    return a;\n  }\n\n  getPyramidPixelSize(e) {\n    const {\n      nativePixelSize: t\n    } = this.rasterInfo,\n          {\n      pyramidResolutions: i,\n      pyramidScalingFactor: o\n    } = this.rasterInfo.storageInfo;\n    if (0 === e) return t;\n    if (n(i) && i.length) return i[e - 1];\n    const r = o ** e;\n    return {\n      x: t.x * r,\n      y: t.y * r\n    };\n  }\n\n  identifyPixelLocation(e, t, i, o) {\n    const {\n      spatialReference: r,\n      nativeExtent: s,\n      storageInfo: a\n    } = this.rasterInfo,\n          {\n      maximumPyramidLevel: l,\n      origin: c,\n      transposeInfo: m\n    } = a,\n          f = o && n(m) ? m.tileSize[0] : a.blockWidth,\n          h = o && n(m) ? m.tileSize[1] : a.blockHeight,\n          u = E(e, r, i);\n    if (!s.intersects(u)) return null;\n    if (t < 0 || t > l) return null;\n    const p = this.getPyramidPixelSize(t),\n          {\n      x: d,\n      y: x\n    } = p,\n          y = (c.y - u.y) / x / h,\n          g = (u.x - c.x) / d / f,\n          I = Math.min(h - 1, Math.floor((y - Math.floor(y)) * h)),\n          R = Math.min(f - 1, Math.floor((g - Math.floor(g)) * f));\n    return {\n      pyramidLevel: t,\n      row: Math.floor(y),\n      col: Math.floor(g),\n      rowOffset: I,\n      colOffset: R,\n      blockWidth: f,\n      srcLocation: u\n    };\n  }\n\n  getTileExtent(e, t, i, o, r, n) {\n    const [s, a] = n,\n          l = o.x + i * s * e.x,\n          c = l + s * e.x,\n          m = o.y - t * a * e.y,\n          f = m - a * e.y;\n    return new V({\n      xmin: l,\n      xmax: c,\n      ymin: f,\n      ymax: m,\n      spatialReference: r\n    });\n  }\n\n  getBlockWidthHeight(e) {\n    return {\n      blockWidth: e > 0 ? this.rasterInfo.storageInfo.pyramidBlockWidth : this.rasterInfo.storageInfo.blockWidth,\n      blockHeight: e > 0 ? this.rasterInfo.storageInfo.pyramidBlockHeight : this.rasterInfo.storageInfo.blockHeight\n    };\n  }\n\n  isBlockOutside(e, t, i) {\n    const o = this.rasterInfo.storageInfo.blockBoundary[e];\n    return !o || o.maxRow < t || o.maxCol < i || o.minRow > t || o.minCol > i;\n  }\n\n  _fetchPixels(e, t, i, o = {}) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      let r = A(e);\n      if (r >= 2) return {\n        extent: e,\n        pixelBlock: null\n      };\n\n      const s = _this7._getSourceDataInfo(e, t, i, o),\n            {\n        pyramidLevel: l,\n        pyramidResolution: c,\n        srcResolution: m,\n        srcExtent: f,\n        srcWidth: h,\n        srcHeight: u\n      } = s;\n\n      if (0 === h || 0 === u) return {\n        extent: e,\n        srcExtent: f,\n        pixelBlock: null\n      };\n      const p = a(_this7.rasterInfo.transform),\n            d = \"gcs-shift\" === p?.type,\n            x = n(L(e.spatialReference));\n      !d && x || (r = A(s.srcExtent, d));\n      const y = _this7.rasterInfo.storageInfo,\n            g = {\n        x: Math.floor((f.xmin - y.origin.x) / c.x + .1),\n        y: Math.floor((y.origin.y - f.ymax) / c.y + .1)\n      },\n            I = yield _this7._fetchRawTiles(l, g, {\n        width: h,\n        height: u,\n        wrapCount: r\n      }, o);\n      if (!I) return {\n        extent: e,\n        srcExtent: f,\n        pixelBlock: null\n      };\n      const R = l > 0 ? y.pyramidBlockWidth : y.blockWidth,\n            w = l > 0 ? y.pyramidBlockHeight : y.blockHeight,\n            k = R === h && w === u && g.x % R == 0 && g.y % w == 0,\n            S = new U({\n        x: (e.xmax - e.xmin) / t,\n        y: (e.ymax - e.ymin) / i,\n        spatialReference: e.spatialReference\n      }),\n            v = !e.spatialReference.equals(_this7.rasterInfo.spatialReference),\n            {\n        datumTransformation: T\n      } = o;\n      if (!v && k && 1 === I.pixelBlocks.length && R === t && w === i && m.x === S.x && m.y === S.y) return {\n        extent: e,\n        srcExtent: f,\n        pixelBlock: I.pixelBlocks[0]\n      };\n\n      const b = x && n(L(f.spatialReference)),\n            B = o.requestProjectedLocalDirections && _this7.rasterInfo.dataType.startsWith(\"vector\");\n\n      B && !_this7.rasterJobHandler && (yield H());\n      const P = _this7.rasterJobHandler ? yield _this7.rasterJobHandler.getProjectionOffsetGrid({\n        projectedExtent: e,\n        srcBufferExtent: I.extent,\n        pixelSize: S.toJSON(),\n        datumTransformation: T,\n        rasterTransform: p,\n        hasWrapAround: r > 0 || b,\n        isAdaptive: !1 !== _this7.ioConfig.optimizeProjectionAccuracy,\n        includeGCSGrid: B\n      }, o) : q({\n        projectedExtent: e,\n        srcBufferExtent: I.extent,\n        pixelSize: S,\n        datumTransformation: T,\n        rasterTransform: p,\n        hasWrapAround: r > 0 || b,\n        isAdaptive: !1,\n        includeGCSGrid: B\n      });\n      let M;\n      const W = !o.requestRawData,\n            E = {\n        rows: P.spacing[0],\n        cols: P.spacing[1]\n      },\n            D = a(_this7._getRasterTileAlignmentInfo(l, I.extent.xmin)),\n            {\n        pixelBlocks: z,\n        mosaicSize: F,\n        isPartiallyFilled: O\n      } = I;\n      let G = null;\n\n      if (_this7.rasterJobHandler) {\n        const e = yield _this7.rasterJobHandler.mosaicAndTransform({\n          srcPixelBlocks: z,\n          srcMosaicSize: F,\n          destDimension: W ? {\n            width: t,\n            height: i\n          } : null,\n          coefs: W ? P.coefficients : null,\n          sampleSpacing: W ? E : null,\n          projectDirections: B,\n          gcsGrid: B ? P.gcsGrid : null,\n          isUV: \"vector-uv\" === _this7.rasterInfo.dataType,\n          interpolation: o.interpolation,\n          alignmentInfo: D,\n          blockWidths: null\n        }, o);\n        ({\n          pixelBlock: M,\n          localNorthDirections: G\n        } = e);\n      } else {\n        const e = _(z, F, {\n          alignmentInfo: D\n        });\n\n        M = W ? C(e, {\n          width: t,\n          height: i\n        }, P.coefficients, E, o.interpolation) : e, B && P.gcsGrid && (G = j({\n          width: t,\n          height: i\n        }, P.gcsGrid), M = J(M, _this7.rasterInfo.dataType, G));\n      }\n\n      return o.requestRawData || B ? {\n        srcExtent: f,\n        pixelBlock: M,\n        transformGrid: P,\n        localNorthDirections: G,\n        extent: e,\n        isPartiallyFilled: O\n      } : {\n        srcExtent: f,\n        extent: e,\n        pixelBlock: M\n      };\n    })();\n  }\n\n  _fetchRawTiles(e, t, i, o) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        origin: r,\n        blockBoundary: s\n      } = _this8.rasterInfo.storageInfo,\n            {\n        blockWidth: a,\n        blockHeight: l\n      } = _this8.getBlockWidthHeight(e);\n\n      let {\n        x: c,\n        y: m\n      } = t,\n          {\n        width: f,\n        height: h,\n        wrapCount: u\n      } = i;\n\n      const p = _this8._getRasterTileAlignmentInfo(e, 0);\n\n      o.buffer && (c -= o.buffer.cols, m -= o.buffer.rows, f += 2 * o.buffer.cols, h += 2 * o.buffer.rows);\n      let d = 0,\n          x = 0,\n          y = 0;\n\n      if (u && n(p)) {\n        ({\n          worldColumnCountFromOrigin: x,\n          originColumnOffset: y,\n          rightPadding: d\n        } = p);\n        x * p.blockWidth - d >= c + f && (d = 0);\n      }\n\n      const g = Math.floor(c / a),\n            I = Math.floor(m / l),\n            R = Math.floor((c + f + d - 1) / a),\n            w = Math.floor((m + h + d - 1) / l),\n            k = s[e];\n      if (!k) return null;\n      const {\n        minRow: S,\n        minCol: v,\n        maxCol: T,\n        maxRow: b\n      } = k;\n      if (0 === u && (w < S || R < v || I > b || g > T)) return null;\n      const B = new Array();\n      let P = !1;\n      const M = null == _this8.ioConfig.allowPartialFill ? o.allowPartialFill : _this8.ioConfig.allowPartialFill;\n\n      for (let E = I; E <= w; E++) for (let t = g; t <= R; t++) {\n        let i = t;\n\n        if (!o.disableWrapAround && u && n(p) && x <= t && (i = t - x - y), E >= S && i >= v && b >= E && T >= i) {\n          const t = _this8._fetchRawTile(e, E, i, o);\n\n          M ? B.push(new Promise(e => {\n            t.then(t => e(t)).catch(() => {\n              P = !0, e(null);\n            });\n          })) : B.push(t);\n        } else B.push(Promise.resolve(null));\n      }\n\n      if (0 === B.length) return null;\n\n      const W = yield Promise.all(B),\n            _ = {\n        height: (w - I + 1) * l,\n        width: (R - g + 1) * a\n      },\n            {\n        spatialReference: C\n      } = _this8.rasterInfo,\n            j = _this8.getPyramidPixelSize(e),\n            {\n        x: H,\n        y: L\n      } = j;\n\n      return {\n        extent: new V({\n          xmin: r.x + g * a * H,\n          xmax: r.x + (R + 1) * a * H,\n          ymin: r.y - (w + 1) * l * L,\n          ymax: r.y - I * l * L,\n          spatialReference: C\n        }),\n        pixelBlocks: W,\n        mosaicSize: _,\n        isPartiallyFilled: P\n      };\n    })();\n  }\n\n  _fetchRawTile(e, t, i, o) {\n    const r = this.rasterInfo.storageInfo.blockBoundary[e];\n    if (!r) return Promise.resolve(null);\n    const {\n      minRow: n,\n      minCol: a,\n      maxCol: l,\n      maxRow: c\n    } = r;\n    if (t < n || i < a || t > c || i > l) return Promise.resolve(null);\n    const f = v(this.url, o.sliceId),\n          h = `${e}/${t}/${i}`;\n    let u = T(f, o.registryId, h);\n\n    if (s(u)) {\n      const r = new AbortController();\n      u = this.fetchRawTile(e, t, i, { ...o,\n        signal: r.signal\n      }), b(f, o.registryId, h, u, r), u.catch(() => B(f, o.registryId, h));\n    }\n\n    return o.signal && m(o, () => {\n      P(f, o.registryId, h);\n    }), u;\n  }\n\n  _computeMagDirValues(e) {\n    const {\n      bandCount: t,\n      dataType: i\n    } = this.rasterInfo;\n    if (!(2 === t && \"vector-magdir\" === i || \"vector-uv\" === i) || 2 !== e?.length || !e[0]?.length) return null;\n    const o = e[0].length;\n\n    if (\"vector-magdir\" === i) {\n      const t = e[1].map(e => (e + 360) % 360);\n      return [e[0], t];\n    }\n\n    const [r, n] = e,\n          s = [],\n          a = [];\n\n    for (let l = 0; l < o; l++) {\n      const [e, t] = N([r[l], n[l]]);\n      s.push(e), a.push(t);\n    }\n\n    return [s, a];\n  }\n\n  _getRasterTileAlignmentInfo(e, t) {\n    return null == this._rasterTileAlighmentInfo && (this._rasterTileAlighmentInfo = O(this.rasterInfo)), s(this._rasterTileAlighmentInfo.pyramidsInfo) ? null : {\n      startX: t,\n      halfWorldWidth: this._rasterTileAlighmentInfo.halfWorldWidth,\n      hasGCSSShiftTransform: this._rasterTileAlighmentInfo.hasGCSSShiftTransform,\n      ...this._rasterTileAlighmentInfo.pyramidsInfo[e]\n    };\n  }\n\n  _getSourceDataInfo(e, t, i, o = {}) {\n    const r = {\n      datumTransformation: o.datumTransformation,\n      pyramidLevel: 0,\n      pyramidResolution: null,\n      srcExtent: null,\n      srcHeight: 0,\n      srcResolution: null,\n      srcWidth: 0\n    };\n    o.srcResolution && (r.srcResolution = o.srcResolution, this._updateSourceDataInfo(e, r));\n\n    const n = this.rasterInfo.storageInfo.maximumPyramidLevel || 0,\n          {\n      srcWidth: s,\n      srcHeight: a,\n      pyramidLevel: l\n    } = r,\n          c = s / t,\n          m = a / i,\n          f = l < n && c * m >= 16,\n          h = l === n && this._requireTooManySrcTiles(s, a, t, i);\n\n    if (f || h || 0 === s || 0 === a) {\n      const s = new U({\n        x: (e.xmax - e.xmin) / t,\n        y: (e.ymax - e.ymin) / i,\n        spatialReference: e.spatialReference\n      });\n      let a = G(s, this.rasterInfo.spatialReference, e, r.datumTransformation);\n      const h = !a || o.srcResolution && a.x + a.y < o.srcResolution.x + o.srcResolution.y;\n\n      if (f && o.srcResolution && h) {\n        const e = Math.round(Math.log(Math.max(c, m)) / Math.LN2) - 1;\n\n        if (n - l + 3 >= e) {\n          const t = 2 ** e;\n          a = {\n            x: o.srcResolution.x * t,\n            y: o.srcResolution.y * t\n          };\n        }\n      }\n\n      a && (r.srcResolution = a, this._updateSourceDataInfo(e, r));\n    }\n\n    return this._requireTooManySrcTiles(r.srcWidth, r.srcHeight, t, i) && (r.srcWidth = 0, r.srcHeight = 0), r;\n  }\n\n  _requireTooManySrcTiles(e, t, i, o) {\n    const {\n      tileInfo: r\n    } = this.rasterInfo.storageInfo;\n    return Math.ceil(e / r.size[0]) * Math.ceil(t / r.size[1]) >= X || e / i > $ || t / o > $;\n  }\n\n  _updateSourceDataInfo(e, t) {\n    t.srcWidth = 0, t.srcHeight = 0;\n    const i = this.rasterInfo.spatialReference,\n          {\n      srcResolution: o,\n      datumTransformation: r\n    } = t,\n          {\n      pyramidLevel: n,\n      pyramidResolution: s,\n      excessiveReading: l\n    } = D(o, this.rasterInfo, this.ioConfig.sampling);\n    if (l) return;\n    let c = t.srcExtent || F(e, i, r);\n    if (null == c) return;\n    const m = a(this.rasterInfo.transform);\n    m && (c = m.inverseTransform(c)), t.srcExtent = c;\n    const f = Math.ceil((c.xmax - c.xmin) / s.x - .1),\n          h = Math.ceil((c.ymax - c.ymin) / s.y - .1);\n    t.pyramidLevel = n, t.pyramidResolution = s, t.srcWidth = f, t.srcHeight = h;\n  }\n\n  _getRequestOptionsWithSliceId(e) {\n    return n(this.rasterInfo.multidimensionalInfo) && null == e.sliceId && (e = { ...e,\n      sliceId: this.getSliceIndex(e.multidimensionalDefinition)\n    }), e;\n  }\n\n  _processIdentifyResult(e, t) {\n    const {\n      srcLocation: i,\n      position: o,\n      pyramidLevel: r,\n      useTransposedTile: l\n    } = t,\n          c = e.pixels[0].length / e.width / e.height;\n    if (!(!e.mask || e.mask[o])) return {\n      location: i,\n      value: null\n    };\n    const {\n      multidimensionalInfo: m\n    } = this.rasterInfo;\n\n    if (s(m) || !l) {\n      const t = e.pixels.map(e => e[o]),\n            n = {\n        location: i,\n        value: t,\n        pyramidLevel: r\n      },\n            s = this._computeMagDirValues(t.map(e => [e]));\n\n      return s?.length && (n.magdirValue = s.map(e => e[0])), n;\n    }\n\n    let f = e.pixels.map(e => e.slice(o * c, o * c + c)),\n        h = this._computeMagDirValues(f);\n\n    const {\n      requestSomeSlices: u,\n      identifyOptions: p\n    } = t;\n    let d = k(m, p.transposedVariableName);\n\n    if (u) {\n      const e = S(d, a(p.multidimensionalDefinition), a(p.timeExtent));\n      f = f.map(t => e.map(e => t[e])), h = h?.map(t => e.map(e => t[e])), d = e.map(e => d[e]);\n    }\n\n    const y = e.noDataValues || this.rasterInfo.noDataValue,\n          g = {\n      pixels: f,\n      pixelType: e.pixelType\n    };\n    let I;\n    n(y) && (M(g, y), I = g.mask);\n    return {\n      location: i,\n      value: null,\n      dataSeries: d.map((e, t) => {\n        const i = {\n          value: 0 === I?.[t] ? null : f.map(e => e[t]),\n          multidimensionalDefinition: e.multidimensionalDefinition.map(e => new x({ ...e,\n            isSlice: !0\n          }))\n        };\n        return h?.length && (i.magdirValue = [h[0][t], h[1][t]]), i;\n      }),\n      pyramidLevel: r\n    };\n  }\n\n};\ne([f()], K.prototype, \"_rasterTileAlighmentInfo\", void 0), e([f({\n  readOnly: !0\n})], K.prototype, \"_isGlobalWrappableSource\", null), e([f(d)], K.prototype, \"url\", null), e([f({\n  type: String,\n  json: {\n    write: !0\n  }\n})], K.prototype, \"datasetName\", void 0), e([f({\n  type: String,\n  json: {\n    write: !0\n  }\n})], K.prototype, \"datasetFormat\", void 0), e([f()], K.prototype, \"hasUniqueSourceStorageInfo\", void 0), e([f()], K.prototype, \"rasterInfo\", void 0), e([f()], K.prototype, \"ioConfig\", void 0), e([f()], K.prototype, \"sourceJSON\", void 0), K = e([u(\"esri.layers.support.rasterDatasets.BaseRaster\")], K);\nconst Q = K;\nexport { Q as default };","map":{"version":3,"names":["_","e","t","i","JSONSupport","o","r","isSome","n","isNone","s","unwrap","a","unwrapOrThrow","l","EsriPromiseMixin","c","onAbort","m","property","f","ensureClass","h","subclass","u","sanitizeUrl","p","url","d","x","y","g","I","isMultiSliceOrRangeDefinition","R","getSliceIndex","w","createSlices","k","getSliceIds","S","getRasterId","v","getBlock","T","putBlock","b","deleteBlock","B","decreaseRefCount","P","convertNoDataToMask","M","decode","W","mosaic","approximateTransform","C","getLocalArithmeticNorthRotations","j","load","H","getWorldWidth","L","projectPoint","E","snapPyramid","D","snapExtent","z","getWorldWrapCount","A","projectExtent","F","getProjectionOffsetGrid","q","getRasterDatasetAlignmentInfo","O","projectResolution","G","convertToLocalDirections","J","uvComponentToVector","N","V","U","$","X","K","constructor","arguments","rasterJobHandler","datasetName","datasetFormat","hasUniqueSourceStorageInfo","rasterInfo","ioConfig","sampling","init","addResolvingPromise","when","normalizeCtorArgs","resolution","bandIds","tileInfo","create","_isGlobalWrappableSource","spatialReference","extent","width","_set","getLogger","declaredClass","open","fetchTile","storageInfo","getTileExtentFromTileInfo","fetchPixels","size","identify","clone","normalize","multidimensionalDefinition","timeExtent","hasMultidimensionalTranspose","multidimensionalInfo","transposedVariableName","length","variableName","variables","name","_getRequestOptionsWithSliceId","datumTransformation","intersects","location","value","transform","inverseTransform","nativeExtent","primaryRasters","rasters","pixelSize","xmin","xmax","ymin","ymax","interpolation","pixelBlock","Math","floor","mask","pixels","map","processedValue","pyramidLevel","srcResolution","computeBestPyramidLevelForLocation","identifyPixelLocation","row","col","rowOffset","colOffset","blockWidth","sliceId","fetchRawTile","_processIdentifyResult","srcLocation","position","useTransposedTile","requestSomeSlices","identifyOptions","requestRawData","_fetchPixels","round","push","disableWrapAround","Promise","all","height","mosaicAndTransform","srcPixelBlocks","srcMosaicSize","destDimension","coefs","sampleSpacing","alignmentInfo","blockWidths","srcExtent","fetchRawPixels","_fetchRawTiles","nativePixelSize","pixelBlocks","mosaicSize","pyramidBlockWidth","pyramidBlockHeight","blockHeight","clipOffset","clipSize","computeExtent","decodePixelBlock","useCanvas","data","options","request","customFetchParameters","range","query","headers","retryCount","Range","from","to","lodAt","getTileExtent","origin","updateTileInfo","maximumPyramidLevel","max","level","scale","lods","isVirtualTileInfo","createRemoteDatasetStorageInfo","log","LN2","computeBlockBoundary","firstPyramidLevel","blockBoundary","minCol","maxCol","minRow","maxRow","getPyramidPixelSize","pyramidResolutions","pyramidScalingFactor","transposeInfo","tileSize","min","getBlockWidthHeight","isBlockOutside","_getSourceDataInfo","pyramidResolution","srcWidth","srcHeight","type","wrapCount","equals","requestProjectedLocalDirections","dataType","startsWith","projectedExtent","srcBufferExtent","toJSON","rasterTransform","hasWrapAround","isAdaptive","optimizeProjectionAccuracy","includeGCSGrid","rows","spacing","cols","_getRasterTileAlignmentInfo","isPartiallyFilled","coefficients","projectDirections","gcsGrid","isUV","localNorthDirections","transformGrid","buffer","worldColumnCountFromOrigin","originColumnOffset","rightPadding","Array","allowPartialFill","_fetchRawTile","then","catch","resolve","registryId","AbortController","signal","_computeMagDirValues","bandCount","_rasterTileAlighmentInfo","pyramidsInfo","startX","halfWorldWidth","hasGCSSShiftTransform","_updateSourceDataInfo","_requireTooManySrcTiles","ceil","excessiveReading","magdirValue","slice","noDataValues","noDataValue","pixelType","dataSeries","isSlice","prototype","readOnly","String","json","write","Q","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/layers/support/rasterDatasets/BaseRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../request.js\";import i from\"../../../core/Error.js\";import{JSONSupport as o}from\"../../../core/JSONSupport.js\";import r from\"../../../core/Logger.js\";import{isSome as n,isNone as s,unwrap as a,unwrapOrThrow as l}from\"../../../core/maybe.js\";import{EsriPromiseMixin as c}from\"../../../core/Promise.js\";import{onAbort as m}from\"../../../core/promiseUtils.js\";import{property as f}from\"../../../core/accessorSupport/decorators/property.js\";import{ensureClass as h}from\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as u}from\"../../../core/accessorSupport/decorators/subclass.js\";import{sanitizeUrl as p}from\"../arcgisLayerUrl.js\";import{url as d}from\"../commonProperties.js\";import x from\"../DimensionalDefinition.js\";import y from\"../LOD.js\";import g from\"../RasterStorageInfo.js\";import I from\"../TileInfo.js\";import{isMultiSliceOrRangeDefinition as R,getSliceIndex as w,createSlices as k,getSliceIds as S}from\"./multidimensionalUtils.js\";import{getRasterId as v,getBlock as T,putBlock as b,deleteBlock as B,decreaseRefCount as P}from\"./RawBlockCache.js\";import{convertNoDataToMask as M}from\"../rasterFormats/pixelRangeUtils.js\";import{decode as W}from\"../rasterFormats/RasterCodec.js\";import{mosaic as _,approximateTransform as C,getLocalArithmeticNorthRotations as j}from\"../rasterFunctions/pixelUtils.js\";import{load as H,getWorldWidth as L,projectPoint as E,snapPyramid as D,snapExtent as z,getWorldWrapCount as A,projectExtent as F,getProjectionOffsetGrid as q,getRasterDatasetAlignmentInfo as O,projectResolution as G}from\"../rasterFunctions/rasterProjectionHelper.js\";import{convertToLocalDirections as J,uvComponentToVector as N}from\"../rasterFunctions/vectorFieldUtils.js\";import V from\"../../../geometry/Extent.js\";import U from\"../../../geometry/Point.js\";const $=8,X=256;let K=class extends(c(o)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:\"closest\"}}async init(){const e=H();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:\"closest\",tileInfo:I.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=L(e.spatialReference);return n(t)&&e.extent.width>=t/2}set url(e){this._set(\"url\",p(e,r.getLogger(this.declaredClass)))}async open(e){throw new i(\"BaseRaster:open-not-implemented\",\"open() is not implemented\")}async fetchTile(e,t,i,o={}){const r=o.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(e,t,i,r);return this.fetchPixels(n,r.size[0],r.size[1],o)}async identify(e,t={}){e=h(U,e).clone().normalize();const{multidimensionalDefinition:i,timeExtent:o}=t,{rasterInfo:r}=this,{hasMultidimensionalTranspose:l,multidimensionalInfo:c}=r;let{transposedVariableName:m}=t;const f=n(c)&&l&&(null!=o||R(i));if(f&&!m){m=n(i)&&i.length>0?i[0].variableName??void 0:c.variables[0].name,t={...t,transposedVariableName:m}}t=this._getRequestOptionsWithSliceId(t);const{spatialReference:u,extent:p}=r,{datumTransformation:d}=t;let x=E(e,u,d);if(!p.intersects(x))return{location:x,value:null};if(n(r.transform)){const e=r.transform.inverseTransform(x);if(!r.nativeExtent.intersects(e))return{location:e,value:null};x=e}let y=0;const g=n(m)&&n(c)&&r.hasMultidimensionalTranspose;if(\"Function\"===this.datasetFormat){const e=this.primaryRasters.rasters[0];if(g)return e.identify(x,t);const{pixelSize:i}=r,o=3,a=i.x*o/2,l=i.y*o/2,c=new V({xmin:x.x-a,xmax:x.x+a,ymin:x.y-l,ymax:x.y+l,spatialReference:u}),m={interpolation:\"nearest\"},{pixelBlock:f}=await e.fetchPixels(c,o,o,m),{pixelBlock:h}=await this.fetchPixels(c,o,o,m);if(s(f))return{location:x,value:null};const p=Math.floor(o*o*.5),d=!f.mask||f.mask[p]?f.pixels.map((e=>e[p])):null;let y;return n(h)&&(y=!h.mask||h.mask[p]?h.pixels.map((e=>e[p])):void 0),{location:x,value:d,processedValue:y,pyramidLevel:0}}if(!g)if(t.srcResolution){y=D(t.srcResolution,r,this.ioConfig.sampling).pyramidLevel}else if(y=await this.computeBestPyramidLevelForLocation(e,t),null==y)return{location:x,value:null};const I=this.identifyPixelLocation(x,y,null,g);if(null===I)return{location:x,value:null};const{row:w,col:k,rowOffset:S,colOffset:B,blockWidth:P}=I,M=m??a(t.sliceId),W=v(this.url,M),_=`${y}/${w}/${k}`;let C=T(W,null,_);s(C)&&(C=this.fetchRawTile(y,w,k,t),b(W,null,_,C));const j=await C;if(s(j)||!j.pixels?.length)return{location:x,value:null};const H=S*P+B;return this._processIdentifyResult(j,{srcLocation:x,position:H,pyramidLevel:y,useTransposedTile:!!g,requestSomeSlices:f,identifyOptions:t})}async fetchPixels(e,t,i,o={}){if(e=z(e),(o=this._getRequestOptionsWithSliceId(o)).requestRawData)return this._fetchPixels(e,t,i,o);const r=L(e.spatialReference),n=A(e);if(s(r)||0===n||1===n&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,i,o);if(n>=3)return{extent:e,pixelBlock:null};const a=[],{xmin:l,xmax:c}=e,m=Math.round(r/(c-l)*t),f=m-Math.round((r/2-l)/(c-l)*t);let h=0;const u=[];for(let s=0;s<=n;s++){const p=new V({xmin:0===s?l:-r/2,xmax:s===n?c-r*s:r/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),d=0===s?m-f:s===n?t-h:m;h+=d,u.push(d);const x=o.disableWrapAround&&s>0?null:this._fetchPixels(p,d,i,o);a.push(x)}const p=(await Promise.all(a)).map((e=>e?.pixelBlock));let d=null;const x={width:t,height:i};if(this.rasterJobHandler){d=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:\"nearest\",alignmentInfo:null,blockWidths:u},o)).pixelBlock}else d=_(p,x,{blockWidths:u});return{extent:e,srcExtent:F(e,this.rasterInfo.spatialReference,o.datumTransformation),pixelBlock:d}}async fetchRawPixels(e,t,i,o={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const r=await this._fetchRawTiles(e,t,i,o),{nativeExtent:s,nativePixelSize:a,storageInfo:l}=this.rasterInfo,c=2**e,m=a.x*c,f=a.y*c,h=new V({xmin:s.xmin+m*t.x,xmax:s.xmin+m*(t.x+i.width-1),ymin:s.ymax-f*(t.y+i.height-1),ymax:s.ymax-f*t.y,spatialReference:s.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:u,mosaicSize:p}=r;if(1===u.length&&n(u[0])&&u[0].width===i.width&&u[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const d=e>0?l.pyramidBlockWidth:l.blockWidth,x=e>0?l.pyramidBlockHeight:l.blockHeight,y={x:t.x%d,y:t.y%x};let g;if(this.rasterJobHandler){g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:u,srcMosaicSize:p,destDimension:i,clipOffset:y,clipSize:i,coefs:null,sampleSpacing:null,interpolation:o.interpolation,alignmentInfo:null,blockWidths:null},o)).pixelBlock}else g=_(u,p,{clipOffset:y,clipSize:i});return{extent:h,srcExtent:h,pixelBlock:g}}fetchRawTile(e,t,o,r){throw new i(\"BaseRaster:read-not-implemented\",\"fetchRawTile() is not implemented\")}computeExtent(e){return F(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?W(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,i,o=0){const{customFetchParameters:r}=this.ioConfig,{range:n,query:s,headers:a}=i;o=o??i.retryCount??this.ioConfig.retryCount;const l=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await t(e,{...i,query:{...s,...r},headers:{...a,...l}})}catch(c){if(o>0)return o--,this.request(e,i,o);throw c}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;return s(t)||s(e)||0===e.length?null:w(e,t)}getTileExtentFromTileInfo(e,t,i,o){const r=l(o.lodAt(e));return this.getTileExtent({x:r.resolution,y:r.resolution},t,i,o.origin,o.spatialReference,o.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:o}=this.rasterInfo;if(!e.tileInfo){const r=[],n=e.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let e=0;e<=n;e++)r.push(new y({level:n-e,resolution:s,scale:a})),s*=2,a*=2;const l=new U({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new I({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,o){const{width:r,height:n,nativeExtent:s,pixelSize:a,spatialReference:l}=e,c=new U({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const m=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[a],o);e.storageInfo=new g({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:m})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,o,r,n=0,s=2){if(1===r.length&&n>0){r=[...r];let{x:e,y:t}=r[0];for(let i=0;i<n;i++)e*=s,t*=s,r.push({x:e,y:t})}const a=[],{x:l,y:c}=o;for(let m=0;m<r.length;m++){const{x:o,y:n}=r[m];a.push({minCol:Math.floor((e.xmin-l+.1*o)/t/o),maxCol:Math.floor((e.xmax-l-.1*o)/t/o),minRow:Math.floor((c-e.ymax+.1*n)/i/n),maxRow:Math.floor((c-e.ymin-.1*n)/i/n)})}return a}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:o}=this.rasterInfo.storageInfo;if(0===e)return t;if(n(i)&&i.length)return i[e-1];const r=o**e;return{x:t.x*r,y:t.y*r}}identifyPixelLocation(e,t,i,o){const{spatialReference:r,nativeExtent:s,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:c,transposeInfo:m}=a,f=o&&n(m)?m.tileSize[0]:a.blockWidth,h=o&&n(m)?m.tileSize[1]:a.blockHeight,u=E(e,r,i);if(!s.intersects(u))return null;if(t<0||t>l)return null;const p=this.getPyramidPixelSize(t),{x:d,y:x}=p,y=(c.y-u.y)/x/h,g=(u.x-c.x)/d/f,I=Math.min(h-1,Math.floor((y-Math.floor(y))*h)),R=Math.min(f-1,Math.floor((g-Math.floor(g))*f));return{pyramidLevel:t,row:Math.floor(y),col:Math.floor(g),rowOffset:I,colOffset:R,blockWidth:f,srcLocation:u}}getTileExtent(e,t,i,o,r,n){const[s,a]=n,l=o.x+i*s*e.x,c=l+s*e.x,m=o.y-t*a*e.y,f=m-a*e.y;return new V({xmin:l,xmax:c,ymin:f,ymax:m,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const o=this.rasterInfo.storageInfo.blockBoundary[e];return!o||o.maxRow<t||o.maxCol<i||o.minRow>t||o.minCol>i}async _fetchPixels(e,t,i,o={}){let r=A(e);if(r>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,i,o),{pyramidLevel:l,pyramidResolution:c,srcResolution:m,srcExtent:f,srcWidth:h,srcHeight:u}=s;if(0===h||0===u)return{extent:e,srcExtent:f,pixelBlock:null};const p=a(this.rasterInfo.transform),d=\"gcs-shift\"===p?.type,x=n(L(e.spatialReference));!d&&x||(r=A(s.srcExtent,d));const y=this.rasterInfo.storageInfo,g={x:Math.floor((f.xmin-y.origin.x)/c.x+.1),y:Math.floor((y.origin.y-f.ymax)/c.y+.1)},I=await this._fetchRawTiles(l,g,{width:h,height:u,wrapCount:r},o);if(!I)return{extent:e,srcExtent:f,pixelBlock:null};const R=l>0?y.pyramidBlockWidth:y.blockWidth,w=l>0?y.pyramidBlockHeight:y.blockHeight,k=R===h&&w===u&&g.x%R==0&&g.y%w==0,S=new U({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),v=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:T}=o;if(!v&&k&&1===I.pixelBlocks.length&&R===t&&w===i&&m.x===S.x&&m.y===S.y)return{extent:e,srcExtent:f,pixelBlock:I.pixelBlocks[0]};const b=x&&n(L(f.spatialReference)),B=o.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith(\"vector\");B&&!this.rasterJobHandler&&await H();const P=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:I.extent,pixelSize:S.toJSON(),datumTransformation:T,rasterTransform:p,hasWrapAround:r>0||b,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:B},o):q({projectedExtent:e,srcBufferExtent:I.extent,pixelSize:S,datumTransformation:T,rasterTransform:p,hasWrapAround:r>0||b,isAdaptive:!1,includeGCSGrid:B});let M;const W=!o.requestRawData,E={rows:P.spacing[0],cols:P.spacing[1]},D=a(this._getRasterTileAlignmentInfo(l,I.extent.xmin)),{pixelBlocks:z,mosaicSize:F,isPartiallyFilled:O}=I;let G=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:z,srcMosaicSize:F,destDimension:W?{width:t,height:i}:null,coefs:W?P.coefficients:null,sampleSpacing:W?E:null,projectDirections:B,gcsGrid:B?P.gcsGrid:null,isUV:\"vector-uv\"===this.rasterInfo.dataType,interpolation:o.interpolation,alignmentInfo:D,blockWidths:null},o);({pixelBlock:M,localNorthDirections:G}=e)}else{const e=_(z,F,{alignmentInfo:D});M=W?C(e,{width:t,height:i},P.coefficients,E,o.interpolation):e,B&&P.gcsGrid&&(G=j({width:t,height:i},P.gcsGrid),M=J(M,this.rasterInfo.dataType,G))}return o.requestRawData||B?{srcExtent:f,pixelBlock:M,transformGrid:P,localNorthDirections:G,extent:e,isPartiallyFilled:O}:{srcExtent:f,extent:e,pixelBlock:M}}async _fetchRawTiles(e,t,i,o){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:m}=t,{width:f,height:h,wrapCount:u}=i;const p=this._getRasterTileAlignmentInfo(e,0);o.buffer&&(c-=o.buffer.cols,m-=o.buffer.rows,f+=2*o.buffer.cols,h+=2*o.buffer.rows);let d=0,x=0,y=0;if(u&&n(p)){({worldColumnCountFromOrigin:x,originColumnOffset:y,rightPadding:d}=p);x*p.blockWidth-d>=c+f&&(d=0)}const g=Math.floor(c/a),I=Math.floor(m/l),R=Math.floor((c+f+d-1)/a),w=Math.floor((m+h+d-1)/l),k=s[e];if(!k)return null;const{minRow:S,minCol:v,maxCol:T,maxRow:b}=k;if(0===u&&(w<S||R<v||I>b||g>T))return null;const B=new Array;let P=!1;const M=null==this.ioConfig.allowPartialFill?o.allowPartialFill:this.ioConfig.allowPartialFill;for(let E=I;E<=w;E++)for(let t=g;t<=R;t++){let i=t;if(!o.disableWrapAround&&u&&n(p)&&x<=t&&(i=t-x-y),E>=S&&i>=v&&b>=E&&T>=i){const t=this._fetchRawTile(e,E,i,o);M?B.push(new Promise((e=>{t.then((t=>e(t))).catch((()=>{P=!0,e(null)}))}))):B.push(t)}else B.push(Promise.resolve(null))}if(0===B.length)return null;const W=await Promise.all(B),_={height:(w-I+1)*l,width:(R-g+1)*a},{spatialReference:C}=this.rasterInfo,j=this.getPyramidPixelSize(e),{x:H,y:L}=j;return{extent:new V({xmin:r.x+g*a*H,xmax:r.x+(R+1)*a*H,ymin:r.y-(w+1)*l*L,ymax:r.y-I*l*L,spatialReference:C}),pixelBlocks:W,mosaicSize:_,isPartiallyFilled:P}}_fetchRawTile(e,t,i,o){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:l,maxRow:c}=r;if(t<n||i<a||t>c||i>l)return Promise.resolve(null);const f=v(this.url,o.sliceId),h=`${e}/${t}/${i}`;let u=T(f,o.registryId,h);if(s(u)){const r=new AbortController;u=this.fetchRawTile(e,t,i,{...o,signal:r.signal}),b(f,o.registryId,h,u,r),u.catch((()=>B(f,o.registryId,h)))}return o.signal&&m(o,(()=>{P(f,o.registryId,h)})),u}_computeMagDirValues(e){const{bandCount:t,dataType:i}=this.rasterInfo;if(!(2===t&&\"vector-magdir\"===i||\"vector-uv\"===i)||2!==e?.length||!e[0]?.length)return null;const o=e[0].length;if(\"vector-magdir\"===i){const t=e[1].map((e=>(e+360)%360));return[e[0],t]}const[r,n]=e,s=[],a=[];for(let l=0;l<o;l++){const[e,t]=N([r[l],n[l]]);s.push(e),a.push(t)}return[s,a]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=O(this.rasterInfo)),s(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i,o={}){const r={datumTransformation:o.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};o.srcResolution&&(r.srcResolution=o.srcResolution,this._updateSourceDataInfo(e,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:a,pyramidLevel:l}=r,c=s/t,m=a/i,f=l<n&&c*m>=16,h=l===n&&this._requireTooManySrcTiles(s,a,t,i);if(f||h||(0===s||0===a)){const s=new U({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let a=G(s,this.rasterInfo.spatialReference,e,r.datumTransformation);const h=!a||o.srcResolution&&a.x+a.y<o.srcResolution.x+o.srcResolution.y;if(f&&o.srcResolution&&h){const e=Math.round(Math.log(Math.max(c,m))/Math.LN2)-1;if(n-l+3>=e){const t=2**e;a={x:o.srcResolution.x*t,y:o.srcResolution.y*t}}}a&&(r.srcResolution=a,this._updateSourceDataInfo(e,r))}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,t,i)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(e,t,i,o){const{tileInfo:r}=this.rasterInfo.storageInfo;return Math.ceil(e/r.size[0])*Math.ceil(t/r.size[1])>=X||e/i>$||t/o>$}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:o,datumTransformation:r}=t,{pyramidLevel:n,pyramidResolution:s,excessiveReading:l}=D(o,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||F(e,i,r);if(null==c)return;const m=a(this.rasterInfo.transform);m&&(c=m.inverseTransform(c)),t.srcExtent=c;const f=Math.ceil((c.xmax-c.xmin)/s.x-.1),h=Math.ceil((c.ymax-c.ymin)/s.y-.1);t.pyramidLevel=n,t.pyramidResolution=s,t.srcWidth=f,t.srcHeight=h}_getRequestOptionsWithSliceId(e){return n(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){const{srcLocation:i,position:o,pyramidLevel:r,useTransposedTile:l}=t,c=e.pixels[0].length/e.width/e.height;if(!(!e.mask||e.mask[o]))return{location:i,value:null};const{multidimensionalInfo:m}=this.rasterInfo;if(s(m)||!l){const t=e.pixels.map((e=>e[o])),n={location:i,value:t,pyramidLevel:r},s=this._computeMagDirValues(t.map((e=>[e])));return s?.length&&(n.magdirValue=s.map((e=>e[0]))),n}let f=e.pixels.map((e=>e.slice(o*c,o*c+c))),h=this._computeMagDirValues(f);const{requestSomeSlices:u,identifyOptions:p}=t;let d=k(m,p.transposedVariableName);if(u){const e=S(d,a(p.multidimensionalDefinition),a(p.timeExtent));f=f.map((t=>e.map((e=>t[e])))),h=h?.map((t=>e.map((e=>t[e])))),d=e.map((e=>d[e]))}const y=e.noDataValues||this.rasterInfo.noDataValue,g={pixels:f,pixelType:e.pixelType};let I;n(y)&&(M(g,y),I=g.mask);return{location:i,value:null,dataSeries:d.map(((e,t)=>{const i={value:0===I?.[t]?null:f.map((e=>e[t])),multidimensionalDefinition:e.multidimensionalDefinition.map((e=>new x({...e,isSlice:!0})))};return h?.length&&(i.magdirValue=[h[0][t],h[1][t]]),i})),pyramidLevel:r}}};e([f()],K.prototype,\"_rasterTileAlighmentInfo\",void 0),e([f({readOnly:!0})],K.prototype,\"_isGlobalWrappableSource\",null),e([f(d)],K.prototype,\"url\",null),e([f({type:String,json:{write:!0}})],K.prototype,\"datasetName\",void 0),e([f({type:String,json:{write:!0}})],K.prototype,\"datasetFormat\",void 0),e([f()],K.prototype,\"hasUniqueSourceStorageInfo\",void 0),e([f()],K.prototype,\"rasterInfo\",void 0),e([f()],K.prototype,\"ioConfig\",void 0),e([f()],K.prototype,\"sourceJSON\",void 0),K=e([u(\"esri.layers.support.rasterDatasets.BaseRaster\")],K);const Q=K;export{Q as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}