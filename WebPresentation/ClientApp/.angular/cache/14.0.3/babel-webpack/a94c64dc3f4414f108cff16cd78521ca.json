{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport { _ as e } from \"../../../chunks/tslib.es6.js\";\nimport \"../../../geometry.js\";\nimport t from \"../../../core/Error.js\";\nimport { isNone as r, isSome as o } from \"../../../core/maybe.js\";\nimport { property as i } from \"../../../core/accessorSupport/decorators/property.js\";\nimport \"../../../core/accessorSupport/ensureType.js\";\nimport \"../../../core/arrayUtils.js\";\nimport { subclass as s } from \"../../../core/accessorSupport/decorators/subclass.js\";\nimport a from \"../LOD.js\";\nimport n from \"../RasterInfo.js\";\nimport l from \"../RasterStorageInfo.js\";\nimport f from \"../TileInfo.js\";\nimport m from \"./BaseRaster.js\";\nimport c from \"./DBFParser.js\";\nimport { isTransformSupported as p, readTransform as d } from \"../rasterTransforms/utils.js\";\nimport u from \"../../../rest/support/FeatureSet.js\";\nimport h from \"../../../geometry/SpatialReference.js\";\nimport g from \"../../../geometry/Extent.js\";\nimport y from \"../../../geometry/Point.js\";\nconst x = new Map();\nx.set(\"int16\", \"esriFieldTypeSmallInteger\"), x.set(\"int32\", \"esriFieldTypeInteger\"), x.set(\"int64\", \"esriFieldTypeInteger\"), x.set(\"float32\", \"esriFieldTypeSingle\"), x.set(\"float64\", \"esriFieldTypeDouble\"), x.set(\"text\", \"esriFieldTypeString\");\nconst S = 8;\nlet I = class extends m {\n  constructor() {\n    super(...arguments), this.storageInfo = null, this.datasetFormat = \"CRF\";\n  }\n\n  open(e) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.init();\n      const {\n        data: r\n      } = yield _this.request(_this.url + \"/conf.json\", {\n        signal: e?.signal\n      });\n      if (!_this._validateHeader(r)) throw new t(\"cloudraster:open\", \"Invalid or unsupported conf.json.\");\n      _this.datasetName = _this.url.slice(_this.url.lastIndexOf(\"/\") + 1);\n\n      const {\n        storageInfo: o,\n        rasterInfo: i\n      } = _this._parseHeader(r);\n\n      if (\"thematic\" === i.dataType) {\n        const e = yield _this._fetchAuxiliaryInformation();\n        i.attributeTable = e;\n      }\n\n      _this._set(\"storageInfo\", o), _this._set(\"rasterInfo\", i), _this.ioConfig.retryCount = _this.ioConfig.retryCount || 0;\n    })();\n  }\n\n  fetchRawTile(e, t, r, o = {}) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        transposeInfo: i\n      } = _this2.rasterInfo.storageInfo,\n            {\n        transposedVariableName: s\n      } = o,\n            a = !(!i || !s),\n            n = a ? 0 : _this2.rasterInfo.storageInfo.maximumPyramidLevel - e;\n      if (n < 0) return null;\n\n      const l = _this2._buildCacheFilePath(n, t, r, o.multidimensionalDefinition, s),\n            f = _this2._getIndexRecordFromBundle(t, r, a),\n            m = yield _this2.request(l, {\n        range: {\n          from: 0,\n          to: _this2.storageInfo.headerSize - 1\n        },\n        responseType: \"array-buffer\",\n        signal: o.signal\n      });\n\n      if (!m) return null;\n\n      const c = new Uint8Array(m.data),\n            p = _this2._getTileEndAndContentType(c, f);\n\n      if (0 === p.recordSize) return null;\n      const d = yield _this2.request(l, {\n        range: {\n          from: p.position,\n          to: p.position + p.recordSize\n        },\n        responseType: \"array-buffer\",\n        signal: o.signal\n      });\n      if (!d) return null;\n\n      const [u, h] = _this2._getTileSize(a);\n\n      return _this2.decodePixelBlock(d.data, {\n        width: u,\n        height: h,\n        planes: null,\n        pixelType: null,\n        returnInterleaved: a\n      });\n    })();\n  }\n\n  _validateHeader(e) {\n    const t = [\"origin\", \"extent\", \"geodataXform\", \"LODInfos\", \"blockWidth\", \"blockHeight\", \"bandCount\", \"pixelType\", \"pixelSizeX\", \"pixelSizeY\", \"format\", \"packetSize\"];\n    return e && \"RasterInfo\" === e.type && !t.some(t => !e[t]);\n  }\n\n  _parseHeader(e) {\n    const t = [\"u1\", \"u2\", \"u4\", \"u8\", \"s8\", \"u16\", \"s16\", \"u32\", \"s32\", \"f32\", \"f64\"][e.pixelType],\n          {\n      bandCount: r,\n      histograms: o,\n      colormap: i,\n      blockWidth: s,\n      blockHeight: m,\n      firstPyramidLevel: c,\n      maximumPyramidLevel: p\n    } = e,\n          d = e.statistics && e.statistics.map(e => ({\n      min: e.min,\n      max: e.max,\n      avg: e.mean,\n      stddev: e.standardDeviation,\n      median: e.median,\n      mode: e.mode\n    })),\n          u = e.extent.spatialReference,\n          x = e.geodataXform?.spatialReference,\n          I = new h(u?.wkid || u?.wkt ? u : x);\n    let w = new g({\n      xmin: e.extent.xmin,\n      ymin: e.extent.ymin,\n      xmax: e.extent.xmax,\n      ymax: e.extent.ymax,\n      spatialReference: I\n    });\n\n    const _ = new y({\n      x: e.pixelSizeX,\n      y: e.pixelSizeY,\n      spatialReference: I\n    }),\n          v = Math.round((w.xmax - w.xmin) / _.x),\n          b = Math.round((w.ymax - w.ymin) / _.y),\n          z = this._parseTransform(e.geodataXform),\n          T = z ? w : null;\n\n    z && (w = z.forwardTransform(w), _.x = (w.xmax - w.xmin) / v, _.y = (w.ymax - w.ymin) / b);\n    const k = e.properties ?? {},\n          j = e.format.toLowerCase().replace(\"cache/\", \"\"),\n          C = new y(e.origin.x, e.origin.y, I);\n    let R, F, P, H;\n    if (i && i.colors) for (R = [], F = 0; F < i.colors.length; F++) P = i.colors[F], H = i.values ? i.values[F] : F, R.push([H, 255 & P, P << 16 >>> 24, P << 8 >>> 24, P >>> 24]);\n    const D = e.LODInfos,\n          L = [];\n\n    for (F = 0; F < D.levels.length; F++) L.push(new a({\n      level: D.levels[F],\n      resolution: D.resolutions[F],\n      scale: 96 / .0254 * D.resolutions[F]\n    }));\n\n    const M = new f({\n      dpi: 96,\n      lods: L,\n      format: j,\n      origin: C,\n      size: [s, m],\n      spatialReference: I\n    }),\n          O = {\n      recordSize: S,\n      packetSize: e.packetSize,\n      headerSize: e.packetSize * e.packetSize * S + 64\n    },\n          B = [{\n      maxCol: Math.ceil(v / s) - 1,\n      maxRow: Math.ceil(b / m) - 1,\n      minCol: 0,\n      minRow: 0\n    }];\n    let $ = 2;\n    if (p > 0) for (F = 0; F < p; F++) B.push({\n      maxCol: Math.ceil(v / $ / s) - 1,\n      maxRow: Math.ceil(b / $ / m) - 1,\n      minCol: 0,\n      minRow: 0\n    }), $ *= 2;\n    const N = e.mdInfo;\n    let q = null;\n\n    if (N && k._yxs) {\n      const e = k._yxs;\n      q = {\n        packetSize: e.PacketSize,\n        tileSize: [e.TileXSize, e.TileYSize]\n      };\n    }\n\n    return {\n      storageInfo: O,\n      rasterInfo: new n({\n        width: v,\n        height: b,\n        pixelType: t,\n        bandCount: r,\n        extent: w,\n        nativeExtent: T,\n        transform: z,\n        spatialReference: I,\n        pixelSize: _,\n        keyProperties: k,\n        statistics: d,\n        histograms: o,\n        multidimensionalInfo: N,\n        colormap: R,\n        storageInfo: new l({\n          blockWidth: s,\n          blockHeight: m,\n          pyramidBlockWidth: s,\n          pyramidBlockHeight: m,\n          origin: C,\n          tileInfo: M,\n          transposeInfo: q,\n          firstPyramidLevel: c,\n          maximumPyramidLevel: p,\n          blockBoundary: B\n        })\n      })\n    };\n  }\n\n  _parseTransform(e) {\n    if (!p(e)) throw new t(\"cloudraster:open\", \"the data contains unsupported geodata transform types\");\n    const r = d(e);\n    if (\"identity\" === r.type) return null;\n    if (\"polynomial\" !== r.type || !r.forwardCoefficients?.length || !r.inverseCoefficients?.length) throw new t(\"cloudraster:open\", \"the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently\");\n    return r;\n  }\n\n  _fetchAuxiliaryInformation(e) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const t = _this3.request(_this3.url + \"/conf.vat.json\", {\n        signal: e\n      }).then(e => e.data).catch(() => null),\n            r = _this3.request(_this3.url + \"/conf.vat.dbf\", {\n        responseType: \"array-buffer\",\n        signal: e\n      }).then(e => e.data).catch(() => null),\n            o = yield Promise.all([t, r]);\n\n      let i;\n\n      if (o[0]) {\n        let e = o[0].fields;\n        const t = o[0].values;\n\n        if (e && t) {\n          e = e.map(e => ({\n            type: \"OID\" === e.name ? \"esriFieldTypeOID\" : x.get(e.type),\n            name: e.name,\n            alias: e.alias || e.name\n          }));\n          const r = t.map(e => ({\n            attributes: e\n          }));\n          e && t && (i = {\n            fields: e,\n            features: r\n          });\n        }\n      }\n\n      if (!i && o[1]) {\n        i = c.parse(o[1]).recordSet;\n      }\n\n      return u.fromJSON(i);\n    })();\n  }\n\n  _buildCacheFilePath(e, t, o, i, s) {\n    const a = this._getPackageSize(!!s),\n          n = Math.floor(t / a) * a,\n          l = Math.floor(o / a) * a,\n          f = \"R\" + this._toHexString4(n) + \"C\" + this._toHexString4(l);\n\n    let m = \"L\";\n    m += e >= 10 ? e.toString() : \"0\" + e.toString();\n    const {\n      multidimensionalInfo: c\n    } = this.rasterInfo,\n          p = i?.[0];\n    if (r(c) || !p) return `${this.url}/_alllayers/${m}/${f}.bundle`;\n    let d = \"_yxs\";\n\n    if (!s) {\n      d = c.variables.find(e => e.name === p.variableName).dimensions[0].values.indexOf(p.values[0]).toString(16);\n      const e = 4 - d.length;\n\n      for (let t = 0; t < e; t++) d = \"0\" + d;\n\n      d = \"S\" + d;\n    }\n\n    const u = this._getVariableFolderName(s || p.variableName);\n\n    return `${this.url}/_alllayers/${u}/${d}/${m}/${f}.bundle`;\n  }\n\n  _getPackageSize(e = !1) {\n    const {\n      transposeInfo: t\n    } = this.rasterInfo.storageInfo;\n    return e && o(t) ? t.packetSize ?? 0 : this.storageInfo.packetSize;\n  }\n\n  _getTileSize(e = !1) {\n    const {\n      storageInfo: t\n    } = this.rasterInfo,\n          {\n      transposeInfo: r\n    } = t;\n    return e && o(r) ? r.tileSize : t.tileInfo.size;\n  }\n\n  _getVariableFolderName(e) {\n    return \"\" === (e = e.trim()) ? \"_v\" : e.replace(/[\\{|\\}\\-]/g, \"_\").replace(\"\\\\*\", \"_v\");\n  }\n\n  _getIndexRecordFromBundle(e, t, r = !1) {\n    const o = this._getPackageSize(r),\n          i = o * (e % o) + t % o;\n\n    if (i < 0) throw new Error(\"Invalid level / row / col\");\n    return 20 + i * this.storageInfo.recordSize + 44;\n  }\n\n  _getTileEndAndContentType(e, t) {\n    const r = e.subarray(t, t + 8);\n    let o,\n        i = 0;\n\n    for (o = 0; o < 5; o++) i |= (255 & r[o]) << 8 * o;\n\n    const s = 0xffffffffff & i;\n\n    for (i = 0, o = 5; o < 8; o++) i |= (255 & r[o]) << 8 * (o - 5);\n\n    return {\n      position: s,\n      recordSize: 0xffffffffff & i\n    };\n  }\n\n  _toHexString4(e) {\n    let t = e.toString(16);\n\n    if (4 !== t.length) {\n      let e = 4 - t.length;\n\n      for (; e-- > 0;) t = \"0\" + t;\n    }\n\n    return t;\n  }\n\n};\ne([i({\n  readOnly: !0\n})], I.prototype, \"storageInfo\", void 0), e([i({\n  type: String,\n  json: {\n    write: !0\n  }\n})], I.prototype, \"datasetFormat\", void 0), I = e([s(\"esri.layers.support.rasterDatasets.CloudRaster\")], I);\nconst w = I;\nexport { w as default };","map":{"version":3,"names":["_","e","t","isNone","r","isSome","o","property","i","subclass","s","a","n","l","f","m","c","isTransformSupported","p","readTransform","d","u","h","g","y","x","Map","set","S","I","constructor","arguments","storageInfo","datasetFormat","open","init","data","request","url","signal","_validateHeader","datasetName","slice","lastIndexOf","rasterInfo","_parseHeader","dataType","_fetchAuxiliaryInformation","attributeTable","_set","ioConfig","retryCount","fetchRawTile","transposeInfo","transposedVariableName","maximumPyramidLevel","_buildCacheFilePath","multidimensionalDefinition","_getIndexRecordFromBundle","range","from","to","headerSize","responseType","Uint8Array","_getTileEndAndContentType","recordSize","position","_getTileSize","decodePixelBlock","width","height","planes","pixelType","returnInterleaved","type","some","bandCount","histograms","colormap","blockWidth","blockHeight","firstPyramidLevel","statistics","map","min","max","avg","mean","stddev","standardDeviation","median","mode","extent","spatialReference","geodataXform","wkid","wkt","w","xmin","ymin","xmax","ymax","pixelSizeX","pixelSizeY","v","Math","round","b","z","_parseTransform","T","forwardTransform","k","properties","j","format","toLowerCase","replace","C","origin","R","F","P","H","colors","length","values","push","D","LODInfos","L","levels","level","resolution","resolutions","scale","M","dpi","lods","size","O","packetSize","B","maxCol","ceil","maxRow","minCol","minRow","$","N","mdInfo","q","_yxs","PacketSize","tileSize","TileXSize","TileYSize","nativeExtent","transform","pixelSize","keyProperties","multidimensionalInfo","pyramidBlockWidth","pyramidBlockHeight","tileInfo","blockBoundary","forwardCoefficients","inverseCoefficients","then","catch","Promise","all","fields","name","get","alias","attributes","features","parse","recordSet","fromJSON","_getPackageSize","floor","_toHexString4","toString","variables","find","variableName","dimensions","indexOf","_getVariableFolderName","trim","Error","subarray","readOnly","prototype","String","json","write","default"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/layers/support/rasterDatasets/CloudRaster.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../chunks/tslib.es6.js\";import\"../../../geometry.js\";import t from\"../../../core/Error.js\";import{isNone as r,isSome as o}from\"../../../core/maybe.js\";import{property as i}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/accessorSupport/ensureType.js\";import\"../../../core/arrayUtils.js\";import{subclass as s}from\"../../../core/accessorSupport/decorators/subclass.js\";import a from\"../LOD.js\";import n from\"../RasterInfo.js\";import l from\"../RasterStorageInfo.js\";import f from\"../TileInfo.js\";import m from\"./BaseRaster.js\";import c from\"./DBFParser.js\";import{isTransformSupported as p,readTransform as d}from\"../rasterTransforms/utils.js\";import u from\"../../../rest/support/FeatureSet.js\";import h from\"../../../geometry/SpatialReference.js\";import g from\"../../../geometry/Extent.js\";import y from\"../../../geometry/Point.js\";const x=new Map;x.set(\"int16\",\"esriFieldTypeSmallInteger\"),x.set(\"int32\",\"esriFieldTypeInteger\"),x.set(\"int64\",\"esriFieldTypeInteger\"),x.set(\"float32\",\"esriFieldTypeSingle\"),x.set(\"float64\",\"esriFieldTypeDouble\"),x.set(\"text\",\"esriFieldTypeString\");const S=8;let I=class extends m{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat=\"CRF\"}async open(e){await this.init();const{data:r}=await this.request(this.url+\"/conf.json\",{signal:e?.signal});if(!this._validateHeader(r))throw new t(\"cloudraster:open\",\"Invalid or unsupported conf.json.\");this.datasetName=this.url.slice(this.url.lastIndexOf(\"/\")+1);const{storageInfo:o,rasterInfo:i}=this._parseHeader(r);if(\"thematic\"===i.dataType){const e=await this._fetchAuxiliaryInformation();i.attributeTable=e}this._set(\"storageInfo\",o),this._set(\"rasterInfo\",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,o={}){const{transposeInfo:i}=this.rasterInfo.storageInfo,{transposedVariableName:s}=o,a=!(!i||!s),n=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const l=this._buildCacheFilePath(n,t,r,o.multidimensionalDefinition,s),f=this._getIndexRecordFromBundle(t,r,a),m=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:\"array-buffer\",signal:o.signal});if(!m)return null;const c=new Uint8Array(m.data),p=this._getTileEndAndContentType(c,f);if(0===p.recordSize)return null;const d=await this.request(l,{range:{from:p.position,to:p.position+p.recordSize},responseType:\"array-buffer\",signal:o.signal});if(!d)return null;const[u,h]=this._getTileSize(a);return this.decodePixelBlock(d.data,{width:u,height:h,planes:null,pixelType:null,returnInterleaved:a})}_validateHeader(e){const t=[\"origin\",\"extent\",\"geodataXform\",\"LODInfos\",\"blockWidth\",\"blockHeight\",\"bandCount\",\"pixelType\",\"pixelSizeX\",\"pixelSizeY\",\"format\",\"packetSize\"];return e&&\"RasterInfo\"===e.type&&!t.some((t=>!e[t]))}_parseHeader(e){const t=[\"u1\",\"u2\",\"u4\",\"u8\",\"s8\",\"u16\",\"s16\",\"u32\",\"s32\",\"f32\",\"f64\"][e.pixelType],{bandCount:r,histograms:o,colormap:i,blockWidth:s,blockHeight:m,firstPyramidLevel:c,maximumPyramidLevel:p}=e,d=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),u=e.extent.spatialReference,x=e.geodataXform?.spatialReference,I=new h(u?.wkid||u?.wkt?u:x);let w=new g({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:I});const _=new y({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:I}),v=Math.round((w.xmax-w.xmin)/_.x),b=Math.round((w.ymax-w.ymin)/_.y),z=this._parseTransform(e.geodataXform),T=z?w:null;z&&(w=z.forwardTransform(w),_.x=(w.xmax-w.xmin)/v,_.y=(w.ymax-w.ymin)/b);const k=e.properties??{},j=e.format.toLowerCase().replace(\"cache/\",\"\"),C=new y(e.origin.x,e.origin.y,I);let R,F,P,H;if(i&&i.colors)for(R=[],F=0;F<i.colors.length;F++)P=i.colors[F],H=i.values?i.values[F]:F,R.push([H,255&P,P<<16>>>24,P<<8>>>24,P>>>24]);const D=e.LODInfos,L=[];for(F=0;F<D.levels.length;F++)L.push(new a({level:D.levels[F],resolution:D.resolutions[F],scale:96/.0254*D.resolutions[F]}));const M=new f({dpi:96,lods:L,format:j,origin:C,size:[s,m],spatialReference:I}),O={recordSize:S,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*S+64},B=[{maxCol:Math.ceil(v/s)-1,maxRow:Math.ceil(b/m)-1,minCol:0,minRow:0}];let $=2;if(p>0)for(F=0;F<p;F++)B.push({maxCol:Math.ceil(v/$/s)-1,maxRow:Math.ceil(b/$/m)-1,minCol:0,minRow:0}),$*=2;const N=e.mdInfo;let q=null;if(N&&k._yxs){const e=k._yxs;q={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:O,rasterInfo:new n({width:v,height:b,pixelType:t,bandCount:r,extent:w,nativeExtent:T,transform:z,spatialReference:I,pixelSize:_,keyProperties:k,statistics:d,histograms:o,multidimensionalInfo:N,colormap:R,storageInfo:new l({blockWidth:s,blockHeight:m,pyramidBlockWidth:s,pyramidBlockHeight:m,origin:C,tileInfo:M,transposeInfo:q,firstPyramidLevel:c,maximumPyramidLevel:p,blockBoundary:B})})}}_parseTransform(e){if(!p(e))throw new t(\"cloudraster:open\",\"the data contains unsupported geodata transform types\");const r=d(e);if(\"identity\"===r.type)return null;if(\"polynomial\"!==r.type||!r.forwardCoefficients?.length||!r.inverseCoefficients?.length)throw new t(\"cloudraster:open\",\"the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently\");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+\"/conf.vat.json\",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+\"/conf.vat.dbf\",{responseType:\"array-buffer\",signal:e}).then((e=>e.data)).catch((()=>null)),o=await Promise.all([t,r]);let i;if(o[0]){let e=o[0].fields;const t=o[0].values;if(e&&t){e=e.map((e=>({type:\"OID\"===e.name?\"esriFieldTypeOID\":x.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:r})}}if(!i&&o[1]){i=c.parse(o[1]).recordSet}return u.fromJSON(i)}_buildCacheFilePath(e,t,o,i,s){const a=this._getPackageSize(!!s),n=Math.floor(t/a)*a,l=Math.floor(o/a)*a,f=\"R\"+this._toHexString4(n)+\"C\"+this._toHexString4(l);let m=\"L\";m+=e>=10?e.toString():\"0\"+e.toString();const{multidimensionalInfo:c}=this.rasterInfo,p=i?.[0];if(r(c)||!p)return`${this.url}/_alllayers/${m}/${f}.bundle`;let d=\"_yxs\";if(!s){d=c.variables.find((e=>e.name===p.variableName)).dimensions[0].values.indexOf(p.values[0]).toString(16);const e=4-d.length;for(let t=0;t<e;t++)d=\"0\"+d;d=\"S\"+d}const u=this._getVariableFolderName(s||p.variableName);return`${this.url}/_alllayers/${u}/${d}/${m}/${f}.bundle`}_getPackageSize(e=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&o(t)?t.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:r}=t;return e&&o(r)?r.tileSize:t.tileInfo.size}_getVariableFolderName(e){return\"\"===(e=e.trim())?\"_v\":e.replace(/[\\{|\\}\\-]/g,\"_\").replace(\"\\\\*\",\"_v\")}_getIndexRecordFromBundle(e,t,r=!1){const o=this._getPackageSize(r),i=o*(e%o)+t%o;if(i<0)throw new Error(\"Invalid level / row / col\");return 20+i*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let o,i=0;for(o=0;o<5;o++)i|=(255&r[o])<<8*o;const s=0xffffffffff&i;for(i=0,o=5;o<8;o++)i|=(255&r[o])<<8*(o-5);return{position:s,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t=\"0\"+t}return t}};e([i({readOnly:!0})],I.prototype,\"storageInfo\",void 0),e([i({type:String,json:{write:!0}})],I.prototype,\"datasetFormat\",void 0),I=e([s(\"esri.layers.support.rasterDatasets.CloudRaster\")],I);const w=I;export{w as default};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}