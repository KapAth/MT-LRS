{"ast":null,"code":"/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport \"../../core/has.js\";\nimport { isPowerOfTwo as t } from \"../../core/mathUtils.js\";\nimport { isSome as e, isNone as i, unwrap as r } from \"../../core/maybe.js\";\nimport { checkWebGLError as o } from \"./checkWebGLError.js\";\nimport { ContextType as s } from \"./context-util.js\";\nimport { TextureType as a, TextureSamplingMode as n, TextureWrapMode as l, ResourceType as h, PixelType as p, PixelFormat as _, SizedPixelFormat as m, CompressedTextureFormat as d } from \"./enums.js\";\nconst u = {\n  target: a.TEXTURE_2D,\n  samplingMode: n.LINEAR,\n  wrapMode: l.REPEAT,\n  flipped: !1,\n  hasMipmap: !1,\n  isOpaque: !1,\n  unpackAlignment: 4,\n  preMultiplyAlpha: !1,\n  isImmutable: !1\n},\n      c = 4;\nlet E = class {\n  constructor(t, e, i = null) {\n    this._context = t, this.type = \"texture\", this._glName = null, this._samplingModeDirty = !1, this._wrapModeDirty = !1, this._wasImmutablyAllocated = !1, t.instanceCounter.increment(h.Texture, this), this._descriptor = { ...u,\n      ...e\n    };\n\n    for (const r in u) {\n      void 0 === this._descriptor[r] && (this._descriptor[r] = u[r]);\n    }\n\n    if (t.type !== s.WEBGL2 && (this._descriptor.isImmutable && (this._descriptor.isImmutable = !1), A(this._descriptor.target))) throw new Error(\"3D and array textures are not supported in WebGL1\");\n    this._descriptor.target === a.TEXTURE_CUBE_MAP ? this._setDataCubeMap(i) : this.setData(i);\n  }\n\n  get glName() {\n    return this._glName;\n  }\n\n  get descriptor() {\n    return this._descriptor;\n  }\n\n  get isDirty() {\n    return this._samplingModeDirty || this._wrapModeDirty;\n  }\n\n  dispose() {\n    this._context.gl && this._glName && (this._context.unbindTexture(this), this._context.gl.deleteTexture(this._glName), this._glName = null, this._context.instanceCounter.decrement(h.Texture, this));\n  }\n\n  release() {\n    this.dispose();\n  }\n\n  resize(t, e) {\n    const i = this._descriptor;\n\n    if (i.width !== t || i.height !== e) {\n      if (this._wasImmutablyAllocated) throw new Error(\"Immutable textures can't be resized!\");\n      i.width = t, i.height = e, this._descriptor.target === a.TEXTURE_CUBE_MAP ? this._setDataCubeMap(null) : this.setData(null);\n    }\n  }\n\n  _setDataCubeMap(t = null) {\n    for (let e = a.TEXTURE_CUBE_MAP_POSITIVE_X; e <= a.TEXTURE_CUBE_MAP_NEGATIVE_Z; e++) this._setData(t, e);\n  }\n\n  setData(t) {\n    this._setData(t);\n  }\n\n  _setData(t, i) {\n    if (!this._context || !this._context.gl) return;\n    const r = this._context.gl;\n    this._glName || (this._glName = r.createTexture()), void 0 === t && (t = null);\n    const s = this._descriptor,\n          a = i ?? s.target,\n          n = A(a);\n    null === t && (s.width = s.width || c, s.height = s.height || c, n && (s.depth = s.depth ?? 1));\n\n    const l = this._context.bindTexture(this, E.TEXTURE_UNIT_FOR_UPDATES);\n\n    this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES), E._validateTexture(this._context, s), this._configurePixelStorage(), o(r);\n    const h = s.pixelFormat;\n\n    let p = s.internalFormat ?? this._deriveInternalFormat(h, s.dataType);\n\n    if (f(t)) {\n      let e = t.width,\n          i = t.height;\n      const l = 1;\n      t instanceof HTMLVideoElement && (e = t.videoWidth, i = t.videoHeight), s.width && s.height, n && s.depth, s.isImmutable && !this._wasImmutablyAllocated && this._texStorage(a, p, s.hasMipmap, e, i, l), this._texImage(a, 0, p, e, i, l, t), o(r), s.hasMipmap && this.generateMipmap(), void 0 === s.width && (s.width = e), void 0 === s.height && (s.height = i), n && void 0 === s.depth && (s.depth = l);\n    } else {\n      const {\n        width: i,\n        height: l,\n        depth: h\n      } = s;\n      if (null == i || null == l) throw new Error(\"Width and height must be specified!\");\n      if (n && null == h) throw new Error(\"Depth must be specified!\");\n\n      if (s.isImmutable && !this._wasImmutablyAllocated && this._texStorage(a, p, s.hasMipmap, i, l, h), r.DEPTH24_STENCIL8 && p === r.DEPTH_STENCIL && (p = r.DEPTH24_STENCIL8), x(t)) {\n        const o = t.levels,\n              n = w(a, i, l, h),\n              _ = Math.min(n - 1, o.length - 1);\n\n        e(this._context.gl2) ? r.texParameteri(s.target, this._context.gl2.TEXTURE_MAX_LEVEL, _) : s.hasMipmap = s.hasMipmap && n === o.length;\n        const m = p;\n        if (!T(m)) throw new Error(\"Attempting to use compressed data with an umcompressed format!\");\n\n        this._forEachMipmapLevel((t, e, i, r) => {\n          const s = o[Math.min(t, o.length - 1)];\n\n          this._compressedTexImage(a, t, m, e, i, r, s);\n        }, _);\n      } else e(t) ? (this._texImage(a, 0, p, i, l, h, t), o(r), s.hasMipmap && this.generateMipmap()) : this._forEachMipmapLevel((t, e, i, s) => {\n        this._texImage(a, t, p, e, i, s, null), o(r);\n      });\n    }\n\n    E._applySamplingMode(r, this._descriptor), E._applyWrapMode(r, this._descriptor), E._applyAnisotropicFilteringParameters(this._context, this._descriptor), o(r), this._context.bindTexture(l, E.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  updateData(t, r, o, s, a, n, l = 0) {\n    n || console.error(\"An attempt to use uninitialized data!\"), this._glName || console.error(\"An attempt to update uninitialized texture!\");\n\n    const h = this._context.gl,\n          p = this._descriptor,\n          {\n      pixelFormat: _,\n      dataType: m,\n      target: d,\n      isImmutable: u\n    } = p,\n          c = p.internalFormat ?? this._deriveInternalFormat(_, m);\n\n    if (u && !this._wasImmutablyAllocated) throw new Error(\"Cannot update immutable texture before allocation!\");\n\n    const g = this._context.bindTexture(this, E.TEXTURE_UNIT_FOR_UPDATES, !0);\n\n    if ((r < 0 || o < 0 || s > p.width || a > p.height || r + s > p.width || o + a > p.height) && console.error(\"An attempt to update out of bounds of the texture!\"), this._configurePixelStorage(), l) {\n      if (i(this._context.gl2)) return void console.error(\"Webgl2 must be enabled to use dataRowOffset!\");\n      h.pixelStorei(this._context.gl2.UNPACK_SKIP_ROWS, l);\n    }\n\n    if (f(n) ? e(this._context.gl2) ? this._context.gl2.texSubImage2D(d, t, r, o, s, a, _, m, n) : h.texSubImage2D(d, t, r, o, _, m, n) : x(n) ? h.compressedTexSubImage2D(d, t, r, o, s, a, c, n.levels[t]) : h.texSubImage2D(d, t, r, o, s, a, _, m, n), l) {\n      if (i(this._context.gl2)) return void console.error(\"Webgl2 must be enabled to use dataRowOffset!\");\n      h.pixelStorei(this._context.gl2.UNPACK_SKIP_ROWS, 0);\n    }\n\n    this._context.bindTexture(g, E.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  updateData3D(t, e, r, o, s, a, n, l) {\n    l || console.error(\"An attempt to use uninitialized data!\"), this._glName || console.error(\"An attempt to update uninitialized texture!\");\n    const h = this._context.gl2;\n    if (i(h)) throw new Error(\"3D textures are not supported in WebGL1\");\n\n    const p = this._descriptor,\n          {\n      pixelFormat: _,\n      dataType: m,\n      isImmutable: d,\n      target: u\n    } = p,\n          c = p.internalFormat ?? this._deriveInternalFormat(_, m);\n\n    if (d && !this._wasImmutablyAllocated) throw new Error(\"Cannot update immutable texture before allocation!\");\n    A(u) || console.warn(\"Attempting to set 3D texture data on a non-3D texture\");\n\n    const g = this._context.bindTexture(this, E.TEXTURE_UNIT_FOR_UPDATES);\n\n    if (this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES), (e < 0 || r < 0 || o < 0 || s > p.width || a > p.height || n > p.depth || e + s > p.width || r + a > p.height || o + n > p.depth) && console.error(\"An attempt to update out of bounds of the texture!\"), this._configurePixelStorage(), x(l)) l = l.levels[t], h.compressedTexSubImage3D(u, t, e, r, o, s, a, n, c, l);else {\n      const i = l;\n      h.texSubImage3D(u, t, e, r, o, s, a, n, _, m, i);\n    }\n\n    this._context.bindTexture(g, E.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  generateMipmap() {\n    const t = this._descriptor;\n\n    if (!t.hasMipmap) {\n      if (this._wasImmutablyAllocated) throw new Error(\"Cannot add mipmaps to immutable texture after allocation\");\n      t.hasMipmap = !0, this._samplingModeDirty = !0, E._validateTexture(this._context, t);\n    }\n\n    t.samplingMode === n.LINEAR ? (this._samplingModeDirty = !0, t.samplingMode = n.LINEAR_MIPMAP_NEAREST) : t.samplingMode === n.NEAREST && (this._samplingModeDirty = !0, t.samplingMode = n.NEAREST_MIPMAP_NEAREST);\n\n    const e = this._context.bindTexture(this, E.TEXTURE_UNIT_FOR_UPDATES);\n\n    this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES);\n\n    this._context.gl.generateMipmap(t.target), this._context.bindTexture(e, E.TEXTURE_UNIT_FOR_UPDATES);\n  }\n\n  setSamplingMode(t) {\n    t !== this._descriptor.samplingMode && (this._descriptor.samplingMode = t, this._samplingModeDirty = !0);\n  }\n\n  setWrapMode(t) {\n    t !== this._descriptor.wrapMode && (this._descriptor.wrapMode = t, E._validateTexture(this._context, this._descriptor), this._wrapModeDirty = !0);\n  }\n\n  applyChanges() {\n    const t = this._context.gl,\n          e = this._descriptor;\n    this._samplingModeDirty && (E._applySamplingMode(t, e), this._samplingModeDirty = !1), this._wrapModeDirty && (E._applyWrapMode(t, e), this._wrapModeDirty = !1);\n  }\n\n  _deriveInternalFormat(t, e) {\n    if (this._context.type === s.WEBGL1) return t;\n\n    switch (e) {\n      case p.FLOAT:\n        switch (t) {\n          case _.RGBA:\n            return m.RGBA32F;\n\n          case _.RGB:\n            return m.RGB32F;\n\n          default:\n            throw new Error(\"Unable to derive format\");\n        }\n\n      case p.UNSIGNED_BYTE:\n        switch (t) {\n          case _.RGBA:\n            return m.RGBA8;\n\n          case _.RGB:\n            return m.RGB8;\n        }\n\n      default:\n        return t;\n    }\n  }\n\n  _configurePixelStorage() {\n    const t = this._context.gl,\n          {\n      unpackAlignment: e,\n      flipped: i,\n      preMultiplyAlpha: r\n    } = this._descriptor;\n    t.pixelStorei(t.UNPACK_ALIGNMENT, e), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, i ? 1 : 0), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r ? 1 : 0);\n  }\n\n  _texStorage(t, e, r, o, s, a) {\n    const n = this._context.gl2;\n    if (i(n)) throw new Error(\"Immutable textures are not supported in WebGL1\");\n    if (!g(e)) throw new Error(\"Immutable textures must have a sized internal format\");\n    if (!this._descriptor.isImmutable) return;\n    const l = r ? w(t, o, s, a) : 1;\n\n    if (A(t)) {\n      if (null == a) throw new Error(\"Missing depth dimension for 3D texture upload\");\n      n.texStorage3D(t, l, e, o, s, a);\n    } else n.texStorage2D(t, l, e, o, s);\n\n    this._wasImmutablyAllocated = !0;\n  }\n\n  _texImage(t, i, o, a, n, l, h) {\n    const p = this._context.gl;\n    let _ = null;\n    const m = this._context.type === s.WEBGL2,\n          d = A(t),\n          {\n      isImmutable: u,\n      pixelFormat: c,\n      dataType: E\n    } = this._descriptor;\n    if (m && (_ = p), m || !f(h)) {\n      if (u) {\n        if (e(h)) {\n          const e = h;\n\n          if (d) {\n            if (null == l) throw new Error(\"Missing depth dimension for 3D texture upload\");\n\n            _.texSubImage3D(t, i, 0, 0, 0, a, n, l, c, E, e);\n          } else p.texSubImage2D(t, i, 0, 0, a, n, c, E, e);\n        }\n      } else {\n        const e = r(h);\n\n        if (d) {\n          if (null == l) throw new Error(\"Missing depth dimension for 3D texture upload\");\n\n          _.texImage3D(t, i, o, a, n, l, 0, c, E, e);\n        } else p.texImage2D(t, i, o, a, n, 0, c, E, e);\n      }\n    } else p.texImage2D(t, 0, o, c, E, h);\n  }\n\n  _compressedTexImage(t, i, r, o, a, n, l) {\n    const h = this._context.gl;\n    let p = null;\n\n    const _ = A(t),\n          m = this._descriptor.isImmutable;\n\n    if (_) {\n      if (this._context.type !== s.WEBGL2) throw new Error(\"3D textures are not supported in WebGL1\");\n      p = h;\n    }\n\n    if (m) {\n      if (e(l)) if (_) {\n        if (null == n) throw new Error(\"Missing depth dimension for 3D texture upload\");\n        p.compressedTexSubImage3D(t, i, 0, 0, 0, o, a, n, r, l);\n      } else h.compressedTexSubImage2D(t, i, 0, 0, o, a, r, l);\n    } else if (_) {\n      if (null == n) throw new Error(\"Missing depth dimension for 3D texture upload\");\n      p.compressedTexImage3D(t, i, r, o, a, n, 0, l);\n    } else h.compressedTexImage2D(t, i, r, o, a, 0, l);\n  }\n\n  _forEachMipmapLevel(t, e = 1 / 0) {\n    let {\n      width: i,\n      height: r,\n      depth: o,\n      hasMipmap: s,\n      target: n\n    } = this._descriptor;\n    const l = n === a.TEXTURE_3D;\n    if (null == i || null == r || l && null == o) throw new Error(\"Missing texture dimensions for mipmap calculation\");\n\n    for (let a = 0; t(a, i, r, o), s && (1 !== i || 1 !== r || l && 1 !== o) && !(a >= e); ++a) i = Math.max(1, i >> 1), r = Math.max(1, r >> 1), l && (o = Math.max(1, o >> 1));\n  }\n\n  static _validateTexture(e, i) {\n    (null != i.width && i.width < 0 || null != i.height && i.height < 0 || null != i.depth && i.depth < 0) && console.error(\"Negative dimension parameters are not allowed!\");\n    const r = e.type === s.WEBGL2,\n          o = null != i.width && t(i.width) && null != i.height && t(i.height);\n    r || !i.isImmutable && !A(i.target) || console.error(\"Immutable and 3D-like textures are not supported in WebGL1!\"), r || o || (\"number\" == typeof i.wrapMode ? i.wrapMode !== l.CLAMP_TO_EDGE && console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\") : i.wrapMode.s === l.CLAMP_TO_EDGE && i.wrapMode.t === l.CLAMP_TO_EDGE || console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"), i.hasMipmap && console.error(\"Mipmapping requires power-of-two textures!\"));\n  }\n\n  static _applySamplingMode(t, e) {\n    let i = e.samplingMode,\n        r = e.samplingMode;\n    i === n.LINEAR_MIPMAP_NEAREST || i === n.LINEAR_MIPMAP_LINEAR ? (i = n.LINEAR, e.hasMipmap || (r = n.LINEAR)) : i !== n.NEAREST_MIPMAP_NEAREST && i !== n.NEAREST_MIPMAP_LINEAR || (i = n.NEAREST, e.hasMipmap || (r = n.NEAREST)), t.texParameteri(e.target, t.TEXTURE_MAG_FILTER, i), t.texParameteri(e.target, t.TEXTURE_MIN_FILTER, r);\n  }\n\n  static _applyWrapMode(t, e) {\n    \"number\" == typeof e.wrapMode ? (t.texParameteri(e.target, t.TEXTURE_WRAP_S, e.wrapMode), t.texParameteri(e.target, t.TEXTURE_WRAP_T, e.wrapMode)) : (t.texParameteri(e.target, t.TEXTURE_WRAP_S, e.wrapMode.s), t.texParameteri(e.target, t.TEXTURE_WRAP_T, e.wrapMode.t));\n  }\n\n  static _applyAnisotropicFilteringParameters(t, e) {\n    const i = t.capabilities.textureFilterAnisotropic;\n    if (!i) return;\n    t.gl.texParameterf(e.target, i.TEXTURE_MAX_ANISOTROPY, e.maxAnisotropy ?? 1);\n  }\n\n};\n\nfunction g(t) {\n  return t in m;\n}\n\nfunction T(t) {\n  return t in d;\n}\n\nfunction x(t) {\n  return e(t) && \"type\" in t && \"compressed\" === t.type;\n}\n\nfunction M(t) {\n  return e(t) && \"byteLength\" in t;\n}\n\nfunction f(t) {\n  return e(t) && !x(t) && !M(t);\n}\n\nfunction A(t) {\n  return t === a.TEXTURE_3D || t === a.TEXTURE_2D_ARRAY;\n}\n\nfunction w(t, e, i, r = 1) {\n  let o = Math.max(e, i);\n  return t === a.TEXTURE_3D && (o = Math.max(o, r)), Math.round(Math.log(o) / Math.LN2) + 1;\n}\n\nE.TEXTURE_UNIT_FOR_UPDATES = 0;\nexport { E as Texture };","map":{"version":3,"names":["isPowerOfTwo","t","isSome","e","isNone","i","unwrap","r","checkWebGLError","o","ContextType","s","TextureType","a","TextureSamplingMode","n","TextureWrapMode","l","ResourceType","h","PixelType","p","PixelFormat","_","SizedPixelFormat","m","CompressedTextureFormat","d","u","target","TEXTURE_2D","samplingMode","LINEAR","wrapMode","REPEAT","flipped","hasMipmap","isOpaque","unpackAlignment","preMultiplyAlpha","isImmutable","c","E","constructor","_context","type","_glName","_samplingModeDirty","_wrapModeDirty","_wasImmutablyAllocated","instanceCounter","increment","Texture","_descriptor","WEBGL2","A","Error","TEXTURE_CUBE_MAP","_setDataCubeMap","setData","glName","descriptor","isDirty","dispose","gl","unbindTexture","deleteTexture","decrement","release","resize","width","height","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Z","_setData","createTexture","depth","bindTexture","TEXTURE_UNIT_FOR_UPDATES","setActiveTexture","_validateTexture","_configurePixelStorage","pixelFormat","internalFormat","_deriveInternalFormat","dataType","f","HTMLVideoElement","videoWidth","videoHeight","_texStorage","_texImage","generateMipmap","DEPTH24_STENCIL8","DEPTH_STENCIL","x","levels","w","Math","min","length","gl2","texParameteri","TEXTURE_MAX_LEVEL","T","_forEachMipmapLevel","_compressedTexImage","_applySamplingMode","_applyWrapMode","_applyAnisotropicFilteringParameters","updateData","console","error","g","pixelStorei","UNPACK_SKIP_ROWS","texSubImage2D","compressedTexSubImage2D","updateData3D","warn","compressedTexSubImage3D","texSubImage3D","LINEAR_MIPMAP_NEAREST","NEAREST","NEAREST_MIPMAP_NEAREST","setSamplingMode","setWrapMode","applyChanges","WEBGL1","FLOAT","RGBA","RGBA32F","RGB","RGB32F","UNSIGNED_BYTE","RGBA8","RGB8","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texStorage3D","texStorage2D","texImage3D","texImage2D","compressedTexImage3D","compressedTexImage2D","TEXTURE_3D","max","CLAMP_TO_EDGE","LINEAR_MIPMAP_LINEAR","NEAREST_MIPMAP_LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","capabilities","textureFilterAnisotropic","texParameterf","TEXTURE_MAX_ANISOTROPY","maxAnisotropy","M","TEXTURE_2D_ARRAY","round","log","LN2"],"sources":["C:/Users/akaps/Documents/Visual Studio 2022/Projects/MT_LRS/WebPresentation/node_modules/@arcgis/core/views/webgl/Texture.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport\"../../core/has.js\";import{isPowerOfTwo as t}from\"../../core/mathUtils.js\";import{isSome as e,isNone as i,unwrap as r}from\"../../core/maybe.js\";import{checkWebGLError as o}from\"./checkWebGLError.js\";import{ContextType as s}from\"./context-util.js\";import{TextureType as a,TextureSamplingMode as n,TextureWrapMode as l,ResourceType as h,PixelType as p,PixelFormat as _,SizedPixelFormat as m,CompressedTextureFormat as d}from\"./enums.js\";const u={target:a.TEXTURE_2D,samplingMode:n.LINEAR,wrapMode:l.REPEAT,flipped:!1,hasMipmap:!1,isOpaque:!1,unpackAlignment:4,preMultiplyAlpha:!1,isImmutable:!1},c=4;let E=class{constructor(t,e,i=null){this._context=t,this.type=\"texture\",this._glName=null,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,t.instanceCounter.increment(h.Texture,this),this._descriptor={...u,...e};for(const r in u){void 0===this._descriptor[r]&&(this._descriptor[r]=u[r])}if(t.type!==s.WEBGL2&&(this._descriptor.isImmutable&&(this._descriptor.isImmutable=!1),A(this._descriptor.target)))throw new Error(\"3D and array textures are not supported in WebGL1\");this._descriptor.target===a.TEXTURE_CUBE_MAP?this._setDataCubeMap(i):this.setData(i)}get glName(){return this._glName}get descriptor(){return this._descriptor}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._context.gl&&this._glName&&(this._context.unbindTexture(this),this._context.gl.deleteTexture(this._glName),this._glName=null,this._context.instanceCounter.decrement(h.Texture,this))}release(){this.dispose()}resize(t,e){const i=this._descriptor;if(i.width!==t||i.height!==e){if(this._wasImmutablyAllocated)throw new Error(\"Immutable textures can't be resized!\");i.width=t,i.height=e,this._descriptor.target===a.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(t=null){for(let e=a.TEXTURE_CUBE_MAP_POSITIVE_X;e<=a.TEXTURE_CUBE_MAP_NEGATIVE_Z;e++)this._setData(t,e)}setData(t){this._setData(t)}_setData(t,i){if(!this._context||!this._context.gl)return;const r=this._context.gl;this._glName||(this._glName=r.createTexture()),void 0===t&&(t=null);const s=this._descriptor,a=i??s.target,n=A(a);null===t&&(s.width=s.width||c,s.height=s.height||c,n&&(s.depth=s.depth??1));const l=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES),E._validateTexture(this._context,s),this._configurePixelStorage(),o(r);const h=s.pixelFormat;let p=s.internalFormat??this._deriveInternalFormat(h,s.dataType);if(f(t)){let e=t.width,i=t.height;const l=1;t instanceof HTMLVideoElement&&(e=t.videoWidth,i=t.videoHeight),s.width&&s.height,n&&s.depth,s.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(a,p,s.hasMipmap,e,i,l),this._texImage(a,0,p,e,i,l,t),o(r),s.hasMipmap&&this.generateMipmap(),void 0===s.width&&(s.width=e),void 0===s.height&&(s.height=i),n&&void 0===s.depth&&(s.depth=l)}else{const{width:i,height:l,depth:h}=s;if(null==i||null==l)throw new Error(\"Width and height must be specified!\");if(n&&null==h)throw new Error(\"Depth must be specified!\");if(s.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(a,p,s.hasMipmap,i,l,h),r.DEPTH24_STENCIL8&&p===r.DEPTH_STENCIL&&(p=r.DEPTH24_STENCIL8),x(t)){const o=t.levels,n=w(a,i,l,h),_=Math.min(n-1,o.length-1);e(this._context.gl2)?r.texParameteri(s.target,this._context.gl2.TEXTURE_MAX_LEVEL,_):s.hasMipmap=s.hasMipmap&&n===o.length;const m=p;if(!T(m))throw new Error(\"Attempting to use compressed data with an umcompressed format!\");this._forEachMipmapLevel(((t,e,i,r)=>{const s=o[Math.min(t,o.length-1)];this._compressedTexImage(a,t,m,e,i,r,s)}),_)}else e(t)?(this._texImage(a,0,p,i,l,h,t),o(r),s.hasMipmap&&this.generateMipmap()):this._forEachMipmapLevel(((t,e,i,s)=>{this._texImage(a,t,p,e,i,s,null),o(r)}))}E._applySamplingMode(r,this._descriptor),E._applyWrapMode(r,this._descriptor),E._applyAnisotropicFilteringParameters(this._context,this._descriptor),o(r),this._context.bindTexture(l,E.TEXTURE_UNIT_FOR_UPDATES)}updateData(t,r,o,s,a,n,l=0){n||console.error(\"An attempt to use uninitialized data!\"),this._glName||console.error(\"An attempt to update uninitialized texture!\");const h=this._context.gl,p=this._descriptor,{pixelFormat:_,dataType:m,target:d,isImmutable:u}=p,c=p.internalFormat??this._deriveInternalFormat(_,m);if(u&&!this._wasImmutablyAllocated)throw new Error(\"Cannot update immutable texture before allocation!\");const g=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES,!0);if((r<0||o<0||s>p.width||a>p.height||r+s>p.width||o+a>p.height)&&console.error(\"An attempt to update out of bounds of the texture!\"),this._configurePixelStorage(),l){if(i(this._context.gl2))return void console.error(\"Webgl2 must be enabled to use dataRowOffset!\");h.pixelStorei(this._context.gl2.UNPACK_SKIP_ROWS,l)}if(f(n)?e(this._context.gl2)?this._context.gl2.texSubImage2D(d,t,r,o,s,a,_,m,n):h.texSubImage2D(d,t,r,o,_,m,n):x(n)?h.compressedTexSubImage2D(d,t,r,o,s,a,c,n.levels[t]):h.texSubImage2D(d,t,r,o,s,a,_,m,n),l){if(i(this._context.gl2))return void console.error(\"Webgl2 must be enabled to use dataRowOffset!\");h.pixelStorei(this._context.gl2.UNPACK_SKIP_ROWS,0)}this._context.bindTexture(g,E.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(t,e,r,o,s,a,n,l){l||console.error(\"An attempt to use uninitialized data!\"),this._glName||console.error(\"An attempt to update uninitialized texture!\");const h=this._context.gl2;if(i(h))throw new Error(\"3D textures are not supported in WebGL1\");const p=this._descriptor,{pixelFormat:_,dataType:m,isImmutable:d,target:u}=p,c=p.internalFormat??this._deriveInternalFormat(_,m);if(d&&!this._wasImmutablyAllocated)throw new Error(\"Cannot update immutable texture before allocation!\");A(u)||console.warn(\"Attempting to set 3D texture data on a non-3D texture\");const g=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES);if(this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES),(e<0||r<0||o<0||s>p.width||a>p.height||n>p.depth||e+s>p.width||r+a>p.height||o+n>p.depth)&&console.error(\"An attempt to update out of bounds of the texture!\"),this._configurePixelStorage(),x(l))l=l.levels[t],h.compressedTexSubImage3D(u,t,e,r,o,s,a,n,c,l);else{const i=l;h.texSubImage3D(u,t,e,r,o,s,a,n,_,m,i)}this._context.bindTexture(g,E.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const t=this._descriptor;if(!t.hasMipmap){if(this._wasImmutablyAllocated)throw new Error(\"Cannot add mipmaps to immutable texture after allocation\");t.hasMipmap=!0,this._samplingModeDirty=!0,E._validateTexture(this._context,t)}t.samplingMode===n.LINEAR?(this._samplingModeDirty=!0,t.samplingMode=n.LINEAR_MIPMAP_NEAREST):t.samplingMode===n.NEAREST&&(this._samplingModeDirty=!0,t.samplingMode=n.NEAREST_MIPMAP_NEAREST);const e=this._context.bindTexture(this,E.TEXTURE_UNIT_FOR_UPDATES);this._context.setActiveTexture(E.TEXTURE_UNIT_FOR_UPDATES);this._context.gl.generateMipmap(t.target),this._context.bindTexture(e,E.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(t){t!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=t,this._samplingModeDirty=!0)}setWrapMode(t){t!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=t,E._validateTexture(this._context,this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const t=this._context.gl,e=this._descriptor;this._samplingModeDirty&&(E._applySamplingMode(t,e),this._samplingModeDirty=!1),this._wrapModeDirty&&(E._applyWrapMode(t,e),this._wrapModeDirty=!1)}_deriveInternalFormat(t,e){if(this._context.type===s.WEBGL1)return t;switch(e){case p.FLOAT:switch(t){case _.RGBA:return m.RGBA32F;case _.RGB:return m.RGB32F;default:throw new Error(\"Unable to derive format\")}case p.UNSIGNED_BYTE:switch(t){case _.RGBA:return m.RGBA8;case _.RGB:return m.RGB8}default:return t}}_configurePixelStorage(){const t=this._context.gl,{unpackAlignment:e,flipped:i,preMultiplyAlpha:r}=this._descriptor;t.pixelStorei(t.UNPACK_ALIGNMENT,e),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,i?1:0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r?1:0)}_texStorage(t,e,r,o,s,a){const n=this._context.gl2;if(i(n))throw new Error(\"Immutable textures are not supported in WebGL1\");if(!g(e))throw new Error(\"Immutable textures must have a sized internal format\");if(!this._descriptor.isImmutable)return;const l=r?w(t,o,s,a):1;if(A(t)){if(null==a)throw new Error(\"Missing depth dimension for 3D texture upload\");n.texStorage3D(t,l,e,o,s,a)}else n.texStorage2D(t,l,e,o,s);this._wasImmutablyAllocated=!0}_texImage(t,i,o,a,n,l,h){const p=this._context.gl;let _=null;const m=this._context.type===s.WEBGL2,d=A(t),{isImmutable:u,pixelFormat:c,dataType:E}=this._descriptor;if(m&&(_=p),m||!f(h))if(u){if(e(h)){const e=h;if(d){if(null==l)throw new Error(\"Missing depth dimension for 3D texture upload\");_.texSubImage3D(t,i,0,0,0,a,n,l,c,E,e)}else p.texSubImage2D(t,i,0,0,a,n,c,E,e)}}else{const e=r(h);if(d){if(null==l)throw new Error(\"Missing depth dimension for 3D texture upload\");_.texImage3D(t,i,o,a,n,l,0,c,E,e)}else p.texImage2D(t,i,o,a,n,0,c,E,e)}else p.texImage2D(t,0,o,c,E,h)}_compressedTexImage(t,i,r,o,a,n,l){const h=this._context.gl;let p=null;const _=A(t),m=this._descriptor.isImmutable;if(_){if(this._context.type!==s.WEBGL2)throw new Error(\"3D textures are not supported in WebGL1\");p=h}if(m){if(e(l))if(_){if(null==n)throw new Error(\"Missing depth dimension for 3D texture upload\");p.compressedTexSubImage3D(t,i,0,0,0,o,a,n,r,l)}else h.compressedTexSubImage2D(t,i,0,0,o,a,r,l)}else if(_){if(null==n)throw new Error(\"Missing depth dimension for 3D texture upload\");p.compressedTexImage3D(t,i,r,o,a,n,0,l)}else h.compressedTexImage2D(t,i,r,o,a,0,l)}_forEachMipmapLevel(t,e=1/0){let{width:i,height:r,depth:o,hasMipmap:s,target:n}=this._descriptor;const l=n===a.TEXTURE_3D;if(null==i||null==r||l&&null==o)throw new Error(\"Missing texture dimensions for mipmap calculation\");for(let a=0;t(a,i,r,o),s&&(1!==i||1!==r||l&&1!==o)&&!(a>=e);++a)i=Math.max(1,i>>1),r=Math.max(1,r>>1),l&&(o=Math.max(1,o>>1))}static _validateTexture(e,i){(null!=i.width&&i.width<0||null!=i.height&&i.height<0||null!=i.depth&&i.depth<0)&&console.error(\"Negative dimension parameters are not allowed!\");const r=e.type===s.WEBGL2,o=null!=i.width&&t(i.width)&&null!=i.height&&t(i.height);r||!i.isImmutable&&!A(i.target)||console.error(\"Immutable and 3D-like textures are not supported in WebGL1!\"),r||o||(\"number\"==typeof i.wrapMode?i.wrapMode!==l.CLAMP_TO_EDGE&&console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"):i.wrapMode.s===l.CLAMP_TO_EDGE&&i.wrapMode.t===l.CLAMP_TO_EDGE||console.error(\"Non-power-of-two textures must have a wrap mode of CLAMP_TO_EDGE!\"),i.hasMipmap&&console.error(\"Mipmapping requires power-of-two textures!\"))}static _applySamplingMode(t,e){let i=e.samplingMode,r=e.samplingMode;i===n.LINEAR_MIPMAP_NEAREST||i===n.LINEAR_MIPMAP_LINEAR?(i=n.LINEAR,e.hasMipmap||(r=n.LINEAR)):i!==n.NEAREST_MIPMAP_NEAREST&&i!==n.NEAREST_MIPMAP_LINEAR||(i=n.NEAREST,e.hasMipmap||(r=n.NEAREST)),t.texParameteri(e.target,t.TEXTURE_MAG_FILTER,i),t.texParameteri(e.target,t.TEXTURE_MIN_FILTER,r)}static _applyWrapMode(t,e){\"number\"==typeof e.wrapMode?(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode)):(t.texParameteri(e.target,t.TEXTURE_WRAP_S,e.wrapMode.s),t.texParameteri(e.target,t.TEXTURE_WRAP_T,e.wrapMode.t))}static _applyAnisotropicFilteringParameters(t,e){const i=t.capabilities.textureFilterAnisotropic;if(!i)return;t.gl.texParameterf(e.target,i.TEXTURE_MAX_ANISOTROPY,e.maxAnisotropy??1)}};function g(t){return t in m}function T(t){return t in d}function x(t){return e(t)&&\"type\"in t&&\"compressed\"===t.type}function M(t){return e(t)&&\"byteLength\"in t}function f(t){return e(t)&&!x(t)&&!M(t)}function A(t){return t===a.TEXTURE_3D||t===a.TEXTURE_2D_ARRAY}function w(t,e,i,r=1){let o=Math.max(e,i);return t===a.TEXTURE_3D&&(o=Math.max(o,r)),Math.round(Math.log(o)/Math.LN2)+1}E.TEXTURE_UNIT_FOR_UPDATES=0;export{E as Texture};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}